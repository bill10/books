import re

def locclass(loc):
	if loc[0]=='A':
		if len(loc)>2 and loc[:2]=='AC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='AC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
				if len(loc)>2 and loc[:2]=='AC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8.0:
					return 'AC1-8'
				elif len(loc)>2 and loc[:2]=='AC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
					return 'AC9-195'
				else:
					return 'AC1-195'
			elif (loc=='AC200') or (len(loc)>5 and loc[:5]=='AC200' and not loc[5].isdigit()):
				return 'AC200'
			elif len(loc)>2 and loc[:2]=='AC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=895.0:
				return 'AC801-895'
			elif len(loc)>2 and loc[:2]=='AC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
				return 'AC901-995'
			elif (loc=='AC999') or (len(loc)>5 and loc[:5]=='AC999' and not loc[5].isdigit()):
				return 'AC999'
			else:
				return 'AC1-999'
		elif len(loc)>2 and loc[:2]=='AE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
			if len(loc)>2 and loc[:2]=='AE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
				return 'AE5-(90)'
			else:
				return 'AE1-(90)'
		elif len(loc)>2 and loc[:2]=='AG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=600.0:
			return 'AG2-600'
		elif len(loc)>2 and loc[:2]=='AI' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=21.0:
			return 'AI1-21'
		elif len(loc)>2 and loc[:2]=='AM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=501.0:
			if len(loc)>2 and loc[:2]=='AM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=100.0:
				return 'AM10-100'
			elif len(loc)>2 and loc[:2]=='AM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=160.0:
				return 'AM111-160'
			elif len(loc)>2 and loc[:2]=='AM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=501.0:
				return 'AM200-(501)'
			else:
				return 'AM1-(501)'
		elif len(loc)>=2 and loc[:2]=='AN':
			return 'AN'
		elif len(loc)>2 and loc[:2]=='AP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=271.0:
			if len(loc)>2 and loc[:2]=='AP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.0:
				return 'AP101-115'
			elif len(loc)>2 and loc[:2]=='AP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=230.0:
				return 'AP200-230'
			elif len(loc)>2 and loc[:2]=='AP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
				return 'AP(250)-(265)'
			elif len(loc)>2 and loc[:2]=='AP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=271.0:
				return 'AP(270)-(271)'
			else:
				return 'AP1-(271)'
		elif len(loc)>2 and loc[:2]=='AS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=945.0:
			if len(loc)>2 and loc[:2]=='AS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4.0:
				return 'AS2.5-4'
			elif len(loc)>2 and loc[:2]=='AS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
				return 'AS11-785'
			else:
				return 'AS1-945'
		elif len(loc)>2 and loc[:2]=='AY' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2001.0:
			if len(loc)>2 and loc[:2]=='AY' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=29.0:
				return 'AY10-29'
			elif len(loc)>2 and loc[:2]=='AY' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=30.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1730.0:
				return 'AY30-1730'
			elif (loc=='AY2001') or (len(loc)>6 and loc[:6]=='AY2001' and not loc[6].isdigit()):
				return 'AY2001'
			else:
				return 'AY10-2001'
		elif len(loc)>2 and loc[:2]=='AZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='AZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=181.0:
				return 'AZ101-(181)'
			elif len(loc)>2 and loc[:2]=='AZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=193.0:
				return 'AZ191-193'
			elif len(loc)>2 and loc[:2]=='AZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=361.0:
				return 'AZ200-361'
			elif len(loc)>2 and loc[:2]=='AZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=908.0:
				return 'AZ501-908'
			else:
				return 'AZ(20)-999'
		else:
			return 'A'
	elif loc[0]=='B':
		if len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5802.0:
			if len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=69.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'B69-99'
			elif len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=108.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5802.0:
				if len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=108.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=708.0:
					return 'B108-708'
				elif len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=765.0:
					return 'B720-765'
				elif len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
					return 'B770-785'
				elif len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5802.0:
					if len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=808.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=849.0:
						return 'B808-849'
					elif len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5739.0:
						return 'B850-5739'
					elif len(loc)>1 and loc[:1]=='B' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5802.0:
						return 'B5800-5802'
					else:
						return 'B790-5802'
				else:
					return 'B108-5802'
			else:
				return 'B1-5802'
		elif len(loc)>2 and loc[:2]=='BC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
			if len(loc)>2 and loc[:2]=='BC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
				if len(loc)>2 and loc[:2]=='BC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
					return 'BC25-39'
				else:
					return 'BC11-39'
			elif len(loc)>2 and loc[:2]=='BC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'BC60-99'
			elif len(loc)>2 and loc[:2]=='BC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
				return 'BC171-199'
			else:
				return 'BC1-199'
		elif len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=701.0:
			if len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.0:
				return 'BD10-41'
			elif len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=131.0:
				return 'BD95-131'
			elif len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=143.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=237.0:
				return 'BD143-237'
			elif len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=240.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=260.0:
				return 'BD240-260'
			elif len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.0:
				return 'BD300-450'
			elif len(loc)>2 and loc[:2]=='BD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=493.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=701.0:
				return 'BD493-701'
			else:
				return 'BD10-701'
		elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.0:
			if len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=38.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=64.0:
				return 'BF38-64'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=173.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=175.5:
				return 'BF173-175.5'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=176.5:
				return 'BF176-176.5'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.7:
				return 'BF180-198.7'
			elif (loc=='BF203') or (len(loc)>5 and loc[:5]=='BF203' and not loc[5].isdigit()):
				return 'BF203'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=207.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=209.0:
				return 'BF207-209'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=231.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=299.0:
				return 'BF231-299'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=309.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'BF309-499'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=505.0:
				return 'BF501-505'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=511.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=593.0:
				return 'BF511-593'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=608.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=635.0:
				return 'BF608-635'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=636.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=637.0:
				return 'BF636-637'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=638.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=648.0:
				return 'BF638-648'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=685.0:
				return 'BF660-685'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=692.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=692.5:
				return 'BF692-692.5'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=697.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=697.5:
				return 'BF697-697.5'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=698.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=698.9:
				return 'BF698-698.9'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=699.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=711.0:
				return 'BF699-711'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=712.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=724.85:
				return 'BF712-724.85'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=727.0:
				return 'BF725-727'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=795.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=839.0:
				return 'BF795-839'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=839.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=885.0:
				return 'BF839.8-885'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=889.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=905.0:
				return 'BF889-905'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=908.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=940.0:
				return 'BF908-940'
			else:
				return 'BF1-990'
		elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1389.0:
			if len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1045.0:
				return 'BF1001-1045'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1048.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1108.0:
				return 'BF1048-1108'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1156.0:
				return 'BF1111-1156'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1171.0:
				return 'BF1161-1171'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1228.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1389.0:
				return 'BF1228-1389'
			else:
				return 'BF1001-1389'
		elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1404.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2055.0:
			if len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1444.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1486.0:
				return 'BF1444-1486'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1562.0:
				return 'BF1501-1562'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1562.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1584.0:
				return 'BF1562.5-1584'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1585.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1623.0:
				return 'BF1585-1623'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1729.0:
				return 'BF1651-1729'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1745.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1779.0:
				return 'BF1745-1779'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1783.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1815.0:
				return 'BF1783-1815'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1845.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1891.0:
				return 'BF1845-1891'
			elif len(loc)>2 and loc[:2]=='BF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2055.0:
				return 'BF2050-2055'
			else:
				return 'BF1404-2055'
		elif len(loc)>2 and loc[:2]=='BH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=301.0:
			if len(loc)>2 and loc[:2]=='BH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=81.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=208.0:
				return 'BH81-208'
			elif (loc=='BH301') or (len(loc)>5 and loc[:5]=='BH301' and not loc[5].isdigit()):
				return 'BH301'
			else:
				return 'BH1-301'
		elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1725.0:
			if len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1185.0:
				return 'BJ71-1185'
			elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1188.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1295.0:
				return 'BJ1188-1295'
			elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1298.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1335.0:
				return 'BJ1298-1335'
			elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1365.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1385.0:
				return 'BJ1365-1385'
			elif (loc=='BJ1388') or (len(loc)>6 and loc[:6]=='BJ1388' and not loc[6].isdigit()):
				return 'BJ1388'
			elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1390.5:
				return 'BJ1390-1390.5'
			elif (loc=='BJ1392') or (len(loc)>6 and loc[:6]=='BJ1392' and not loc[6].isdigit()):
				return 'BJ1392'
			elif (loc=='BJ1395') or (len(loc)>6 and loc[:6]=='BJ1395' and not loc[6].isdigit()):
				return 'BJ1395'
			elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1518.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1697.0:
				return 'BJ1518-1697'
			elif (loc=='BJ1725') or (len(loc)>6 and loc[:6]=='BJ1725' and not loc[6].isdigit()):
				return 'BJ1725'
			else:
				return 'BJ1-1725'
		elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2195.0:
			if len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2078.0:
				return 'BJ2021-2078'
			elif len(loc)>2 and loc[:2]=='BJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2139.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2156.0:
				return 'BJ2139-2156'
			elif (loc=='BJ2195') or (len(loc)>6 and loc[:6]=='BJ2195' and not loc[6].isdigit()):
				return 'BJ2195'
			else:
				return 'BJ1801-2195'
		elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2790.0:
			if len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=50.0:
				return 'BL1-50'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=65.0:
				return 'BL51-65'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=71.0:
				return 'BL70-71'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=73.0:
				return 'BL71.5-73'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=74.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'BL74-99'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
				if len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
					return 'BL175-190'
				elif (loc=='BL200') or (len(loc)>5 and loc[:5]=='BL200' and not loc[5].isdigit()):
					return 'BL200'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=216.0:
					return 'BL205-216'
				elif (loc=='BL217') or (len(loc)>5 and loc[:5]=='BL217' and not loc[5].isdigit()):
					return 'BL217'
				elif (loc=='BL218') or (len(loc)>5 and loc[:5]=='BL218' and not loc[5].isdigit()):
					return 'BL218'
				elif (loc=='BL220') or (len(loc)>5 and loc[:5]=='BL220' and not loc[5].isdigit()):
					return 'BL220'
				elif (loc=='BL221') or (len(loc)>5 and loc[:5]=='BL221' and not loc[5].isdigit()):
					return 'BL221'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=224.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=227.0:
					return 'BL224-227'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=239.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
					return 'BL239-265'
				else:
					return 'BL175-265'
			elif (loc=='BL270') or (len(loc)>5 and loc[:5]=='BL270' and not loc[5].isdigit()):
				return 'BL270'
			elif (loc=='BL290') or (len(loc)>5 and loc[:5]=='BL290' and not loc[5].isdigit()):
				return 'BL290'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
				return 'BL300-325'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=385.0:
				return 'BL350-385'
			elif (loc=='BL410') or (len(loc)>5 and loc[:5]=='BL410' and not loc[5].isdigit()):
				return 'BL410'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=425.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
				if (loc=='BL430') or (len(loc)>5 and loc[:5]=='BL430' and not loc[5].isdigit()):
					return 'BL430'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=435.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=457.0:
					return 'BL435-457'
				elif (loc=='BL458') or (len(loc)>5 and loc[:5]=='BL458' and not loc[5].isdigit()):
					return 'BL458'
				elif (loc=='BL460') or (len(loc)>5 and loc[:5]=='BL460' and not loc[5].isdigit()):
					return 'BL460'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=465.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=470.0:
					return 'BL465-470'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=473.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'BL473-490'
				else:
					return 'BL425-490'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=547.0:
				return 'BL500-547'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.0:
				return 'BL550-619'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=624.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=629.5:
				return 'BL624-629.5'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=632.5:
				return 'BL630-(632.5)'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2680.0:
				if (loc=='BL660') or (len(loc)>5 and loc[:5]=='BL660' and not loc[5].isdigit()):
					return 'BL660'
				elif (loc=='BL685') or (len(loc)>5 and loc[:5]=='BL685' and not loc[5].isdigit()):
					return 'BL685'
				elif (loc=='BL687') or (len(loc)>5 and loc[:5]=='BL687' and not loc[5].isdigit()):
					return 'BL687'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=689.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=980.0:
					if len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=820.0:
						return 'BL700-820'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=830.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=875.0:
						return 'BL830-875'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=980.0:
						return 'BL900-980'
					else:
						return 'BL689-980'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2370.0:
					if len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1035.0:
						return 'BL1000-1035'
					elif (loc=='BL1050') or (len(loc)>6 and loc[:6]=='BL1050' and not loc[6].isdigit()):
						return 'BL1050'
					elif (loc=='BL1055') or (len(loc)>6 and loc[:6]=='BL1055' and not loc[6].isdigit()):
						return 'BL1055'
					elif (loc=='BL1060') or (len(loc)>6 and loc[:6]=='BL1060' and not loc[6].isdigit()):
						return 'BL1060'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1295.0:
						return 'BL1100-1295'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1380.0:
						return 'BL1300-1380'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1590.0:
						return 'BL1500-1590'
					elif (loc=='BL1595') or (len(loc)>6 and loc[:6]=='BL1595' and not loc[6].isdigit()):
						return 'BL1595'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1695.0:
						return 'BL1600-1695'
					elif (loc=='BL1710') or (len(loc)>6 and loc[:6]=='BL1710' and not loc[6].isdigit()):
						return 'BL1710'
					elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2350.0:
						return 'BL1750-2350'
					else:
						return 'BL1000-2370'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2490.0:
					if len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2460.0:
						return 'BL2420-2460'
					else:
						return 'BL2390-2490'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2592.0:
					return 'BL2500-2592'
				elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2630.0:
					return 'BL2600-2630'
				elif (loc=='BL2670') or (len(loc)>6 and loc[:6]=='BL2670' and not loc[6].isdigit()):
					return 'BL2670'
				else:
					return 'BL660-2680'
			elif len(loc)>2 and loc[:2]=='BL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2790.0:
				return 'BL2700-2790'
			else:
				return 'BL1-2790'
		elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.0:
			if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
				if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=135.0:
					return 'BM70-135'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
					if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
						return 'BM201-449'
					else:
						return 'BM150-449'
				else:
					return 'BM1-449'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=488.8:
				return 'BM480-488.8'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=495.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=532.0:
				if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=497.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=509.0:
					if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=497.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=497.8:
						return 'BM497-497.8'
					elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=498.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=498.8:
						return 'BM498-498.8'
					elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=499.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=504.7:
						return 'BM499-504.7'
					elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=507.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=507.5:
						return 'BM507-507.5'
					elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=508.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=508.5:
						return 'BM508-508.5'
					else:
						return 'BM497-509'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=518.0:
					return 'BM510-518'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=523.7:
					return 'BM520-523.7'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=525.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=526.0:
					return 'BM525-526'
				elif (loc=='BM529') or (len(loc)>5 and loc[:5]=='BM529' and not loc[5].isdigit()):
					return 'BM529'
				else:
					return 'BM495-532'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=534.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=538.0:
				if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=534.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=536.0:
					return 'BM534-536'
				else:
					return 'BM534-538'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=545.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=582.0:
				return 'BM545-582'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=585.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=585.4:
				return 'BM585-585.4'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=591.0:
				return 'BM590-591'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.0:
				return 'BM600-645'
			elif (loc=='BM646') or (len(loc)>5 and loc[:5]=='BM646' and not loc[5].isdigit()):
				return 'BM646'
			elif (loc=='BM648') or (len(loc)>5 and loc[:5]=='BM648' and not loc[5].isdigit()):
				return 'BM648'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=747.0:
				if len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=652.7:
					return 'BM651-652.7'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=653.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=653.7:
					return 'BM653-653.7'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=654.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=655.6:
					return 'BM654-655.6'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=656.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=657.0:
					return 'BM656-657'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=679.0:
					return 'BM660-679'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
					return 'BM690-695'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=720.0:
					return 'BM700-720'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=723.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=729.0:
					return 'BM723-729'
				elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=747.0:
					return 'BM730-747'
				else:
					return 'BM650-747'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=755.0:
				return 'BM750-755'
			elif len(loc)>2 and loc[:2]=='BM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.0:
				return 'BM900-990'
			else:
				return 'BM1-990'
		elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=610.0:
			if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=253.0:
				if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.0:
					if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=42.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=48.0:
						return 'BP42-48'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.0:
						return 'BP50-68'
					else:
						return 'BP1-68'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=80.0:
					if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=77.75:
						return 'BP75-77.75'
					else:
						return 'BP70-80'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=87.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=89.0:
					return 'BP87-89'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=157.0:
					if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=134.0:
						return 'BP100-134'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=136.9:
						return 'BP135-136.9'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=137.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=137.5:
						return 'BP137-137.5'
					else:
						return 'BP100-(157)'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
					return 'BP160-165'
				elif (loc=='BP165.5') or (len(loc)>7 and loc[:7]=='BP165.5' and not loc[7].isdigit()):
					return 'BP165.5'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=166.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=166.94:
					return 'BP166-166.94'
				elif (loc=='BP167.5') or (len(loc)>7 and loc[:7]=='BP167.5' and not loc[7].isdigit()):
					return 'BP167.5'
				elif (loc=='BP168') or (len(loc)>5 and loc[:5]=='BP168' and not loc[5].isdigit()):
					return 'BP168'
				elif (loc=='BP169') or (len(loc)>5 and loc[:5]=='BP169' and not loc[5].isdigit()):
					return 'BP169'
				elif (loc=='BP170') or (len(loc)>5 and loc[:5]=='BP170' and not loc[5].isdigit()):
					return 'BP170'
				elif (loc=='BP170.2') or (len(loc)>7 and loc[:7]=='BP170.2' and not loc[7].isdigit()):
					return 'BP170.2'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=170.5:
					return 'BP170.3-170.5'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.0:
					return 'BP171-173'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=173.25 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.45:
					return 'BP173.25-173.45'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=174.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
					if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=181.0:
						return 'BP176-181'
					elif (loc=='BP182') or (len(loc)>5 and loc[:5]=='BP182' and not loc[5].isdigit()):
						return 'BP182'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=184.9:
						return 'BP184-184.9'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=186.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=186.97:
						return 'BP186-186.97'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=187.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=187.9:
						return 'BP187-187.9'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=188.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
						return 'BP188-190'
					else:
						return 'BP174-190'
				elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=253.0:
					if len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=192.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=194.9:
						return 'BP192-194.9'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=223.0:
						return 'BP221-223'
					elif (loc=='BP232') or (len(loc)>5 and loc[:5]=='BP232' and not loc[5].isdigit()):
						return 'BP232'
					elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=253.0:
						return 'BP251-253'
					else:
						return 'BP191-253'
				else:
					return 'BP1-253'
			elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
				return 'BP300-395'
			elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=585.0:
				return 'BP500-585'
			elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=595.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=597.0:
				return 'BP595-597'
			elif len(loc)>2 and loc[:2]=='BP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=610.0:
				return 'BP600-610'
			else:
				return 'BP1-610'
		elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
			if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=10.0:
				return 'BQ1-10'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=12.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=93.0:
				return 'BQ12-93'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=96.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'BQ96-99'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=102.0:
				return 'BQ100-102'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=104.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=105.0:
				return 'BQ104-105'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=107.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.0:
				return 'BQ107-109'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=126.0:
				return 'BQ115-126'
			elif (loc=='BQ128') or (len(loc)>5 and loc[:5]=='BQ128' and not loc[5].isdigit()):
				return 'BQ128'
			elif (loc=='BQ130') or (len(loc)>5 and loc[:5]=='BQ130' and not loc[5].isdigit()):
				return 'BQ130'
			elif (loc=='BQ133') or (len(loc)>5 and loc[:5]=='BQ133' and not loc[5].isdigit()):
				return 'BQ133'
			elif (loc=='BQ135') or (len(loc)>5 and loc[:5]=='BQ135' and not loc[5].isdigit()):
				return 'BQ135'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=209.0:
				return 'BQ141-209'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=219.0:
				return 'BQ210-219'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=249.0:
				if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=240.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=244.0:
					return 'BQ240-244'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=246.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=249.0:
					return 'BQ246-249'
				else:
					return 'BQ221-249'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.0:
				return 'BQ251-799'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=829.0:
				return 'BQ800-829'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=858.0:
					return 'BQ840-858'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=860.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
					if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=860.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.0:
						return 'BQ860-939'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
						return 'BQ940-999'
					else:
						return 'BQ860-999'
				else:
					return 'BQ840-999'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1045.0:
				return 'BQ1001-1045'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3340.0:
				return 'BQ1100-3340'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4060.0:
				return 'BQ4000-4060'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4061.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4570.0:
				if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4565.0:
					return 'BQ4180-4565'
				elif (loc=='BQ4570') or (len(loc)>6 and loc[:6]=='BQ4570' and not loc[6].isdigit()):
					return 'BQ4570'
				else:
					return 'BQ4061-4570'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4610.0:
				return 'BQ4600-4610'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4905.0:
				return 'BQ4620-4905'
			elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4911.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5720.0:
				if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4965.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5030.0:
					return 'BQ4965-5030'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5065.0:
					return 'BQ5035-5065'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5075.0:
					return 'BQ5070-5075'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5085.0:
					return 'BQ5080-5085'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5090.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5095.0:
					return 'BQ5090-5095'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5125.0:
					return 'BQ5100-5125'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5137.0:
					return 'BQ5130-5137'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5355.0:
					if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5305.0:
						return 'BQ5251-5305'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5350.0:
						return 'BQ5310-5350'
					else:
						return 'BQ5140-5355'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5680.0:
					if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5485.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5530.0:
						return 'BQ5485-5530'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5535.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5594.0:
						return 'BQ5535-5594'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5595.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5633.0:
						return 'BQ5595-5633'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5635.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5675.0:
						return 'BQ5635-5675'
					else:
						return 'BQ5360-5680'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5720.0:
					return 'BQ5700-5720'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5845.0:
					if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5821.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5845.0:
						return 'BQ5821-5845'
					else:
						return 'BQ5725-5845'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5899.0:
					return 'BQ5851-5899'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5975.0:
					return 'BQ5901-5975'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6160.0:
					return 'BQ6001-6160'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6240.0:
					return 'BQ6200-6240'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6388.0:
					return 'BQ6300-6388'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6495.0:
					return 'BQ6400-6495'
				elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
					if len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7285.0:
						return 'BQ7100-7285'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7529.0:
						return 'BQ7300-7529'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7530.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7950.0:
						return 'BQ7530-7950'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7960.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7989.0:
						return 'BQ7960-7989'
					elif len(loc)>2 and loc[:2]=='BQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
						return 'BQ8000-9800'
					else:
						return 'BQ7001-9800'
				else:
					return 'BQ4911-5720'
			else:
				return 'BQ1-9800'
		elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1725.0:
			if len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=67.0:
				return 'BR60-67'
			elif (loc=='BR115') or (len(loc)>5 and loc[:5]=='BR115' and not loc[5].isdigit()):
				return 'BR115'
			elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=133.5:
				return 'BR130-133.5'
			elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1510.0:
				if len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=481.0:
					if len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=275.0:
						return 'BR160-275'
					elif (loc=='BR280') or (len(loc)>5 and loc[:5]=='BR280' and not loc[5].isdigit()):
						return 'BR280'
					elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=481.0:
						return 'BR290-481'
					else:
						return 'BR160-481'
				elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1510.0:
					return 'BR500-1510'
				else:
					return 'BR140-1510'
			elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1609.0:
				return 'BR1600-1609'
			elif (loc=='BR1609.5') or (len(loc)>8 and loc[:8]=='BR1609.5' and not loc[8].isdigit()):
				return 'BR1609.5'
			elif (loc=='BR1610') or (len(loc)>6 and loc[:6]=='BR1610' and not loc[6].isdigit()):
				return 'BR1610'
			elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1615.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1617.0:
				return 'BR1615-1617'
			elif (loc=='BR1620') or (len(loc)>6 and loc[:6]=='BR1620' and not loc[6].isdigit()):
				return 'BR1620'
			elif len(loc)>2 and loc[:2]=='BR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1725.0:
				return 'BR1690-1725'
			else:
				return 'BR1-1725'
		elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2970.0:
			if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.0:
				return 'BS11-115'
			elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=355.0:
				if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.0:
					return 'BS125-198'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=313.0:
					return 'BS199-313'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=315.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=355.0:
					if (loc=='BS315') or (len(loc)>5 and loc[:5]=='BS315' and not loc[5].isdigit()):
						return 'BS315'
					elif (loc=='BS325') or (len(loc)>5 and loc[:5]=='BS325' and not loc[5].isdigit()):
						return 'BS325'
					elif (loc=='BS335') or (len(loc)>5 and loc[:5]=='BS335' and not loc[5].isdigit()):
						return 'BS335'
					elif (loc=='BS345') or (len(loc)>5 and loc[:5]=='BS345' and not loc[5].isdigit()):
						return 'BS345'
					elif (loc=='BS350') or (len(loc)>5 and loc[:5]=='BS350' and not loc[5].isdigit()):
						return 'BS350'
					elif (loc=='BS355') or (len(loc)>5 and loc[:5]=='BS355' and not loc[5].isdigit()):
						return 'BS355'
					else:
						return 'BS315-355'
				else:
					return 'BS125-355'
			elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=680.0:
				if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=534.8:
					return 'BS500-534.8'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=535.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=537.0:
					return 'BS535-537'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=546.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=558.0:
					return 'BS546-558'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=569.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=580.0:
					if (loc=='BS580') or (len(loc)>5 and loc[:5]=='BS580' and not loc[5].isdigit()):
						return 'BS580'
					else:
						return 'BS569-580'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=585.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=613.0:
					return 'BS585-613'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=647.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
					return 'BS647-649'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=667.0:
					return 'BS650-667'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=672.0:
					return 'BS670-672'
				else:
					return 'BS410-680'
			elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1830.0:
				if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=705.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=815.0:
					return 'BS705-815'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=825.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1013.0:
					return 'BS825-1013'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1091.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1099.0:
					return 'BS1091-1099'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1191.5:
						return 'BS1160-1191.5'
					else:
						return 'BS1110-1199'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1830.0:
					return 'BS1200-1830'
				else:
					return 'BS701-1830'
			elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2970.0:
				if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1937.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2020.0:
					return 'BS1937-2020'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2213.0:
					return 'BS2025-2213'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2269.0:
					return 'BS2260-2269'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2545.0:
					if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2393.0:
						return 'BS2350-2393'
					elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2415.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2417.0:
						return 'BS2415-2417'
					elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2520.0:
						return 'BS2430-2520'
					elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2525.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2544.0:
						return 'BS2525-2544'
					else:
						return 'BS2280-2545'
				elif len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2547.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2970.0:
					if len(loc)>2 and loc[:2]=='BS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2765.6:
						return 'BS2640-2765.6'
					else:
						return 'BS2547-2970'
				else:
					return 'BS1901-2970'
			else:
				return 'BS1-2970'
		elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1480.0:
			if len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=19.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=37.0:
				return 'BT19-37'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=93.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=93.6:
				return 'BT93-93.6'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.2:
				return 'BT95-97.2'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=98.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
				if len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.0:
					return 'BT109-115'
				elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=117.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=123.0:
					return 'BT117-123'
				elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=126.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=127.5:
					return 'BT126-127.5'
				elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=153.0:
					return 'BT130-153'
				else:
					return 'BT98-180'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=198.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=590.0:
				if len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=296.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
					return 'BT296-500'
				elif (loc=='BT580') or (len(loc)>5 and loc[:5]=='BT580' and not loc[5].isdigit()):
					return 'BT580'
				elif (loc=='BT587') or (len(loc)>5 and loc[:5]=='BT587' and not loc[5].isdigit()):
					return 'BT587'
				else:
					return 'BT198-590'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=595.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=680.0:
				if len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=660.0:
					return 'BT650-660'
				else:
					return 'BT595-680'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=695.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=749.0:
				return 'BT695-749'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
				return 'BT750-811'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=819.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=891.0:
				return 'BT819-891'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=899.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=940.0:
				return 'BT899-940'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=960.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=985.0:
				return 'BT960-985'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=990.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1010.0:
				return 'BT990-1010'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1029.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1040.0:
				return 'BT1029-1040'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1095.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1255.0:
				return 'BT1095-1255'
			elif len(loc)>2 and loc[:2]=='BT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1313.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1480.0:
				return 'BT1313-1480'
			else:
				return 'BT10-1480'
		elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5099.0:
			if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=530.0:
				if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=30.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=135.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=43.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=64.0:
						return 'BV43-64'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.0:
						return 'BV65-70'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=105.0:
						return 'BV80-105'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=107.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=133.0:
						return 'BV107-133'
					else:
						return 'BV30-135'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=168.0:
					return 'BV150-168'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=169.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
					return 'BV169-199'
				elif (loc=='BV200') or (len(loc)>5 and loc[:5]=='BV200' and not loc[5].isdigit()):
					return 'BV200'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=287.0:
					return 'BV205-287'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=530.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=465.0:
						return 'BV360-465'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=467.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=510.0:
						return 'BV467-510'
					else:
						return 'BV301-530'
				else:
					return 'BV5-530'
			elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1652.0:
				if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=598.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=603.0:
					return 'BV598-603'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=629.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=631.0:
					return 'BV629-631'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=637.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=637.5:
					return 'BV637-637.5'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=638.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=638.8:
					return 'BV638-638.8'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=651.0:
					return 'BV646-651'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=652.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=652.9:
					return 'BV652-652.9'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=652.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=657.0:
					return 'BV652.95-657'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=659.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=683.0:
					return 'BV659-683'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=707.0:
					return 'BV700-707'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=777.0:
					return 'BV770-777'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=873.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=803.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=814.0:
						return 'BV803-814'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=823.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=828.0:
						return 'BV823-828'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=835.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=838.0:
						return 'BV835-838'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=850.0:
						return 'BV840-850'
					else:
						return 'BV800-873'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=895.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=896.0:
					return 'BV895-896'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1450.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1280.0:
						return 'BV950-1280'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1395.0:
						return 'BV1300-1395'
					else:
						return 'BV900-1450'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1615.0:
					return 'BV1460-1615'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1652.0:
					return 'BV1620-1652'
				else:
					return 'BV590-1652'
			elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3705.0:
				if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2123.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2595.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2300.0:
						return 'BV2130-2300'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2595.0:
						return 'BV2350-2595'
					else:
						return 'BV2123-2595'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2695.0:
					return 'BV2610-2695'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3695.0:
					return 'BV2750-3695'
				else:
					return 'BV2000-3705'
			elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.0:
				return 'BV3750-3799'
			elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4470.0:
				if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4019.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4180.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4019.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4167.0:
						return 'BV4019-4167'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4168.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4180.0:
						return 'BV4168-4180'
					else:
						return 'BV4019-4180'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4317.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4239.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4317.0:
						return 'BV4239-4317'
					else:
						return 'BV4200-4317'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4399.0:
					return 'BV4390-4399'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4470.0:
					return 'BV4400-4470'
				else:
					return 'BV4000-4470'
			elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4485.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5099.0:
				if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4526.2:
					return 'BV4520-4526.2'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4625.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4780.0:
					if len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4625.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4627.0:
						return 'BV4625-4627'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4647.0:
						return 'BV4630-4647'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4715.0:
						return 'BV4650-4715'
					elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4780.0:
						return 'BV4720-4780'
					else:
						return 'BV4625-4780'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4897.0:
					return 'BV4800-4897'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4911.0:
					return 'BV4900-4911'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4912.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4950.0:
					return 'BV4912-4950'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5015.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5068.0:
					return 'BV5015-5068'
				elif len(loc)>2 and loc[:2]=='BV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5095.0:
					return 'BV5070-5095'
				elif (loc=='BV5099') or (len(loc)>6 and loc[:6]=='BV5099' and not loc[6].isdigit()):
					return 'BV5099'
				else:
					return 'BV4485-5099'
			else:
				return 'BV1-5099'
		elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
			if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9.5:
				return 'BX1-9.5'
			elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=189.0:
				if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=107.0:
					return 'BX100-107'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=129.0:
					return 'BX120-129'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=139.0:
					return 'BX130-139'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=149.0:
					return 'BX140-149'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=159.0:
					return 'BX150-159'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=169.0:
					return 'BX160-169'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=179.0:
					return 'BX170-179'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=189.0:
					return 'BX180-189'
				else:
					return 'BX100-189'
			elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=756.0:
				if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
					return 'BX200-395'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=756.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.0:
						return 'BX400-440'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.93:
						return 'BX450-450.93'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
						return 'BX460-605'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.0:
						return 'BX610-620'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.0:
						return 'BX630-639'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=659.0:
						return 'BX650-659'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=669.0:
						return 'BX660-669'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=679.0:
						return 'BX670-679'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
						return 'BX690-699'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=710.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=719.0:
						return 'BX710-719'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=729.0:
						return 'BX720-729'
					elif (loc=='BX729.5') or (len(loc)>7 and loc[:7]=='BX729.5' and not loc[7].isdigit()):
						return 'BX729.5'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=729.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=755.0:
						return 'BX729.9-755'
					else:
						return 'BX400-756'
				else:
					return 'BX200-756'
			elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4795.0:
				if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=839.0:
					return 'BX800-839'
				elif (loc=='BX840') or (len(loc)>5 and loc[:5]=='BX840' and not loc[5].isdigit()):
					return 'BX840'
				elif (loc=='BX841') or (len(loc)>5 and loc[:5]=='BX841' and not loc[5].isdigit()):
					return 'BX841'
				elif (loc=='BX845') or (len(loc)>5 and loc[:5]=='BX845' and not loc[5].isdigit()):
					return 'BX845'
				elif (loc=='BX847') or (len(loc)>5 and loc[:5]=='BX847' and not loc[5].isdigit()):
					return 'BX847'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=875.0:
					return 'BX850-875'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=880.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=891.0:
					return 'BX880-891'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=895.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.0:
					return 'BX895-939'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1745.0:
					return 'BX940-1745'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1746.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1755.0:
					return 'BX1746-1755'
				elif (loc=='BX1756') or (len(loc)>6 and loc[:6]=='BX1756' and not loc[6].isdigit()):
					return 'BX1756'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1760.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1779.5:
					return 'BX1760-1779.5'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1781.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1788.0:
					return 'BX1781-1788'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1793.0:
					return 'BX1790-1793'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1920.0:
					return 'BX1800-1920'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1958.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1968.0:
					return 'BX1958-1968'
				elif (loc=='BX1969') or (len(loc)>6 and loc[:6]=='BX1969' and not loc[6].isdigit()):
					return 'BX1969'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1970.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2175.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2175.0:
						return 'BX2050-2175'
					else:
						return 'BX1970-2175'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2198.0:
					return 'BX2177-2198'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2292.0:
					return 'BX2200-2292'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2295.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2310.0:
					return 'BX2295-2310'
				elif (loc=='BX2312') or (len(loc)>6 and loc[:6]=='BX2312' and not loc[6].isdigit()):
					return 'BX2312'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2315.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2324.0:
					return 'BX2315-2324'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2325.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2333.0:
					return 'BX2325-2333'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2347.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2377.0:
					return 'BX2347-2377'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2386.0:
					return 'BX2380-2386'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4563.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2890.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4192.0:
						return 'BX2890-4192'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4563.0:
						return 'BX4200-4563'
					else:
						return 'BX2400-4563'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4644.0:
					return 'BX4600-4644'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4705.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4698.0:
						return 'BX4650-4698'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4705.0:
						return 'BX4700-4705'
					else:
						return 'BX4650-4705'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4710.1 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4715.95:
					return 'BX4710.1-4715.95'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4716.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4795.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4718.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4735.0:
						return 'BX4718.5-4735'
					elif (loc=='BX4737') or (len(loc)>6 and loc[:6]=='BX4737' and not loc[6].isdigit()):
						return 'BX4737'
					elif (loc=='BX4740') or (len(loc)>6 and loc[:6]=='BX4740' and not loc[6].isdigit()):
						return 'BX4740'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4793.0:
						return 'BX4751-4793'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4793.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4794.25:
						return 'BX4793.5-4794.25'
					elif (loc=='BX4795') or (len(loc)>6 and loc[:6]=='BX4795' and not loc[6].isdigit()):
						return 'BX4795'
					else:
						return 'BX4716.4-4795'
				else:
					return 'BX800-4795'
			elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4861.0:
					return 'BX4800-4861'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4872.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4924.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4872.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4893.0:
						return 'BX4872-4893'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4906.0:
						return 'BX4900-4906'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4913.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4924.0:
						return 'BX4913-4924'
					else:
						return 'BX4872-4924'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4929.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4951.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4929.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4946.0:
						return 'BX4929-4946'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4951.0:
						return 'BX4950-4951'
					else:
						return 'BX4929-4951'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5009.0:
					return 'BX5001-5009'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5207.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5050.0:
						return 'BX5011-5050'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5110.0:
						return 'BX5051-5110'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5126.0:
						return 'BX5115-5126'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5129.8:
						return 'BX5127-5129.8'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5132.0:
						return 'BX5130-5132'
					elif (loc=='BX5133') or (len(loc)>6 and loc[:6]=='BX5133' and not loc[6].isdigit()):
						return 'BX5133'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5136.0:
						return 'BX5135-5136'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5137.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5139.0:
						return 'BX5137-5139'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5140.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5147.0:
						return 'BX5140.5-5147'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5148.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5149.0:
						return 'BX5148-5149'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5182.5:
						return 'BX5150-5182.5'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5183.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5187.0:
						return 'BX5183-5187'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5194.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5195.0:
						return 'BX5194-5195'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5197.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5199.0:
						return 'BX5197-5199'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5207.0:
						return 'BX5200-5207'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5395.0:
						return 'BX5210-5395'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5595.0:
						return 'BX5410-5595'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5596.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5598.0:
						return 'BX5596-5598'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5740.0:
						return 'BX5600-5740'
					else:
						return 'BX5011-5207'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5995.0:
					return 'BX5800-5995'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5996.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6030.0:
					return 'BX5996-6030'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6093.0:
					return 'BX6051-6093'
				elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
					if len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6193.0:
						return 'BX6101-6193'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6197.0:
						return 'BX6195-6197'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6495.0:
						return 'BX6201-6495'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6593.0:
						return 'BX6551-6593'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6693.0:
						return 'BX6651-6693'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6793.0:
						return 'BX6751-6793'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6843.0:
						return 'BX6801-6843'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6997.0:
						return 'BX6901-6997'
					elif (loc=='BX7003') or (len(loc)>6 and loc[:6]=='BX7003' and not loc[6].isdigit()):
						return 'BX7003'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7060.0:
						return 'BX7020-7060'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7079.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7097.0:
						return 'BX7079-7097'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7260.0:
						return 'BX7101-7260'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7343.0:
						return 'BX7301-7343'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7430.0:
						return 'BX7401-7430'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7493.0:
						return 'BX7451-7493'
					elif (loc=='BX7556') or (len(loc)>6 and loc[:6]=='BX7556' and not loc[6].isdigit()):
						return 'BX7556'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7580.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7583.0:
						return 'BX7580-7583'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7795.0:
						return 'BX7601-7795'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7843.0:
						return 'BX7801-7843'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7865.0:
						return 'BX7850-7865'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7943.0:
						return 'BX7901-7943'
					elif len(loc)>8 and loc[:8]=='BX7990.H' and loc[8].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=6.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=69.0:
						return 'BX7990.H6-.H69'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8080.0:
						return 'BX8001-8080'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8144.0:
						return 'BX8101-8144'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8495.0:
						return 'BX8201-8495'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8525.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8528.0:
						return 'BX8525-8528'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8593.0:
						return 'BX8551-8593'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8695.0:
						return 'BX8601-8695'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8749.0:
						return 'BX8701-8749'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8762.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8785.0:
						return 'BX8762-8785'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8809.0:
						return 'BX8799-8809'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9225.0:
						return 'BX8901-9225'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9359.0:
						return 'BX9301-9359'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9640.0:
						return 'BX9401-9640'
					elif (loc=='BX9675') or (len(loc)>6 and loc[:6]=='BX9675' and not loc[6].isdigit()):
						return 'BX9675'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9743.0:
						return 'BX9701-9743'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9793.0:
						return 'BX9751-9793'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9869.0:
						return 'BX9801-9869'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9875.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9877.1:
						return 'BX9875-9877.1'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9881.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9882.95:
						return 'BX9881-9882.95'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9884.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9886.0:
						return 'BX9884-9886'
					elif (loc=='BX9887') or (len(loc)>6 and loc[:6]=='BX9887' and not loc[6].isdigit()):
						return 'BX9887'
					elif (loc=='BX9889') or (len(loc)>6 and loc[:6]=='BX9889' and not loc[6].isdigit()):
						return 'BX9889'
					elif len(loc)>2 and loc[:2]=='BX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9969.0:
						return 'BX9901-9969'
					elif (loc=='BX9975') or (len(loc)>6 and loc[:6]=='BX9975' and not loc[6].isdigit()):
						return 'BX9975'
					elif (loc=='BX9980') or (len(loc)>6 and loc[:6]=='BX9980' and not loc[6].isdigit()):
						return 'BX9980'
					elif (loc=='BX9998') or (len(loc)>6 and loc[:6]=='BX9998' and not loc[6].isdigit()):
						return 'BX9998'
					elif (loc=='BX9999') or (len(loc)>6 and loc[:6]=='BX9999' and not loc[6].isdigit()):
						return 'BX9999'
					else:
						return 'BX6101-9999'
				else:
					return 'BX4800-9999'
			else:
				return 'BX1-9999'
		else:
			return 'B'
	elif loc[0]=='C':
		if len(loc)>1 and loc[:1]=='C' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=51.0:
			return 'C1-51'
		elif len(loc)>2 and loc[:2]=='CB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=482.0:
			if (loc=='CB156') or (len(loc)>5 and loc[:5]=='CB156' and not loc[5].isdigit()):
				return 'CB156'
			elif len(loc)>2 and loc[:2]=='CB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=158.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=161.0:
				return 'CB158-161'
			elif len(loc)>2 and loc[:2]=='CB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=281.0:
				return 'CB195-281'
			elif len(loc)>2 and loc[:2]=='CB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=305.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.0:
				return 'CB305-430'
			elif len(loc)>2 and loc[:2]=='CB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=482.0:
				if (loc=='CB450') or (len(loc)>5 and loc[:5]=='CB450' and not loc[5].isdigit()):
					return 'CB450'
				elif (loc=='CB478') or (len(loc)>5 and loc[:5]=='CB478' and not loc[5].isdigit()):
					return 'CB478'
				elif (loc=='CB481') or (len(loc)>5 and loc[:5]=='CB481' and not loc[5].isdigit()):
					return 'CB481'
				elif (loc=='CB482') or (len(loc)>5 and loc[:5]=='CB482' and not loc[5].isdigit()):
					return 'CB482'
				else:
					return 'CB440-482'
			else:
				return 'CB3-482'
		elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=960.0:
			if len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=72.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=81.0:
				if len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=73.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=81.0:
					return 'CC73-81'
				else:
					return 'CC72-81'
			elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=83.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.0:
				return 'CC83-97'
			elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=137.0:
				return 'CC135-137'
			elif (loc=='CC140') or (len(loc)>5 and loc[:5]=='CC140' and not loc[5].isdigit()):
				return 'CC140'
			elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=260.0:
				return 'CC200-260'
			elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=350.0:
				return 'CC300-350'
			elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
				return 'CC600-605'
			elif len(loc)>2 and loc[:2]=='CC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.0:
				return 'CC700-705'
			elif (loc=='CC710') or (len(loc)>5 and loc[:5]=='CC710' and not loc[5].isdigit()):
				return 'CC710'
			elif (loc=='CC960') or (len(loc)>5 and loc[:5]=='CC960' and not loc[5].isdigit()):
				return 'CC960'
			else:
				return 'CC1-960'
		elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6471.0:
			if len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=511.0:
				if len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=79.0:
					return 'CD70-79'
				elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=81.0:
					return 'CD80-81'
				elif (loc=='CD87') or (len(loc)>4 and loc[:4]=='CD87' and not loc[4].isdigit()):
					return 'CD87'
				elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=392.0:
					return 'CD91-392'
				elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=511.0:
					return 'CD501-511'
				else:
					return 'CD1-511'
			elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4280.0:
				if len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=995.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4280.0:
					if (loc=='CD997') or (len(loc)>5 and loc[:5]=='CD997' and not loc[5].isdigit()):
						return 'CD997'
					elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4280.0:
						return 'CD1000-4280'
					else:
						return 'CD995-4280'
				else:
					return 'CD921-4280'
			elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6471.0:
				if (loc=='CD5191') or (len(loc)>6 and loc[:6]=='CD5191' and not loc[6].isdigit()):
					return 'CD5191'
				elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5391.0:
					return 'CD5201-5391'
				elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5557.0:
					return 'CD5501-5557'
				elif (loc=='CD5561') or (len(loc)>6 and loc[:6]=='CD5561' and not loc[6].isdigit()):
					return 'CD5561'
				elif len(loc)>2 and loc[:2]=='CD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5575.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6471.0:
					return 'CD5575-6471'
				else:
					return 'CD5001-6471'
			else:
				return 'CD1-6471'
		elif len(loc)>2 and loc[:2]=='CE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.0:
			if len(loc)>2 and loc[:2]=='CE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=46.0:
				return 'CE21-46'
			elif len(loc)>2 and loc[:2]=='CE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=85.0:
				return 'CE51-85'
			elif len(loc)>2 and loc[:2]=='CE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=92.0:
				return 'CE91-92'
			else:
				return 'CE1-97'
		elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6661.0:
			if len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4625.0:
				if (loc=='CJ153') or (len(loc)>5 and loc[:5]=='CJ153' and not loc[5].isdigit()):
					return 'CJ153'
				elif (loc=='CJ161') or (len(loc)>5 and loc[:5]=='CJ161' and not loc[5].isdigit()):
					return 'CJ161'
				elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1397.0:
					return 'CJ201-1397'
				elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1509.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4625.0:
					return 'CJ1509-4625'
				else:
					return 'CJ1-4625'
			elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5450.0:
				if len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4861.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4889.0:
					return 'CJ4861-4889'
				elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5336.0:
					return 'CJ4901-5336'
				elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5450.0:
					return 'CJ5350-5450'
				else:
					return 'CJ4801-5450'
			elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6661.0:
				if len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5690.0:
					return 'CJ5581-5690'
				elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5723.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5793.0:
					return 'CJ5723-5793'
				elif len(loc)>2 and loc[:2]=='CJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5795.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6661.0:
					return 'CJ5795-6661'
				else:
					return 'CJ5501-6661'
			else:
				return 'CJ1-6661'
		elif len(loc)>2 and loc[:2]=='CN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1355.0:
			if len(loc)>2 and loc[:2]=='CN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=740.0:
				return 'CN120-740'
			elif len(loc)>2 and loc[:2]=='CN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=753.0:
				return 'CN750-753'
			elif (loc=='CN755') or (len(loc)>5 and loc[:5]=='CN755' and not loc[5].isdigit()):
				return 'CN755'
			elif (loc=='CN760') or (len(loc)>5 and loc[:5]=='CN760' and not loc[5].isdigit()):
				return 'CN760'
			elif len(loc)>2 and loc[:2]=='CN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=805.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=865.0:
				return 'CN805-865'
			elif len(loc)>2 and loc[:2]=='CN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=870.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1355.0:
				return 'CN870-1355'
			else:
				return 'CN1-1355'
		elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6305.0:
			if len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=79.0:
				return 'CR51-79'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=93.0:
				return 'CR91-93'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.0:
				return 'CR101-115'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1020.0:
				return 'CR191-1020'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1131.0:
				return 'CR1101-1131'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1179.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3395.0:
				return 'CR1179-3395'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3499.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4420.0:
				return 'CR3499-4420'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4485.0:
				return 'CR4480-4485'
			elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6305.0:
				if len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4547.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4553.0:
					return 'CR4547-4553'
				elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4571.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4595.0:
					return 'CR4571-4595'
				elif len(loc)>2 and loc[:2]=='CR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6305.0:
					return 'CR4651-6305'
				else:
					return 'CR4501-6305'
			else:
				return 'CR1-6305'
		elif len(loc)>2 and loc[:2]=='CS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3090.0:
			if len(loc)>2 and loc[:2]=='CS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=23.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=35.0:
				return 'CS23-35'
			elif len(loc)>2 and loc[:2]=='CS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=38.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
				return 'CS38-39'
			elif len(loc)>2 and loc[:2]=='CS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=42.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2209.0:
				return 'CS42-2209'
			elif len(loc)>2 and loc[:2]=='CS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3090.0:
				return 'CS2300-3090'
			else:
				return 'CS1-3090'
		elif len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
			if len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=22.0:
				return 'CT21-22'
			elif len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=83.0:
				return 'CT31-83'
			elif len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=93.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=206.0:
				if (loc=='CT206') or (len(loc)>5 and loc[:5]=='CT206' and not loc[5].isdigit()):
					return 'CT206'
				else:
					return 'CT93-206'
			elif len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3150.0:
				return 'CT210-3150'
			elif len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				if len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3830.0:
					return 'CT3200-3830'
				elif (loc=='CT3990') or (len(loc)>6 and loc[:6]=='CT3990' and not loc[6].isdigit()):
					return 'CT3990'
				elif len(loc)>2 and loc[:2]=='CT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9960.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9998.0:
					return 'CT9960-9998'
				elif (loc=='CT9999') or (len(loc)>6 and loc[:6]=='CT9999' and not loc[6].isdigit()):
					return 'CT9999'
				else:
					return 'CT3200-9999'
			else:
				return 'CT21-9999'
		else:
			return 'C'
	elif loc[0]=='D':
		if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2027.0:
			if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=24.5:
				return 'D1-24.5'
			elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=27.0:
				return 'D25-27'
			elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=34.0:
				return 'D31-34'
			elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
				return 'D51-90'
			elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=110.5:
				return 'D101-110.5'
			elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=203.0:
				if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=149.0:
					return 'D135-149'
				elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.0:
					return 'D151-173'
				elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
					return 'D175-195'
				elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=203.0:
					return 'D200-203'
				else:
					return 'D111-203'
			elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=204.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
				if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=219.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=234.0:
					return 'D219-234'
				elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=242.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=283.5:
					if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=271.0:
						return 'D251-271'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=274.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6.0:
						return 'D274.5-6'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=275.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=276.0:
						return 'D275-276'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=277.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=278.5:
						return 'D277-278.5'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=279.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.5:
						return 'D279-280.5'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=283.5:
						return 'D281-283.5'
					else:
						return 'D242-283.5'
				elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=284.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=297.0:
					if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=291.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=294.0:
						return 'D291-294'
					elif (loc=='D297') or (len(loc)>4 and loc[:4]=='D297' and not loc[4].isdigit()):
						return 'D297'
					else:
						return 'D284-297'
				elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=299.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
					if len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=309.0:
						return 'D301-309'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=400.0:
						return 'D351-400'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
						return 'D410-(475)'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=680.0:
						return 'D501-680'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=728.0:
						return 'D720-728'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=731.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=838.0:
						return 'D731-838'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=839.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=860.0:
						return 'D839-860'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=880.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=888.0:
						return 'D880-888'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=890.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=893.0:
						return 'D890-893'
					elif len(loc)>1 and loc[:1]=='D' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2009.0:
						return 'D900-2009'
					else:
						return 'D299-(475)'
				else:
					return 'D(204)-(475)'
			else:
				return 'D1-2027'
		elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
			if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=18.2:
				return 'DA10-18.2'
			elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=690.0:
				if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=27.5:
					return 'DA20-27.5'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=28.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=592.0:
					if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=28.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=35.0:
						return 'DA28-35'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=40.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=89.6:
						return 'DA40-89.6'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=90.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=125.0:
						return 'DA90-125'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=129.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=592.0:
						return 'DA129-592'
					else:
						return 'DA28-592'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=667.0:
					return 'DA600-667'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=690.0:
					if (loc=='DA670') or (len(loc)>5 and loc[:5]=='DA670' and not loc[5].isdigit()):
						return 'DA670'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=675.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.0:
						return 'DA675-689'
					elif (loc=='DA690') or (len(loc)>5 and loc[:5]=='DA690' and not loc[5].isdigit()):
						return 'DA690'
					else:
						return 'DA670-690'
				else:
					return 'DA20-690'
			elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=745.0:
				if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=713.0:
					return 'DA700-713'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=714.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=722.1:
					return 'DA714-722.1'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=738.0:
					return 'DA725-738'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=745.0:
					return 'DA740-745'
				else:
					return 'DA700-745'
			elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
				if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=757.7:
					return 'DA750-757.7'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=757.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=826.0:
					if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=757.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=763.0:
						return 'DA757.9-763'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=765.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=774.5:
						return 'DA765-774.5'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=774.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=826.0:
						return 'DA774.8-826'
					else:
						return 'DA757.9-826'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=878.0:
					return 'DA850-878'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=880.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
					return 'DA880-890'
				else:
					return 'DA750-890'
			elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
				if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=908.7:
					return 'DA900-908.7'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=909.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=965.0:
					if len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=909.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=916.8:
						return 'DA909-916.8'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=920.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=927.0:
						return 'DA920-927'
					elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=930.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=965.0:
						return 'DA930-965'
					else:
						return 'DA909-965'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=969.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=988.0:
					return 'DA969-988'
				elif len(loc)>2 and loc[:2]=='DA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=990.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
					if len(loc)>7 and loc[:7]=='DA990.U' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=45.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=46.0:
						return 'DA990.U45-U46'
					else:
						return 'DA990-995'
				else:
					return 'DA900-995'
			else:
				return 'DA1-995'
		elif len(loc)>3 and loc[:3]=='DAW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1051.0:
			if len(loc)>3 and loc[:3]=='DAW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1028.0:
				return 'DAW1001-1028'
			elif len(loc)>3 and loc[:3]=='DAW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1031.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1051.0:
				return 'DAW1031-1051'
			else:
				return 'DAW1001-1051'
		elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3150.0:
			if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=879.0:
				if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=20.5:
					return 'DB1-20.5'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=27.5:
					return 'DB21-27.5'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=29.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=34.5:
					return 'DB29-34.5'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.2:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=40.5:
						return 'DB35-40.5'
					elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=42.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=49.0:
						return 'DB42-49'
					elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.2:
						return 'DB51-99.2'
					else:
						return 'DB35-99.2'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=879.0:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
						return 'DB101-785'
					elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=841.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=860.0:
						return 'DB841-860'
					elif (loc=='DB879') or (len(loc)>5 and loc[:5]=='DB879' and not loc[5].isdigit()):
						return 'DB879'
					else:
						return 'DB101-879'
				else:
					return 'DB1-879'
			elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=881.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=898.0:
				return 'DB881-898'
			elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=906.7:
					return 'DB901-906.7'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=906.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=920.5:
					return 'DB906.9-920.5'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=958.6:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=927.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=958.6:
						return 'DB927-958.6'
					else:
						return 'DB921-958.6'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=974.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=974.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=975.0:
						return 'DB974.9-975'
					elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=981.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.0:
						return 'DB981-997'
					else:
						return 'DB974.9-999'
				else:
					return 'DB901-999'
			elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3150.0:
				if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2035.0:
					return 'DB2000-2035'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2043.0:
					return 'DB2040-2043'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2044.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2247.0:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2247.0:
						return 'DB2080-2247'
					else:
						return 'DB2044-2247'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2650.0:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2421.0:
						return 'DB2300-2421'
					elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2649.0:
						return 'DB2600-2649'
					else:
						return 'DB2300-2650'
				elif len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3150.0:
					if len(loc)>2 and loc[:2]=='DB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3139.0:
						return 'DB3100-3139'
					else:
						return 'DB2700-3150'
				else:
					return 'DB2000-3150'
			else:
				return 'DB1-3150'
		elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=947.0:
			if len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=20.5:
				return 'DC1-20.5'
			elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=29.3:
				return 'DC21-29.3'
			elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=30.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=34.5:
				return 'DC30-34.5'
			elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=424.0:
				if len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.0:
					return 'DC35-41'
				elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=44.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.8:
					return 'DC44-59.8'
				elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=424.0:
					if len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.0:
						return 'DC60-109'
					elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.0:
						return 'DC110-433'
					else:
						return 'DC60-424'
				else:
					return 'DC35-424'
			elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=801.0:
				if len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.1 and float(re.findall(r'\d+\.?\d*',loc)[0])<=609.83:
					return 'DC601.1-609.83'
				elif (loc=='DC611') or (len(loc)>5 and loc[:5]=='DC611' and not loc[5].isdigit()):
					return 'DC611'
				elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=790.0:
					return 'DC701-790'
				elif (loc=='DC801') or (len(loc)>5 and loc[:5]=='DC801' and not loc[5].isdigit()):
					return 'DC801'
				else:
					return 'DC600-801'
			elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=930.0:
				return 'DC921-930'
			elif len(loc)>2 and loc[:2]=='DC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=941.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=947.0:
				return 'DC941-947'
			else:
				return 'DC1-947'
		elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=905.0:
			if len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=21.0:
				return 'DD1-21'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=43.0:
				return 'DD21.5-43'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
				return 'DD51-78'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=84.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=257.4:
				if len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=84.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=96.0:
					return 'DD84-96'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.0:
					return 'DD99-120'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=257.4:
					if len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
						return 'DD121-124'
					elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=174.6:
						return 'DD125-174.6'
					elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=257.4:
						return 'DD175-257.4'
					else:
						return 'DD121-257.4'
				else:
					return 'DD84-257.4'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=258.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=262.0:
				return 'DD258-262'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=289.5:
				return 'DD280-289.5'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=454.0:
				if len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=312.0:
					return 'DD301-312'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=314.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=320.0:
					return 'DD314-320'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=325.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=339.0:
					return 'DD325-339'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=454.0:
					return 'DD341-454'
				else:
					return 'DD301-454'
			elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=901.0:
				if len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=788.0:
					return 'DD701-788'
				elif (loc=='DD801') or (len(loc)>5 and loc[:5]=='DD801' and not loc[5].isdigit()):
					return 'DD801'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.0:
					return 'DD851-900'
				elif len(loc)>2 and loc[:2]=='DD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.76:
					return 'DD900.2-900.76'
				elif (loc=='DD901') or (len(loc)>5 and loc[:5]=='DD901' and not loc[5].isdigit()):
					return 'DD901'
				else:
					return 'DD701-901'
			else:
				return 'DD1-(905)'
		elif len(loc)>2 and loc[:2]=='DE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=100.0:
			if len(loc)>2 and loc[:2]=='DE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=15.5:
				return 'DE1-15.5'
			elif len(loc)>2 and loc[:2]=='DE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=23.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=31.0:
				return 'DE23-31'
			elif len(loc)>2 and loc[:2]=='DE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=46.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=73.2:
				return 'DE46-73.2'
			elif len(loc)>2 and loc[:2]=='DE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=100.0:
				return 'DE80-100'
			else:
				return 'DE1-100'
		elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
			if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=289.0:
				if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=16.0:
					return 'DF10-16'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.0:
					return 'DF27-41'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=136.0:
					return 'DF75-136'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=207.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=241.0:
					if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=207.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=218.0:
						return 'DF207-218'
					elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=241.0:
						return 'DF220-241'
					else:
						return 'DF207-241'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=289.0:
					return 'DF251-289'
				else:
					return 'DF10-289'
			elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
				if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=518.0:
					return 'DF501-518'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=542.4:
					return 'DF520-542.4'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=545.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=548.0:
					return 'DF545-548'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
					if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=552.8:
						return 'DF550-552.8'
					elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=553.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.5:
						return 'DF553-599.5'
					elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=599.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
						return 'DF599.8-649'
					else:
						return 'DF550-649'
				else:
					return 'DF501-649'
			elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
				if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=720.0:
					return 'DF701-720'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=720.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=728.0:
					return 'DF720.5-728'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=741.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=748.0:
					return 'DF741-748'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=854.32:
					if len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=760.0:
						return 'DF750-760'
					elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=765.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=787.0:
						return 'DF765-787'
					elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=854.32:
						return 'DF801-854.32'
					else:
						return 'DF750-854.32'
				else:
					return 'DF701-951'
			elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=895.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
				if (loc=='DF901') or (len(loc)>5 and loc[:5]=='DF901' and not loc[5].isdigit()):
					if len(loc)>7 and loc[:7]=='DF901.C' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=78.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=88.0:
						return 'DF901.C78-C88'
					else:
						return 'DF901'
				elif len(loc)>2 and loc[:2]=='DF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=915.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=936.0:
					return 'DF915-936'
				elif (loc=='DF951') or (len(loc)>5 and loc[:5]=='DF951' and not loc[5].isdigit()):
					return 'DF951'
				else:
					return 'DF895-951'
			else:
				return 'DF10-951'
		elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=365.0:
				if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=16.0:
					return 'DG11-16'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.0:
					return 'DG27-41'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.0:
					if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=55.0:
						return 'DG51-55'
					elif (loc=='DG59') or (len(loc)>4 and loc[:4]=='DG59' and not loc[4].isdigit()):
						return 'DG59'
					elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=69.0:
						return 'DG61-69'
					elif (loc=='DG70') or (len(loc)>4 and loc[:4]=='DG70' and not loc[4].isdigit()):
						return 'DG70'
					else:
						return 'DG51-70'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
					return 'DG75-190'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=365.0:
					if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=215.0:
						return 'DG201-215'
					elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=365.0:
						return 'DG221-365'
					else:
						return 'DG201-365'
				else:
					return 'DG11-365'
			elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=583.8:
				if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=421.0:
					return 'DG401-421'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.2:
					return 'DG421.5-430.2'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=431.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=457.0:
					return 'DG431-457'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=583.8:
					if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=473.0:
						return 'DG461-473'
					elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'DG480-499'
					elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=583.8:
						return 'DG500-583.8'
					else:
						return 'DG461-583.8'
				else:
					return 'DG401-583.8'
			elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=684.72:
				if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=609.0:
					return 'DG600-609'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=618.78:
					return 'DG610-618.78'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=631.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.0:
					return 'DG631-645'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=664.5:
					return 'DG651-664.5'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=684.72:
					return 'DG670-684.72'
				else:
					return 'DG600-684.72'
			elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=817.3:
				if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=694.0:
					return 'DG691-694'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=731.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=759.3:
					return 'DG731-759.3'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=800.0:
					if len(loc)>=2 and loc[:2]=='DG':
						return 'DG'
					else:
						return 'DG791-800'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=803.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=817.3:
					return 'DG803-817.3'
				else:
					return 'DG691-817.3'
			elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=819.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=875.0:
				if len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=819.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=829.0:
					return 'DG819-829'
				elif (loc=='DG831') or (len(loc)>5 and loc[:5]=='DG831' and not loc[5].isdigit()):
					return 'DG831'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=857.5:
					return 'DG840-857.5'
				elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=861.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=875.0:
					return 'DG861-875'
				else:
					return 'DG819-875'
			elif (loc=='DG975') or (len(loc)>5 and loc[:5]=='DG975' and not loc[5].isdigit()):
				return 'DG975'
			elif len(loc)>2 and loc[:2]=='DG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=987.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				return 'DG987-999'
			else:
				return 'DG11-999'
		elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=925.0:
			if len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=23.0:
				return 'DH1-23'
			elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=40.0:
				return 'DH31-40'
			elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=92.0:
				return 'DH51-92'
			elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=207.0:
				if len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.0:
					return 'DH95-109'
				elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=113.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=137.0:
					return 'DH113-137'
				elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=207.0:
					if len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=162.0:
						return 'DH141-162'
					elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=184.0:
						return 'DH171-184'
					elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=207.0:
						return 'DH185-207'
					else:
						return 'DH141-207'
				else:
					return 'DH95-207'
			elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
				if len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.0:
					return 'DH401-430'
				elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=431.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=435.0:
					return 'DH431-435'
				elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=492.0:
					return 'DH451-492'
				elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=503.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=694.0:
					if len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=503.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=527.0:
						return 'DH503-527'
					elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=569.0:
						return 'DH540-569'
					elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=571.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=694.0:
						return 'DH571-694'
					else:
						return 'DH503-694'
				elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
					if (loc=='DH801') or (len(loc)>5 and loc[:5]=='DH801' and not loc[5].isdigit()):
						return 'DH801'
					elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=802.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=809.95:
						return 'DH802-809.95'
					elif (loc=='DH811') or (len(loc)>5 and loc[:5]=='DH811' and not loc[5].isdigit()):
						return 'DH811'
					else:
						return 'DH801-811'
				else:
					return 'DH401-811'
			elif len(loc)>2 and loc[:2]=='DH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=925.0:
				return 'DH901-925'
			else:
				return 'DH1-925'
		elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
			if len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=30.0:
				return 'DJ1-30'
			elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=33.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.0:
				return 'DJ33-41'
			elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=92.0:
				return 'DJ51-92'
			elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=292.0:
				if len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=116.0:
					return 'DJ95-116'
				elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=124.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=150.0:
					return 'DJ124-150'
				elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=292.0:
					if len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=152.0:
						return 'DJ151-152'
					elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=154.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=210.0:
						return 'DJ154-210'
					elif (loc=='DJ211') or (len(loc)>5 and loc[:5]=='DJ211' and not loc[5].isdigit()):
						return 'DJ211'
					elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=292.0:
						return 'DJ215-292'
					else:
						return 'DJ151-292'
				else:
					return 'DJ95-292'
			elif len(loc)>2 and loc[:2]=='DJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=411.0:
				if len(loc)>7 and loc[:7]=='DJ411.A' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=59.0:
					return 'DJ411.A5-A59'
				else:
					return 'DJ401-411'
			else:
				return 'DJ1-(500)'
		elif len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=77.0:
			if len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=26.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=28.0:
				if (loc=='DJK27') or (len(loc)>5 and loc[:5]=='DJK27' and not loc[5].isdigit()):
					return 'DJK27'
				else:
					return 'DJK26-28'
			elif len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=30.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=51.0:
				return 'DJK30-51'
			elif len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=77.0:
				if len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=66.0:
					return 'DJK61-66'
				elif len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.0:
					return 'DJK71-76'
				elif len(loc)>3 and loc[:3]=='DJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=76.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.8:
					return 'DJK76.2-76.8'
				elif (loc=='DJK77') or (len(loc)>5 and loc[:5]=='DJK77' and not loc[5].isdigit()):
					return 'DJK77'
				else:
					return 'DJK61-77'
			else:
				return 'DJK1-77'
		elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=949.5:
			if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=33.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=35.5:
				return 'DK33-35.5'
			elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=36.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=293.0:
				if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=112.42:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.7:
						return 'DK70-99.7'
					elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=112.42:
						return 'DK99.8-112.42'
					else:
						return 'DK70-112.42'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=112.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=264.8:
					return 'DK112.8-264.8'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=265.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.95:
					return 'DK265-265.95'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=266.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=292.0:
					return 'DK266-292'
				elif (loc=='DK293') or (len(loc)>5 and loc[:5]=='DK293' and not loc[5].isdigit()):
					return 'DK293'
				else:
					return 'DK36-293'
			elif (loc=='DK500') or (len(loc)>5 and loc[:5]=='DK500' and not loc[5].isdigit()):
				return 'DK500'
			elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=949.5:
				if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=502.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=502.75:
					return 'DK502.3-502.75'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=503.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=503.95:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=503.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=503.939:
						return 'DK503.92-503.939'
					else:
						return 'DK503-503.95'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=504.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=504.95:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=504.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=504.939:
						return 'DK504.92-504.939'
					else:
						return 'DK504-504.95'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=505.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=505.95:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=505.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=505.939:
						return 'DK505.92-505.939'
					else:
						return 'DK505-505.95'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=507.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=507.95:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=507.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=507.939:
						return 'DK507.92-507.939'
					else:
						return 'DK507-507.95'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=508.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=508.95:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=508.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=508.939:
						return 'DK508.92-508.939'
					else:
						return 'DK508-508.95'
				elif (loc=='DK509') or (len(loc)>5 and loc[:5]=='DK509' and not loc[5].isdigit()):
					return 'DK509'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=509.1 and float(re.findall(r'\d+\.?\d*',loc)[0])<=509.95:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=509.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=509.939:
						return 'DK509.92-509.939'
					else:
						return 'DK509.1-509.95'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=651.0:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=579.0:
						return 'DK541-579'
					elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=588.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=609.0:
						return 'DK588-609'
					else:
						return 'DK510-651'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=679.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=679.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=679.39:
						return 'DK679.2-679.39'
					else:
						return 'DK670-679.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=689.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.39:
						return 'DK689.2-689.39'
					else:
						return 'DK680-689.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=699.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.39:
						return 'DK699.2-699.39'
					else:
						return 'DK690-699.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=781.0:
					return 'DK751-781'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=845.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=860.0:
					return 'DK845-860'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=909.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=909.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=909.39:
						return 'DK909.2-909.39'
					else:
						return 'DK901-909.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=911.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=919.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=919.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=919.39:
						return 'DK919.2-919.39'
					else:
						return 'DK911-919.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=929.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=929.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=929.39:
						return 'DK929.2-929.39'
					else:
						return 'DK921-929.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=931.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=939.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.39:
						return 'DK939.2-939.39'
					else:
						return 'DK931-939.5'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=941.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=949.5:
					if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=949.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=949.39:
						return 'DK949.2-949.39'
					else:
						return 'DK941-949.5'
				else:
					return 'DK501-949.5'
			else:
				return 'DK1-949.5'
		elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4800.0:
			if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4122.0:
				return 'DK4120-4122'
			elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4123.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4452.0:
				if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4186.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4348.0:
					return 'DK4186-4348'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4348.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4395.0:
					return 'DK4348.5-4395'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4397.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4420.0:
					return 'DK4397-4420'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4429.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4442.0:
					return 'DK4429-4442'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4445.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4452.0:
					return 'DK4445-4452'
				else:
					return 'DK4123-4452'
			elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4800.0:
				if len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4645.0:
					return 'DK4610-4645'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4685.0:
					return 'DK4650-4685'
				elif len(loc)>2 and loc[:2]=='DK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4735.0:
					return 'DK4700-4735'
				else:
					return 'DK4600-4800'
			else:
				return 'DK4010-4800'
		elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1180.0:
			if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6.8:
				return 'DL1-6.8'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=11.5:
				return 'DL7-11.5'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=42.5:
				return 'DL20-42.5'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=43.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
				if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=43.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=49.0:
					return 'DL43-49'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=52.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
					return 'DL52-59'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
					if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=65.0:
						return 'DL61-65'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=81.0:
						return 'DL75-81'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=83.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
						return 'DL83-87'
					else:
						return 'DL61-87'
				else:
					return 'DL43-87'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=291.0:
				if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=114.5:
					return 'DL101-114.5'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.0:
					return 'DL115-120'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=142.5:
					return 'DL121-142.5'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=143.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=263.3:
					if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=143.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=151.0:
						return 'DL143-151'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=154.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=159.5:
						return 'DL154-159.5'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=263.3:
						return 'DL160-263.3'
					else:
						return 'DL143-263.3'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=269.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=291.0:
					if (loc=='DL271') or (len(loc)>5 and loc[:5]=='DL271' and not loc[5].isdigit()):
						return 'DL271'
					elif (loc=='DL276') or (len(loc)>5 and loc[:5]=='DL276' and not loc[5].isdigit()):
						return 'DL276'
					elif (loc=='DL291') or (len(loc)>5 and loc[:5]=='DL291' and not loc[5].isdigit()):
						return 'DL291'
					else:
						return 'DL269-291'
				else:
					return 'DL101-291'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=398.0:
				if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=334.0:
					return 'DL301-334'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=335.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
					return 'DL335-380'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=396.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=398.0:
					return 'DL396-398'
				else:
					return 'DL301-398'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=596.0:
				if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=414.0:
					return 'DL401-414'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=415.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=419.2:
					return 'DL415-419.2'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=442.5:
					return 'DL420-442.5'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=443.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=537.0:
					if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=443.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=451.5:
						return 'DL443-451.5'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=453.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=459.0:
						return 'DL453-459'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=537.0:
						return 'DL460-537'
					else:
						return 'DL443-537'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=576.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=596.0:
					if (loc=='DL576') or (len(loc)>5 and loc[:5]=='DL576' and not loc[5].isdigit()):
						return 'DL576'
					elif (loc=='DL581') or (len(loc)>5 and loc[:5]=='DL581' and not loc[5].isdigit()):
						return 'DL581'
					elif (loc=='DL596') or (len(loc)>5 and loc[:5]=='DL596' and not loc[5].isdigit()):
						return 'DL596'
					else:
						return 'DL576-596'
				else:
					return 'DL401-596'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
				if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=614.5:
					return 'DL601-614.5'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=614.55 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.5:
					return 'DL614.55-619.5'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=642.0:
					return 'DL621-642'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=643.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=879.0:
					if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=643.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=651.0:
						return 'DL643-651'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=654.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=659.0:
						return 'DL654-659'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=879.0:
						return 'DL660-879'
					else:
						return 'DL643-879'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=971.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
					if (loc=='DL971') or (len(loc)>5 and loc[:5]=='DL971' and not loc[5].isdigit()):
						return 'DL971'
					elif (loc=='DL976') or (len(loc)>5 and loc[:5]=='DL976' and not loc[5].isdigit()):
						return 'DL976'
					elif (loc=='DL991') or (len(loc)>5 and loc[:5]=='DL991' and not loc[5].isdigit()):
						return 'DL991'
					else:
						return 'DL971-991'
				else:
					return 'DL601-991'
			elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1002.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1180.0:
				if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1002.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1014.5:
					return 'DL1002-1014.5'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1015.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1015.4:
					return 'DL1015-1015.4'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1016.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1022.0:
					return 'DL1016-1022'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1024.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1141.6:
					if len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1024.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1033.0:
						return 'DL1024-1033'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1036.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1048.0:
						return 'DL1036-1048'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1141.6:
						return 'DL1050-1141.6'
					else:
						return 'DL1024-1141.6'
				elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1180.0:
					if (loc=='DL1170') or (len(loc)>6 and loc[:6]=='DL1170' and not loc[6].isdigit()):
						return 'DL1170'
					elif len(loc)>2 and loc[:2]=='DL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1175.95:
						return 'DL1175-1175.95'
					elif (loc=='DL1180') or (len(loc)>6 and loc[:6]=='DL1180' and not loc[6].isdigit()):
						return 'DL1180'
					else:
						return 'DL1170-1180'
				else:
					return 'DL1002-1180'
			else:
				return 'DL1-1180'
		elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=402.0:
			if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=27.0:
				return 'DP1-27'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=43.2:
				return 'DP27.5-43.2'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=44.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=53.0:
				return 'DP44-53'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=56.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=272.4:
				if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=56.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=75.0:
					return 'DP56-75'
				elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=76.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=86.0:
					return 'DP76-86'
				elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=272.4:
					if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=96.0:
						return 'DP91-96'
					elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=97.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=160.8:
						return 'DP97.3-160.8'
					elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=272.4:
						return 'DP161-272.4'
					else:
						return 'DP91-272.4'
				else:
					return 'DP56-272.4'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=285.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=402.0:
				if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=285.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=295.0:
					return 'DP285-295'
				elif (loc=='DP302') or (len(loc)>5 and loc[:5]=='DP302' and not loc[5].isdigit()):
					return 'DP302'
				elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=374.0:
					return 'DP350-374'
				elif (loc=='DP402') or (len(loc)>5 and loc[:5]=='DP402' and not loc[5].isdigit()):
					return 'DP402'
				else:
					return 'DP285-402'
			else:
				return 'DP1-402'
		elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.22:
			if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=520.0:
				return 'DP501-520'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=526.5:
				return 'DP521-526.5'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=528.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=534.5:
				return 'DP528-534.5'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=535.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=682.2:
				if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=535.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=546.0:
					return 'DP535-546'
				elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=547.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=557.0:
					return 'DP547-557'
				elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=558.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=682.2:
					if len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=558.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=618.0:
						return 'DP558-618'
					elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=682.2:
						return 'DP620-682.2'
					else:
						return 'DP558-682.2'
				else:
					return 'DP535-682.2'
			elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=702.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=802.0:
				if (loc=='DP702') or (len(loc)>5 and loc[:5]=='DP702' and not loc[5].isdigit()):
					return 'DP702'
				elif len(loc)>2 and loc[:2]=='DP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=752.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=776.0:
					return 'DP752-776'
				elif (loc=='DP802') or (len(loc)>5 and loc[:5]=='DP802' and not loc[5].isdigit()):
					return 'DP802'
				else:
					return 'DP702-802'
			else:
				return 'DP501-(900.22)'
		elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=851.0:
			if len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=20.0:
				return 'DQ1-20'
			elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=26.0:
				return 'DQ20.5-26'
			elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=30.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=49.5:
				return 'DQ30-49.5'
			elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=210.0:
				if len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=57.0:
					return 'DQ51-57'
				elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=59.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.0:
					return 'DQ59-76'
				elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=78.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=210.0:
					if len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=78.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=110.0:
						return 'DQ78-110'
					elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=123.0:
						return 'DQ111-123'
					elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=124.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=191.0:
						return 'DQ124-191'
					elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=210.0:
						return 'DQ201-210'
					else:
						return 'DQ78-210'
				else:
					return 'DQ51-210'
			elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=851.0:
				if len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=800.35:
					return 'DQ301-800.35'
				elif len(loc)>2 and loc[:2]=='DQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=829.0:
					return 'DQ820-829'
				elif (loc=='DQ841') or (len(loc)>5 and loc[:5]=='DQ841' and not loc[5].isdigit()):
					return 'DQ841'
				elif (loc=='DQ851') or (len(loc)>5 and loc[:5]=='DQ851' and not loc[5].isdigit()):
					return 'DQ851'
				else:
					return 'DQ301-851'
			else:
				return 'DQ1-851'
		elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2285.0:
			if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=11.0:
				return 'DR1-11'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=16.0:
				return 'DR11.5-16'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=27.0:
				return 'DR20-27'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=32.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=48.5:
				return 'DR32-48.5'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=50.84:
				return 'DR50-50.84'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=98.0:
				if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=56.7:
					return 'DR51-56.7'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=57.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.2:
					return 'DR57-60.2'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=62.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=64.5:
					return 'DR62-64.5'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=93.47:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=69.5:
						return 'DR65-69.5'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=73.0:
						return 'DR70-73'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=73.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=93.47:
						return 'DR73.7-93.47'
					else:
						return 'DR65-93.47'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=98.0:
					if (loc=='DR95') or (len(loc)>4 and loc[:4]=='DR95' and not loc[4].isdigit()):
						return 'DR95'
					elif (loc=='DR97') or (len(loc)>4 and loc[:4]=='DR97' and not loc[4].isdigit()):
						return 'DR97'
					elif (loc=='DR98') or (len(loc)>4 and loc[:4]=='DR98' and not loc[4].isdigit()):
						return 'DR98'
					else:
						return 'DR95-98'
				else:
					return 'DR51-98'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=296.0:
				if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=206.0:
					return 'DR201-206'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=207.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=210.0:
					return 'DR207-210'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=214.2:
					return 'DR211-214.2'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=269.6:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=218.0:
						return 'DR215-218'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=219.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=229.0:
						return 'DR219-229'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=238.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=269.6:
						return 'DR238-269.6'
					else:
						return 'DR215-269.6'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=279.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=296.0:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=279.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.74:
						return 'DR279-280.74'
					elif (loc=='DR281') or (len(loc)>5 and loc[:5]=='DR281' and not loc[5].isdigit()):
						return 'DR281'
					elif (loc=='DR286') or (len(loc)>5 and loc[:5]=='DR286' and not loc[5].isdigit()):
						return 'DR286'
					elif (loc=='DR296') or (len(loc)>5 and loc[:5]=='DR296' and not loc[5].isdigit()):
						return 'DR296'
					else:
						return 'DR279-296'
				else:
					return 'DR201-296'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=741.0:
				if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=419.0:
					return 'DR401-419'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=429.4:
					return 'DR421-429.4'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=431.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=435.0:
					return 'DR431-435'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=436.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=436.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=446.0:
						return 'DR436-446'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=448.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=479.0:
						return 'DR448-479'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
						return 'DR481-605'
					else:
						return 'DR436-605'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=741.0:
					if (loc=='DR701') or (len(loc)>5 and loc[:5]=='DR701' and not loc[5].isdigit()):
						return 'DR701'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=716.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=739.0:
						return 'DR716-739'
					elif (loc=='DR741') or (len(loc)>5 and loc[:5]=='DR741' and not loc[5].isdigit()):
						return 'DR741'
					else:
						return 'DR701-741'
				else:
					return 'DR401-741'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=998.0:
				if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=914.5:
					return 'DR901-914.5'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=915.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=918.0:
					return 'DR915-918'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=926.0:
					return 'DR921-926'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=927.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.52:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=927.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=946.0:
						return 'DR927-946'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=947.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=953.0:
						return 'DR947-953'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=954.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.52:
						return 'DR954-978.52'
					else:
						return 'DR927-978.52'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=996.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=998.0:
					if (loc=='DR996') or (len(loc)>5 and loc[:5]=='DR996' and not loc[5].isdigit()):
						return 'DR996'
					elif (loc=='DR997') or (len(loc)>5 and loc[:5]=='DR997' and not loc[5].isdigit()):
						return 'DR997'
					elif (loc=='DR998') or (len(loc)>5 and loc[:5]=='DR998' and not loc[5].isdigit()):
						return 'DR998'
					else:
						return 'DR996-998'
				else:
					return 'DR901-998'
			elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1202.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2285.0:
				if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1202.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1218.0:
					return 'DR1202-1218'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1224.0:
					return 'DR1220-1224'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1227.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1231.0:
					return 'DR1227-1231'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1232.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1321.0:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1232.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1249.0:
						return 'DR1232-1249'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1258.0:
						return 'DR1250-1258'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1259.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1321.0:
						return 'DR1259-1321'
					else:
						return 'DR1232-1321'
				elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2285.0:
					if len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1352.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1485.0:
						return 'DR1352-1485'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1502.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1645.0:
						return 'DR1502-1645'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1652.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1785.0:
						return 'DR1652-1785'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1802.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1928.0:
						return 'DR1802-1928'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1932.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2125.0:
						return 'DR1932-2125'
					elif len(loc)>2 and loc[:2]=='DR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2152.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2285.0:
						return 'DR2152-2285'
					else:
						return 'DR1350-2285'
				else:
					return 'DR1202-2285'
			else:
				return 'DR1-2285'
		elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=937.0:
			if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=10.0:
				return 'DS5.95-10'
			elif (loc=='DS11') or (len(loc)>4 and loc[:4]=='DS11' and not loc[4].isdigit()):
				return 'DS11'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=13.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=28.0:
				return 'DS13-28'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=35.2:
				return 'DS31-35.2'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=35.77:
				return 'DS35.3-35.77'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=36.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.2:
				if (loc=='DS36.9') or (len(loc)>6 and loc[:6]=='DS36.9' and not loc[6].isdigit()):
					return 'DS36.9'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=37.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.2:
					return 'DS37-39.2'
				else:
					return 'DS36-39.2'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=41.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=66.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=54.95:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=54.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=54.95:
						return 'DS54-54.95'
					else:
						return 'DS51-54.95'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
					return 'DS58-59'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=66.0:
					return 'DS61-66'
				else:
					return 'DS41-66'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=67.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=79.9:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=69.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.5:
					return 'DS69-70.5'
				elif (loc=='DS70.8') or (len(loc)>6 and loc[:6]=='DS70.8' and not loc[6].isdigit()):
					return 'DS70.8'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.82 and float(re.findall(r'\d+\.?\d*',loc)[0])<=79.9:
					return 'DS70.82-79.9'
				else:
					return 'DS67-79.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=80.55:
					return 'DS80.5-80.55'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.6:
					return 'DS80.7-87.6'
				else:
					return 'DS80-90'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=92.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=94.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=94.8:
					return 'DS94.7-94.8'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=94.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=98.3:
					return 'DS94.9-98.3'
				elif (loc=='DS99') or (len(loc)>4 and loc[:4]=='DS99' and not loc[4].isdigit()):
					return 'DS99'
				else:
					return 'DS92-99'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=151.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.94:
					return 'DS109-109.94'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=111.9:
					return 'DS111-111.9'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=113.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=113.8:
					return 'DS113.2-113.8'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=114.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=128.2:
					return 'DS114-128.2'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=133.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=151.0:
					return 'DS133-151'
				else:
					return 'DS101-151'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=153.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=154.9:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=153.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=153.55:
					return 'DS153.5-153.55'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=153.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=154.55:
					return 'DS153.7-154.55'
				else:
					return 'DS153-154.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=156.0:
				return 'DS155-156'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.5:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=173.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.5:
					return 'DS173-195.5'
				else:
					return 'DS161-195.5'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=248.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=218.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=219.0:
					return 'DS218-219'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=244.63:
					return 'DS221-244.63'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=247.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=248.0:
					return 'DS247-248'
				else:
					return 'DS201-248'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=326.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=260.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=262.0:
					return 'DS260.7-262'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=268.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=269.0:
					return 'DS268-269'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=318.85:
					return 'DS270-318.85'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=324.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=326.0:
					return 'DS324-326'
				else:
					return 'DS251-326'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=327.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=329.4:
				return 'DS327-329.4'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=349.9:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=349.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=349.9:
					return 'DS349.8-349.9'
				else:
					return 'DS331-349.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=375.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=354.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=354.6:
					return 'DS354.5-354.6'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=355.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=371.3:
					return 'DS355-371.3'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=374.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=375.0:
					return 'DS374-375'
				else:
					return 'DS350-375'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=376.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=392.2:
				if (loc=='DS380') or (len(loc)>5 and loc[:5]=='DS380' and not loc[5].isdigit()):
					return 'DS380'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=389.22:
					return 'DS381-389.22'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=392.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=392.2:
					return 'DS392-392.2'
				else:
					return 'DS376-392.2'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=393.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=396.9:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=393.82 and float(re.findall(r'\d+\.?\d*',loc)[0])<=393.83:
					return 'DS393.82-393.83'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=394.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.7:
					return 'DS394.5-395.7'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=396.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=396.9:
					return 'DS396.8-396.9'
				else:
					return 'DS393-396.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=486.8:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=432.0:
					return 'DS430-432'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=481.0:
					return 'DS433-481'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=483.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=486.8:
					return 'DS483-(486.8)'
				else:
					return 'DS401-(486.8)'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=488.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=489.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.25:
					return 'DS489.2-489.25'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=489.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.86:
					return 'DS489.5-489.86'
				else:
					return 'DS488-490'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=492.9:
				return 'DS491-492.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=493.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.8:
				return 'DS493-495.8'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=498.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=498.8:
				return 'DS498-498.8'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=518.9:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=518.15 and float(re.findall(r'\d+\.?\d*',loc)[0])<=518.9:
					return 'DS518.15-518.9'
				else:
					return 'DS501-518.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.72:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=526.7:
					return 'DS524-526.7'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=527.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=530.9:
					return 'DS527-530.9'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=531.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.72:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=553.7:
						return 'DS541-553.7'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=554.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=554.98:
						return 'DS554-554.98'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=555.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=555.98:
						return 'DS555-555.98'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=556.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=559.93:
						return 'DS556-559.93'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=560.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.72:
						return 'DS560-560.72'
					else:
						return 'DS531-560.72'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=589.0:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=569.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=570.0:
						return 'DS569-570'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=570.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=586.0:
						return 'DS570.95-586'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=588.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=589.0:
						return 'DS588-589'
					else:
						return 'DS561-589'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=591.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=595.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=595.2:
						return 'DS595-595.2'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=595.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=597.215:
						return 'DS595.8-597.215'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=597.22 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
						return 'DS597.22-599'
					else:
						return 'DS591-599'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
					return 'DS600-605'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=608.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=610.9:
					return 'DS608-610.9'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=611.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=631.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=632.0:
						return 'DS631-632'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=633.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=644.46:
						return 'DS633-644.46'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.1 and float(re.findall(r'\d+\.?\d*',loc)[0])<=646.15:
						return 'DS646.1-646.15'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.17 and float(re.findall(r'\d+\.?\d*',loc)[0])<=646.29:
						return 'DS646.17-646.29'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=646.34:
						return 'DS646.3-646.34'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=646.49:
						return 'DS646.4-646.49'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=646.59:
						return 'DS646.5-646.59'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=646.69:
						return 'DS646.6-646.69'
					else:
						return 'DS611-649'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=650.99:
					return 'DS650-650.99'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.0:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=665.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=666.0:
						return 'DS665-666'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=667.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=686.62:
						return 'DS667-686.62'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=688.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.0:
						return 'DS688-689'
					else:
						return 'DS651-689'
				else:
					return 'DS520-560.72'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.9:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=731.0:
					return 'DS730-731'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=733.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=779.32:
					return 'DS733-779.32'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=781.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=796.0:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=781.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=784.2:
						return 'DS781-784.2'
					elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=785.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=786.0:
						return 'DS785-786'
					elif (loc=='DS796.H7') or (len(loc)>8 and loc[:8]=='DS796.H7' and not loc[8].isdigit()):
						return 'DS796.H7'
					else:
						return 'DS781-796'
				elif (loc=='DS798') or (len(loc)>5 and loc[:5]=='DS798' and not loc[5].isdigit()):
					return 'DS798'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=798.92 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.9:
					return 'DS798.92-799.9'
				else:
					return 'DS701-799.9'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=897.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=833.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=891.5:
					return 'DS833-891.5'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=894.215 and float(re.findall(r'\d+\.?\d*',loc)[0])<=897.0:
					return 'DS894.215-897'
				else:
					return 'DS801-897'
			elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=937.0:
				if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=904.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=922.4642:
					if len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=918.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=921.8:
						return 'DS918-921.8'
					else:
						return 'DS904.8-922.4642'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=924.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=925.0:
					return 'DS924-925'
				elif len(loc)>2 and loc[:2]=='DS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=930.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=937.0:
					return 'DS930-937'
				else:
					return 'DS901-937'
			else:
				return 'DS1-937'
		elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3415.0:
			if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=12.25:
				return 'DT7-12.25'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=15.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=16.0:
				return 'DT15-16'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=17.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
				return 'DT17-39'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=43.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=154.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=56.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=69.5:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=63.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=63.5:
						return 'DT63-63.5'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=68.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.8:
						return 'DT68-68.8'
					else:
						return 'DT56.8-69.5'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=72.0:
					return 'DT71-72'
				elif (loc=='DT73') or (len(loc)>4 and loc[:4]=='DT73' and not loc[4].isdigit()):
					return 'DT73'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=74.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=107.87:
					return 'DT74-107.87'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=154.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=139.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=153.5:
						return 'DT139-153.5'
					else:
						return 'DT115-154'
				else:
					return 'DT43-154'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=154.1 and float(re.findall(r'\d+\.?\d*',loc)[0])<=159.9:
				if (loc=='DT154.8') or (len(loc)>7 and loc[:7]=='DT154.8' and not loc[7].isdigit()):
					return 'DT154.8'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=155.2:
					return 'DT155-155.2'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=155.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=157.67:
					return 'DT155.3-157.67'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=159.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=159.9:
					return 'DT159.6-159.9'
				else:
					return 'DT154.1-159.9'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=177.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=167.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=176.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=168.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=169.5:
						return 'DT168-169.5'
					else:
						return 'DT167-176'
				else:
					return 'DT160-177'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=179.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=179.9:
				return 'DT179.2-179.9'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=181.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=346.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=239.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=223.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=223.2:
						return 'DT223-223.2'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=223.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=236.0:
						return 'DT223.3-236'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=238.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=239.0:
						return 'DT238-239'
					else:
						return 'DT211-239'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=269.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=253.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=253.2:
						return 'DT253-253.2'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=253.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=264.49:
						return 'DT253.4-264.49'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=268.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=269.0:
						return 'DT268-269'
					else:
						return 'DT241-269'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=271.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=299.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=283.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=283.6:
						return 'DT283-283.6'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=283.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=295.55:
						return 'DT283.7-295.55'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=298.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=299.0:
						return 'DT298-299'
					else:
						return 'DT271-299'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=330.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=313.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=313.6:
						return 'DT313-313.6'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=313.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.92:
						return 'DT313.7-325.92'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=328.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=329.0:
						return 'DT328-329'
					elif (loc=='DT330') or (len(loc)>5 and loc[:5]=='DT330' and not loc[5].isdigit()):
						return 'DT330'
					else:
						return 'DT301-330'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=346.0:
					return 'DT331-346'
				else:
					return 'DT181-346'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=348.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=363.3:
				return 'DT348-363.3'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=365.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=469.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=365.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=365.78:
					return 'DT365.5-365.78'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=367.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=367.8:
					return 'DT367-367.8'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.4:
						return 'DT380-380.4'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
						return 'DT380.5-390'
					else:
						return 'DT371-390'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=391.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=398.0:
					return 'DT391-398'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=409.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=402.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=402.45:
						return 'DT402.3-402.45'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=402.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=407.3:
						return 'DT402.5-407.3'
					elif (loc=='DT409') or (len(loc)>5 and loc[:5]=='DT409' and not loc[5].isdigit()):
						return 'DT409'
					else:
						return 'DT401-409'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=411.9:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.42 and float(re.findall(r'\d+\.?\d*',loc)[0])<=411.45:
						return 'DT411.42-411.45'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=411.83:
						return 'DT411.5-411.83'
					elif (loc=='DT411.9') or (len(loc)>7 and loc[:7]=='DT411.9' and not loc[7].isdigit()):
						return 'DT411.9'
					else:
						return 'DT411-411.9'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=432.5:
					return 'DT421-432.5'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.29:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.242 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.245:
						return 'DT433.242-433.245'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.252 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.287:
						return 'DT433.252-433.287'
					elif (loc=='DT433.29') or (len(loc)>8 and loc[:8]=='DT433.29' and not loc[8].isdigit()):
						return 'DT433.29'
					else:
						return 'DT433.2-433.29'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=434.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.542 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.545:
						return 'DT433.542-433.545'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=433.552 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.584:
						return 'DT433.552-433.584'
					else:
						return 'DT433.5-434'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=436.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=443.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=443.3:
						return 'DT443-443.3'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=443.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=448.25:
						return 'DT443.5-448.25'
					elif (loc=='DT449.Z2') or (len(loc)>8 and loc[:8]=='DT449.Z2' and not loc[8].isdigit()):
						return 'DT449.Z2'
					else:
						return 'DT436-449'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.49:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.24 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.25:
						return 'DT450.24-450.25'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.26 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.437:
						return 'DT450.26-450.437'
					elif (loc=='DT450.49') or (len(loc)>8 and loc[:8]=='DT450.49' and not loc[8].isdigit()):
						return 'DT450.49'
					else:
						return 'DT450-450.49'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.95:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.64 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.65:
						return 'DT450.64-450.65'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.66 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.855:
						return 'DT450.66-450.855'
					elif (loc=='DT450.95') or (len(loc)>8 and loc[:8]=='DT450.95' and not loc[8].isdigit()):
						return 'DT450.95'
					else:
						return 'DT450.5-450.95'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=468.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=469.0:
					if len(loc)>7 and loc[:7]=='DT469.M' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=38.0:
						return 'DT469.M21-.M38'
					elif (loc=='DT469.M39') or (len(loc)>9 and loc[:9]=='DT469.M39' and not loc[9].isdigit()):
						return 'DT469.M39'
					elif len(loc)>7 and loc[:7]=='DT469.M' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=4.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=495.0:
						return 'DT469.M4-.M495'
					elif (loc=='DT469.M4975') or (len(loc)>11 and loc[:11]=='DT469.M4975' and not loc[11].isdigit()):
						return 'DT469.M4975'
					elif len(loc)>7 and loc[:7]=='DT469.R' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=5.0:
						return 'DT469.R3-.R5'
					elif len(loc)>7 and loc[:7]=='DT469.S' and loc[7].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[1])>=4.0 and float(re.findall(r'\d+\.?\d*',loc)[1])<=49.0:
						return 'DT469.S4-.S49'
					else:
						return 'DT468-469'
				else:
					return 'DT365-469'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=671.0:
				if (loc=='DT477') or (len(loc)>5 and loc[:5]=='DT477' and not loc[5].isdigit()):
					return 'DT477'
				elif (loc=='DT479') or (len(loc)>5 and loc[:5]=='DT479' and not loc[5].isdigit()):
					return 'DT479'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=516.9:
					if (loc=='DT507') or (len(loc)>5 and loc[:5]=='DT507' and not loc[5].isdigit()):
						return 'DT507'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=509.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=509.9:
						return 'DT509-509.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=509.97 and float(re.findall(r'\d+\.?\d*',loc)[0])<=512.9:
						return 'DT509.97-512.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=515.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=515.9:
						return 'DT515-515.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=516.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=516.9:
						return 'DT516-516.9'
					else:
						return 'DT491-516.9'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=555.9:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=541.9:
						return 'DT541-541.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=543.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=543.9:
						return 'DT543-543.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=545.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=545.9:
						return 'DT545-545.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=546.1 and float(re.findall(r'\d+\.?\d*',loc)[0])<=546.49:
						return 'DT546.1-546.49'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=547.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=547.9:
						return 'DT547-547.9'
					elif (loc=='DT548') or (len(loc)>5 and loc[:5]=='DT548' and not loc[5].isdigit()):
						return 'DT548'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=549.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=549.9:
						return 'DT549-549.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=551.9:
						return 'DT551-551.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=554.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=554.9:
						return 'DT554-554.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=555.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=555.9:
						return 'DT555-555.9'
					else:
						return 'DT521-555.9'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=581.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=570.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=571.0:
						return 'DT570-571'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=572.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=578.4:
						return 'DT572-578.4'
					elif (loc=='DT581') or (len(loc)>5 and loc[:5]=='DT581' and not loc[5].isdigit()):
						return 'DT581'
					else:
						return 'DT561-581'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=582.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=582.9:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=582.42 and float(re.findall(r'\d+\.?\d*',loc)[0])<=582.45:
						return 'DT582.42-582.45'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=582.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=582.82:
						return 'DT582.5-582.82'
					elif (loc=='DT582.9') or (len(loc)>7 and loc[:7]=='DT582.9' and not loc[7].isdigit()):
						return 'DT582.9'
					else:
						return 'DT582-582.9'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=591.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.9:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=613.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=613.9:
						return 'DT613-613.9'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=615.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.9:
						return 'DT615-615.9'
					else:
						return 'DT591-615.9'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=619.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.9:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.9:
						return 'DT620-620.9'
					else:
						return 'DT619-620.9'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=637.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=630.5:
						return 'DT630-630.5'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=630.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=636.53:
						return 'DT630.8-636.53'
					else:
						return 'DT621-637'
				elif (loc=='DT639') or (len(loc)>5 and loc[:5]=='DT639' and not loc[5].isdigit()):
					return 'DT639'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=641.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=665.0:
					if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=649.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=650.0:
						return 'DT649.5-650'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=663.0:
						return 'DT650.2-663'
					elif (loc=='DT665') or (len(loc)>5 and loc[:5]=='DT665' and not loc[5].isdigit()):
						return 'DT665'
					else:
						return 'DT641-665'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=669.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=671.0:
					if (loc=='DT671.C2') or (len(loc)>8 and loc[:8]=='DT671.C2' and not loc[8].isdigit()):
						return 'DT671.C2'
					else:
						return 'DT669-671'
				else:
					return 'DT470-671'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1190.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1054.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1058.0:
					return 'DT1054-1058'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1062.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1182.0:
					return 'DT1062-1182'
				elif (loc=='DT1190') or (len(loc)>6 and loc[:6]=='DT1190' and not loc[6].isdigit()):
					return 'DT1190'
				else:
					return 'DT1001-1190'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1465.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1304.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1308.0:
					return 'DT1304-1308'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1314.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1436.0:
					return 'DT1314-1436'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1465.0:
					return 'DT1450-1465'
				else:
					return 'DT1251-1465'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1685.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1554.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1558.0:
					return 'DT1554-1558'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1564.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1651.0:
					return 'DT1564-1651'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1685.0:
					return 'DT1670-1685'
				else:
					return 'DT1501-1685'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2405.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1754.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1770.0:
					if (loc=='DT1757') or (len(loc)>6 and loc[:6]=='DT1757' and not loc[6].isdigit()):
						return 'DT1757'
					elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1758.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1760.0:
						return 'DT1758-1760'
					else:
						return 'DT1754-1770'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1772.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1974.0:
					return 'DT1772-1974'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2054.0:
					return 'DT1991-2054'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2145.0:
					return 'DT2075-2145'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2181.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2278.0:
					return 'DT2181-2278'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2291.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2378.0:
					return 'DT2291-2378'
				else:
					return 'DT1701-2405'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2525.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2454.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2458.0:
					return 'DT2454-2458'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2464.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2502.0:
					return 'DT2464-2502'
				else:
					return 'DT2421-2525'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2686.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2592.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2596.0:
					return 'DT2592-2596'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2604.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2660.0:
					return 'DT2604-2660'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2686.0:
					return 'DT2680-2686'
				else:
					return 'DT2541-2686'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2825.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2744.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2746.0:
					return 'DT2744-2746'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2754.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2806.0:
					return 'DT2754-2806'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2825.0:
					return 'DT2820-2825'
				else:
					return 'DT2701-2825'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2831.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2864.0:
				return 'DT2831-2864'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2871.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3025.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2910.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2913.0:
					return 'DT2910-2913'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2914.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3000.0:
					return 'DT2914-3000'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3025.0:
					return 'DT3020-3025'
				else:
					return 'DT2871-3025'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3031.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3145.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3054.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3058.0:
					return 'DT3054-3058'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3064.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3119.0:
					return 'DT3064-3119'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3145.0:
					return 'DT3140-3145'
				else:
					return 'DT3031-3145'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3257.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3189.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3192.0:
					return 'DT3189-3192'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3194.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3237.0:
					return 'DT3194-3237'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3252.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3257.0:
					return 'DT3252-3257'
				else:
					return 'DT3161-3257'
			elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3291.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3415.0:
				if len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3324.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3328.0:
					return 'DT3324-3328'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3398.0:
					return 'DT3330-3398'
				elif len(loc)>2 and loc[:2]=='DT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3415.0:
					return 'DT3410-3415'
				else:
					return 'DT3291-3415'
			else:
				return 'DT1-3415'
		elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=950.0:
			if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=28.11 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.0:
				return 'DU28.11-68'
			elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=398.0:
				if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=108.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=117.2:
					return 'DU108-117.2'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=125.0:
					if (loc=='DU125') or (len(loc)>5 and loc[:5]=='DU125' and not loc[5].isdigit()):
						return 'DU125'
					else:
						return 'DU120-125'
				elif (loc=='DU145') or (len(loc)>5 and loc[:5]=='DU145' and not loc[5].isdigit()):
					return 'DU145'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=172.0:
						return 'DU170-172'
					elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=178.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
						return 'DU178-180'
					else:
						return 'DU150-180'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=182.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.0:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.3:
						return 'DU190-195.3'
					else:
						return 'DU182-198'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=230.0:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=222.0:
						return 'DU220-222'
					elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=228.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=230.0:
						return 'DU228-230'
					else:
						return 'DU200-230'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.0:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=272.0:
						return 'DU270-272'
					elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=278.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.0:
						return 'DU278-280'
					else:
						return 'DU250-280'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=330.0:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=322.0:
						return 'DU320-322'
					elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=328.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=330.0:
						return 'DU328-330'
					else:
						return 'DU300-330'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=372.0:
						return 'DU370-372'
					elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=378.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
						return 'DU378-380'
					else:
						return 'DU350-380'
				elif (loc=='DU390') or (len(loc)>5 and loc[:5]=='DU390' and not loc[5].isdigit()):
					return 'DU390'
				elif (loc=='DU391') or (len(loc)>5 and loc[:5]=='DU391' and not loc[5].isdigit()):
					return 'DU391'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=392.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=398.0:
					return 'DU392-398'
				else:
					return 'DU80-398'
			elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.0:
				if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=419.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=422.0:
					return 'DU419-422'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=422.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=424.5:
					if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=422.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=424.0:
						return 'DU422.8-424'
					else:
						return 'DU422.5-424.5'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=428.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.0:
					return 'DU428-430'
				else:
					return 'DU400-430'
			elif (loc=='DU490') or (len(loc)>5 and loc[:5]=='DU490' and not loc[5].isdigit()):
				return 'DU490'
			elif (loc=='DU500') or (len(loc)>5 and loc[:5]=='DU500' and not loc[5].isdigit()):
				return 'DU500'
			elif (loc=='DU510') or (len(loc)>5 and loc[:5]=='DU510' and not loc[5].isdigit()):
				return 'DU510'
			elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=950.0:
				if len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=629.0:
					return 'DU620-629'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=739.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=747.0:
					return 'DU739-747'
				elif len(loc)>2 and loc[:2]=='DU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=810.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=819.0:
					return 'DU810-819'
				else:
					return 'DU520-950'
			else:
				return 'DU1-950'
		elif len(loc)>2 and loc[:2]=='DX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=301.0:
			return 'DX101-301'
		else:
			return 'D'
	elif loc[0]=='E' or loc[0]=='F':
		if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=143.0:
			if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=29.0:
				if (loc=='E29') or (len(loc)>3 and loc[:3]=='E29' and not loc[3].isdigit()):
					return 'E29'
				else:
					return 'E11-29'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=49.2:
				return 'E31-49.2'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=73.0:
				return 'E51-73'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=81.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=83.0:
					return 'E81-83'
				elif (loc=='E99') or (len(loc)>3 and loc[:3]=='E99' and not loc[3].isdigit()):
					return 'E99'
				else:
					return 'E75-99'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=135.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=103.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=110.0:
					return 'E103-110'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.0:
					return 'E111-120'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=135.0:
					return 'E121-135'
				else:
					return 'E101-135'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=143.0:
				return 'E141-143'
			else:
				return 'E11-143'
		elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=889.0:
			if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=169.12:
				return 'E151-169.12'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=183.9:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
					if (loc=='E173') or (len(loc)>4 and loc[:4]=='E173' and not loc[4].isdigit()):
						return 'E173'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=175.7:
						return 'E175-175.7'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=176.8:
						return 'E176-176.8'
					elif (loc=='E179.5') or (len(loc)>6 and loc[:6]=='E179.5' and not loc[6].isdigit()):
						return 'E179.5'
					else:
						return 'E171-180'
				elif (loc=='E181') or (len(loc)>4 and loc[:4]=='E181' and not loc[4].isdigit()):
					return 'E181'
				elif (loc=='E182') or (len(loc)>4 and loc[:4]=='E182' and not loc[4].isdigit()):
					return 'E182'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=183.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=183.3:
					return 'E183-183.3'
				else:
					return 'E171-183.9'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=183.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=183.9:
				if (loc=='E183.8') or (len(loc)>6 and loc[:6]=='E183.8' and not loc[6].isdigit()):
					return 'E183.8'
				else:
					return 'E183.7-183.9'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=185.98:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=184.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=185.98:
					if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=185.89:
						return 'E185.2-185.89'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.96 and float(re.findall(r'\d+\.?\d*',loc)[0])<=185.98:
						return 'E185.96-185.98'
					else:
						return 'E184.5-185.98'
				else:
					return 'E184-185.98'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=186.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=186.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=189.0:
					return 'E186-189'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
					if (loc=='E191') or (len(loc)>4 and loc[:4]=='E191' and not loc[4].isdigit()):
						return 'E191'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
						return 'E195-199'
					else:
						return 'E191-199'
				else:
					return 'E186-199'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=298.0:
				return 'E201-298'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=453.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.6:
					if (loc=='E302') or (len(loc)>4 and loc[:4]=='E302' and not loc[4].isdigit()):
						return 'E302'
					elif (loc=='E302.1') or (len(loc)>6 and loc[:6]=='E302.1' and not loc[6].isdigit()):
						return 'E302.1'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=302.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.6:
						return 'E302.5-302.6'
					else:
						return 'E300-302.6'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=303.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.5:
					if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=303.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=309.0:
						return 'E303-309'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=337.0:
						return 'E310-337'
					elif (loc=='E337.5') or (len(loc)>6 and loc[:6]=='E337.5' and not loc[6].isdigit()):
						return 'E337.5'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=337.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=400.0:
						return 'E337.8-400'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=415.2:
						return 'E401-415.2'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=415.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.5:
						return 'E415.6-440.5'
					else:
						return 'E303-440.5'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=453.0:
					return 'E441-453'
				else:
					return 'E300-453'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=456.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=655.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=456.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=459.0:
					return 'E456-459'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=655.0:
					return 'E461-655'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=482.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
					return 'E482-489'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=586.0:
					return 'E491-586'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=591.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=600.0:
					return 'E591-600'
				else:
					return 'E456-655'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=738.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=664.0:
					if (loc=='E660') or (len(loc)>4 and loc[:4]=='E660' and not loc[4].isdigit()):
						return 'E660'
					elif (loc=='E661.7') or (len(loc)>6 and loc[:6]=='E661.7' and not loc[6].isdigit()):
						return 'E661.7'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=663.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=664.0:
						return 'E663-664'
					else:
						return 'E660-664'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=666.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=670.0:
					if (loc=='E668') or (len(loc)>4 and loc[:4]=='E668' and not loc[4].isdigit()):
						return 'E668'
					elif (loc=='E669') or (len(loc)>4 and loc[:4]=='E669' and not loc[4].isdigit()):
						return 'E669'
					else:
						return 'E666-670'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=671.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=680.0:
					return 'E671-680'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=681.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=685.0:
					return 'E681-685'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=686.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=687.9:
					return 'E686-687.9'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
					return 'E691-695'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=696.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=700.0:
					return 'E696-700'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.0:
					return 'E701-705'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=706.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=710.0:
					return 'E706-710'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=738.0:
					if (loc=='E713') or (len(loc)>4 and loc[:4]=='E713' and not loc[4].isdigit()):
						return 'E713'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=714.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=735.0:
						return 'E714-735'
					else:
						return 'E711-738'
				else:
					return 'E660-738'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=837.7:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=749.0:
					if (loc=='E740.5') or (len(loc)>6 and loc[:6]=='E740.5' and not loc[6].isdigit()):
						return 'E740.5'
					elif (loc=='E742.5') or (len(loc)>6 and loc[:6]=='E742.5' and not loc[6].isdigit()):
						return 'E742.5'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=743.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=743.5:
						return 'E743-743.5'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=744.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=744.5:
						return 'E744-744.5'
					elif (loc=='E745') or (len(loc)>4 and loc[:4]=='E745' and not loc[4].isdigit()):
						return 'E745'
					elif (loc=='E746') or (len(loc)>4 and loc[:4]=='E746' and not loc[4].isdigit()):
						return 'E746'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=747.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=748.0:
						return 'E747-748'
					else:
						return 'E740-749'
				elif (loc=='E751') or (len(loc)>4 and loc[:4]=='E751' and not loc[4].isdigit()):
					return 'E751'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=756.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=760.0:
					return 'E756-760'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=761.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=765.0:
					return 'E761-765'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=766.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=783.0:
					if (loc=='E768') or (len(loc)>4 and loc[:4]=='E768' and not loc[4].isdigit()):
						return 'E768'
					elif (loc=='E780') or (len(loc)>4 and loc[:4]=='E780' and not loc[4].isdigit()):
						return 'E780'
					else:
						return 'E766-783'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=784.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=805.0:
					if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=785.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=786.0:
						return 'E785-786'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=796.0:
						return 'E791-796'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=805.0:
						return 'E801-805'
					else:
						return 'E784-805'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=806.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=812.0:
					return 'E806-812'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=813.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=816.0:
					return 'E813-816'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=835.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=837.7:
					return 'E835-837.7'
				else:
					return 'E740-837.7'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=838.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=889.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=838.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=840.8:
					if (loc=='E838.3') or (len(loc)>6 and loc[:6]=='E838.3' and not loc[6].isdigit()):
						return 'E838.3'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=839.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=839.8:
						return 'E839.5-839.8'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=840.2:
						return 'E840-840.2'
					elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=840.8:
						return 'E840.6-840.8'
					else:
						return 'E838-840.8'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=841.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=843.0:
					if (loc=='E842.9') or (len(loc)>6 and loc[:6]=='E842.9' and not loc[6].isdigit()):
						return 'E842.9'
					else:
						return 'E841-843'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=846.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=851.0:
					return 'E846-851'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=855.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=861.0:
					if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=860.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=861.0:
						return 'E860-861'
					else:
						return 'E855-861'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=865.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=868.0:
					return 'E865-868'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=872.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=875.0:
					return 'E872-875'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=876.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=880.0:
					if (loc=='E877.3') or (len(loc)>6 and loc[:6]=='E877.3' and not loc[6].isdigit()):
						return 'E877.3'
					else:
						return 'E876-880'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=881.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=884.0:
					return 'E881-884'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=885.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=889.0:
					return 'E885-889'
				else:
					return 'E838-889'
			elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=895.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=904.0:
				if len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=902.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=904.0:
					return 'E902-904'
				elif len(loc)>1 and loc[:1]=='E' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=907.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=909.0:
					return 'E907-909'
				else:
					return 'E895-904'
			else:
				return 'E151-889'
		elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=975.0:
			if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=15.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=16.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=30.0:
					return 'F16-30'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=45.0:
					return 'F31-45'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=46.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.0:
					return 'F46-60'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=75.0:
					return 'F61-75'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=76.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
					return 'F76-90'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=105.0:
					return 'F91-105'
				else:
					return 'F1-15'
			elif (loc=='F106') or (len(loc)>4 and loc[:4]=='F106' and not loc[4].isdigit()):
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=116.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.0:
					return 'F116-130'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=145.0:
					return 'F131-145'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=146.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=160.0:
					return 'F146-160'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=175.0:
					return 'F161-175'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
					return 'F176-190'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=205.0:
					return 'F191-205'
				else:
					return 'F106'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=206.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=220.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=235.0:
					return 'F221-235'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=236.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=250.0:
					return 'F236-250'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
					return 'F251-265'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=266.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.0:
					return 'F266-280'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=295.0:
					return 'F281-295'
				else:
					return 'F206-220'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=296.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=301.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=306.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=320.0:
					return 'F306-320'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=335.0:
					return 'F321-335'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=336.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=350.0:
					return 'F336-350'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=355.0:
					return 'F350.5-355'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=366.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
					return 'F366-380'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
					return 'F381-395'
				else:
					return 'F296-301'
			elif (loc=='F396') or (len(loc)>4 and loc[:4]=='F396' and not loc[4].isdigit()):
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=406.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=420.0:
					return 'F406-420'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=431.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=445.0:
					return 'F431-445'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=446.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=460.0:
					return 'F446-460'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
					return 'F461-475'
				else:
					return 'F396'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=476.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=485.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=486.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
					return 'F486-500'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=516.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=520.0:
					return 'F516-520'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=535.0:
					return 'F521-535'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=536.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=550.0:
					return 'F536-550'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=553.2:
					return 'F550.5-553.2'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=575.0:
					return 'F561-575'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=576.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=590.0:
					return 'F576-590'
				else:
					return 'F476-485'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=596.3:
				if (loc=='F597') or (len(loc)>4 and loc[:4]=='F597' and not loc[4].isdigit()):
					return 'F597'
				elif (loc=='F598') or (len(loc)>4 and loc[:4]=='F598' and not loc[4].isdigit()):
					return 'F598'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.0:
					return 'F601-615'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=616.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=630.0:
					return 'F616-630'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=631.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.0:
					return 'F631-645'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=660.0:
					return 'F646-660'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=675.0:
					return 'F661-675'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=676.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=690.0:
					return 'F676-690'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.0:
					return 'F691-705'
				else:
					return 'F590.3-596.3'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=721.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=722.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=726.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=740.0:
					return 'F726-740'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=741.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=755.0:
					return 'F741-755'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=756.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=770.0:
					return 'F756-770'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=771.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
					return 'F771-785'
				else:
					return 'F721-722'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=786.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=790.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=805.0:
					return 'F791-805'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=806.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=820.0:
					return 'F806-820'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=821.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=835.0:
					return 'F821-835'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=836.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=850.0:
					return 'F836-850'
				else:
					return 'F786-790'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=850.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=851.5:
				if (loc=='F851.7') or (len(loc)>6 and loc[:6]=='F851.7' and not loc[6].isdigit()):
					return 'F851.7'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=852.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=854.0:
					return 'F852-854'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=856.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=870.0:
					return 'F856-870'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=871.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=885.0:
					return 'F871-885'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=886.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.0:
					return 'F886-900'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
					if (loc=='F951') or (len(loc)>4 and loc[:4]=='F951' and not loc[4].isdigit()):
						return 'F951'
					else:
						return 'F901-951'
				else:
					return 'F850.5-851.5'
			elif (loc=='F965') or (len(loc)>4 and loc[:4]=='F965' and not loc[4].isdigit()):
				return 'F965'
			elif (loc=='F970') or (len(loc)>4 and loc[:4]=='F970' and not loc[4].isdigit()):
				return 'F970'
			elif (loc=='F975') or (len(loc)>4 and loc[:4]=='F975' and not loc[4].isdigit()):
				return 'F975'
			else:
				return 'F1-975'
		elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0:
			if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1145.2:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1035.0:
					return 'F1001-1035'
				elif (loc=='F1035.8') or (len(loc)>7 and loc[:7]=='F1035.8' and not loc[7].isdigit()):
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1036.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1040.0:
						return 'F1036-1040'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1041.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1045.0:
						return 'F1041-1045'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1046.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1049.7:
						return 'F1046-1049.7'
					else:
						return 'F1035.8'
				elif (loc=='F1050') or (len(loc)>5 and loc[:5]=='F1050' and not loc[5].isdigit()):
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1055.0:
						return 'F1051-1055'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1056.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1059.7:
						return 'F1056-1059.7'
					else:
						return 'F1050'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1060.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1060.97:
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1061.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1065.0:
						return 'F1061-1065'
					elif (loc=='F1067') or (len(loc)>5 and loc[:5]=='F1067' and not loc[5].isdigit()):
						return 'F1067'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1074.7:
						return 'F1070-1074.7'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1080.0:
						return 'F1075-1080'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1086.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1089.7:
						return 'F1086-1089.7'
					elif (loc=='F1090') or (len(loc)>5 and loc[:5]=='F1090' and not loc[5].isdigit()):
						return 'F1090'
					elif (loc=='F1090.5') or (len(loc)>7 and loc[:7]=='F1090.5' and not loc[7].isdigit()):
						return 'F1090.5'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1091.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1095.5:
						return 'F1091-1095.5'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1096.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1100.5:
						return 'F1096-1100.5'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1105.7:
						return 'F1101-1105.7'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1106.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1110.5:
						return 'F1106-1110.5'
					else:
						return 'F1060-1060.97'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1139.0:
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1139.0:
						return 'F1135-1139'
					else:
						return 'F1121-1139'
				elif (loc=='F1140') or (len(loc)>5 and loc[:5]=='F1140' and not loc[5].isdigit()):
					return 'F1140'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1145.2:
					return 'F1141-1145.2'
				else:
					return 'F1001-1145.2'
			else:
				return 'F1001-'
		elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1170.0:
			if (loc=='F1170') or (len(loc)>5 and loc[:5]=='F1170' and not loc[5].isdigit()):
				return 'F1170'
			else:
				return 'F1170-'
		elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.0:
			if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1392.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1218.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1221.0:
					return 'F1218.5-1221'
				else:
					return 'F1201-1392'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1419.0:
				return 'F1401-1419'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1440.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1435.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1435.3:
					return 'F1435-1435.3'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1457.0:
					return 'F1441-1457'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1477.0:
					return 'F1461-1477'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1497.0:
					return 'F1481-1497'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1517.0:
					return 'F1501-1517'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1537.0:
					return 'F1521-1537'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1557.0:
					return 'F1541-1557'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1577.0:
					if (loc=='F1569.C2') or (len(loc)>8 and loc[:8]=='F1569.C2' and not loc[8].isdigit()):
						return 'F1569.C2'
					else:
						return 'F1561-1577'
				else:
					return 'F1421-1440'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1629.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1640.0:
					return 'F1630-1640'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1660.0:
					return 'F1650-1660'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1741.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1991.0:
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1854.9:
						return 'F1751-1854.9'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1861.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1896.0:
						return 'F1861-1896'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1941.0:
						return 'F1900-1941'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1983.0:
						return 'F1951-1983'
					elif (loc=='F1991') or (len(loc)>5 and loc[:5]=='F1991' and not loc[5].isdigit()):
						return 'F1991'
					else:
						return 'F1741-1991'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2151.0:
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2006.0:
						return 'F2006-'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2033.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2129.0:
						return 'F2033-2129'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2131.0:
						return 'F2131-'
					else:
						return 'F2001-2151'
				else:
					return 'F1601-1629'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2191.0:
				return 'F2155-2191'
			elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.0:
				if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2239.0:
					return 'F2201-2239'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2299.0:
					return 'F2251-2299'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2349.0:
					return 'F2301-2349'
				elif (loc=='F2351') or (len(loc)>5 and loc[:5]=='F2351' and not loc[5].isdigit()):
					if len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2391.0:
						return 'F2361-2391'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2431.0:
						return 'F2401-2431'
					elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2471.0:
						return 'F2441-2471'
					else:
						return 'F2351'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2659.0:
					return 'F2501-2659'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2699.0:
					return 'F2661-2699'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2799.0:
					return 'F2701-2799'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3021.0:
					return 'F2801-3021'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3031.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3031.5:
					return 'F3031-3031.5'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3285.0:
					return 'F3051-3285'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3359.0:
					return 'F3301-3359'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3619.0:
					return 'F3401-3619'
				elif len(loc)>1 and loc[:1]=='F' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.0:
					return 'F3701-3799'
				else:
					return 'F2201-3799'
			else:
				return 'F1201-3799'
		else:
			return 'E'
	elif loc[0]=='G':
		if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=922.0:
			if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=69.0:
				return 'G65-69'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.6:
				return 'G70-70.6'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'G80-99'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=108.5:
				return 'G100.5-108.5'
			elif (loc=='G140') or (len(loc)>4 and loc[:4]=='G140' and not loc[4].isdigit()):
				return 'G140'
			elif (loc=='G141') or (len(loc)>4 and loc[:4]=='G141' and not loc[4].isdigit()):
				return 'G141'
			elif (loc=='G142') or (len(loc)>4 and loc[:4]=='G142' and not loc[4].isdigit()):
				return 'G142'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=149.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
				if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=154.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=155.8:
					return 'G154.9-155.8'
				else:
					return 'G149-180'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=336.0:
				return 'G200-336'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=369.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=503.0:
				return 'G369-503'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=539.0:
				return 'G521-539'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=550.0:
				return 'G540-550'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=575.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
				return 'G575-890'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=905.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=910.0:
				return 'G905-910'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=912.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=922.0:
				return 'G912-922'
			else:
				return 'G1-922'
		elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3122.0:
			if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1000.5:
				return 'G1000-1000.5'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1046.0:
				return 'G1001-1046'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1052.0:
				return 'G1050-1052'
			elif (loc=='G1053') or (len(loc)>5 and loc[:5]=='G1053' and not loc[5].isdigit()):
				return 'G1053'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1054.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1055.0:
				return 'G1054-1055'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1059.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1061.0:
				return 'G1059-1061'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3102.0:
				if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1779.0:
					if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1105.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1692.0:
						return 'G1105-1692'
					elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1779.0:
						return 'G1700-1779'
					else:
						return 'G1100-1779'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1780.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2799.0:
					if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2196.0:
						return 'G1791-2196'
					elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2444.84:
						return 'G2200-2444.84'
					elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2445.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2739.0:
						return 'G2445-2739'
					else:
						return 'G1780-2799'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2799.0:
					return 'G2740-2799'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3064.0:
					return 'G2800-3064'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3102.0:
					return 'G3100-3102'
				else:
					return 'G1100-3102'
			elif (loc=='G3122') or (len(loc)>5 and loc[:5]=='G3122' and not loc[5].isdigit()):
				return 'G3122'
			else:
				return 'G1000-3122'
		elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3171.0:
			return 'G3160-3171'
		elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9980.0:
			if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3182.0:
				return 'G3180-3182'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3191.0:
				return 'G3190-3191'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3197.0:
				return 'G3195-3197'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3202.0:
				return 'G3200-3202'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3221.0:
				return 'G3210-3221'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3240.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3241.0:
				return 'G3240-3241'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3251.0:
				return 'G3250-3251'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3272.0:
				return 'G3260-3272'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9880.0:
				if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5667.0:
					if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5184.0:
						return 'G3300-5184'
					elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5667.0:
						return 'G5200-5667'
					else:
						return 'G3290-5667'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8904.0:
					if len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7342.0:
						return 'G5700-7342'
					elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8198.54:
						return 'G7400-8198.54'
					elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8904.0:
						return 'G8200-8904'
					else:
						return 'G5670-8904'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9084.0:
					return 'G8950-9084'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9095.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9794.0:
					return 'G9095-9794'
				elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9804.0:
					return 'G9800-9804'
				else:
					return 'G3290-9880'
			elif len(loc)>1 and loc[:1]=='G' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9980.0:
				return 'G9900-9980'
			else:
				return 'G3180-9980'
		elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1776.0:
			if len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
				return 'GA51-87'
			elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1776.0:
				if (loc=='GA109') or (len(loc)>5 and loc[:5]=='GA109' and not loc[5].isdigit()):
					return 'GA109'
				elif (loc=='GA109.5') or (len(loc)>7 and loc[:7]=='GA109.5' and not loc[7].isdigit()):
					return 'GA109.5'
				elif (loc=='GA109.8') or (len(loc)>7 and loc[:7]=='GA109.8' and not loc[7].isdigit()):
					return 'GA109.8'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.0:
					return 'GA110-115'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=155.0:
					return 'GA125-155'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=192.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=197.3:
					return 'GA192-197.3'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=197.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.0:
					return 'GA197.5-198'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=288.0:
					return 'GA260-288'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
					return 'GA300-325'
				elif len(loc)>2 and loc[:2]=='GA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1776.0:
					return 'GA341-1776'
				else:
					return 'GA101-1776'
			else:
				return 'GA1-1776'
		elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5030.0:
			if len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
				if (loc=='GB447') or (len(loc)>5 and loc[:5]=='GB447' and not loc[5].isdigit()):
					return 'GB447'
				elif (loc=='GB448') or (len(loc)>5 and loc[:5]=='GB448' and not loc[5].isdigit()):
					return 'GB448'
				elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=460.0:
					return 'GB450-460'
				elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=468.995:
					return 'GB461-468.995'
				elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=478.995:
					return 'GB471-478.995'
				elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=555.0:
					return 'GB500-555'
				elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
					return 'GB561-649'
				else:
					return 'GB400-649'
			elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2998.0:
				if len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2998.0:
					if len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=992.0:
						return 'GB980-992'
					elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.8:
						return 'GB1001-1199.8'
					elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1598.0:
						return 'GB1201-1598'
					elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2398.0:
						return 'GB1601-2398'
					elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2598.0:
						return 'GB2401-2598'
					elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2798.0:
						return 'GB2601-2798'
					elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2998.0:
						return 'GB2801-2998'
					else:
						return 'GB980-2998'
				else:
					return 'GB651-2998'
			elif len(loc)>2 and loc[:2]=='GB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5030.0:
				return 'GB5000-5030'
			else:
				return 'GB3-5030'
		elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1581.0:
			if (loc=='GC63') or (len(loc)>4 and loc[:4]=='GC63' and not loc[4].isdigit()):
				return 'GC63'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
				return 'GC65-78'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=83.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.6:
				return 'GC83-87.6'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=96.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.8:
				return 'GC96-97.8'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=103.0:
				return 'GC100-103'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=149.0:
				return 'GC109-149'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=182.0:
				if len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=155.0:
					return 'GC151-155'
				elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=177.0:
					return 'GC160-177'
				elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=177.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=182.0:
					return 'GC177.6-182'
				else:
					return 'GC150-182'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.5:
				return 'GC190-190.5'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=376.0:
				if len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=227.0:
					return 'GC205-227'
				elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=228.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=228.6:
					return 'GC228.5-228.6'
				elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=229.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=296.8:
					return 'GC229-296.8'
				elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=297.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=299.0:
					return 'GC297-299'
				elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=376.0:
					return 'GC300-376'
				else:
					return 'GC200-376'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=377.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=399.0:
				return 'GC377-399'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=881.0:
				return 'GC401-881'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1023.0:
				return 'GC1000-1023'
			elif len(loc)>2 and loc[:2]=='GC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1581.0:
				return 'GC1080-1581'
			else:
				return 'GC1-1581'
		elif len(loc)>2 and loc[:2]=='GE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=350.0:
			if len(loc)>2 and loc[:2]=='GE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
				return 'GE70-90'
			elif len(loc)>2 and loc[:2]=='GE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
				return 'GE170-190'
			elif len(loc)>2 and loc[:2]=='GE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
				return 'GE195-199'
			elif len(loc)>2 and loc[:2]=='GE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=350.0:
				return 'GE300-350'
			else:
				return 'GE1-350'
		elif len(loc)>2 and loc[:2]=='GF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.0:
			if (loc=='GF51') or (len(loc)>4 and loc[:4]=='GF51' and not loc[4].isdigit()):
				return 'GF51'
			elif (loc=='GF75') or (len(loc)>4 and loc[:4]=='GF75' and not loc[4].isdigit()):
				return 'GF75'
			elif len(loc)>2 and loc[:2]=='GF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=127.0:
				if (loc=='GF125') or (len(loc)>5 and loc[:5]=='GF125' and not loc[5].isdigit()):
					return 'GF125'
				elif (loc=='GF127') or (len(loc)>5 and loc[:5]=='GF127' and not loc[5].isdigit()):
					return 'GF127'
				else:
					return 'GF101-127'
			elif len(loc)>2 and loc[:2]=='GF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.0:
				return 'GF500-900'
			else:
				return 'GF1-900'
		elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
			if len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=298.0:
				if len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
					return 'GN51-59'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=62.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
					return 'GN62.8-265'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=269.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=279.0:
					return 'GN269-279'
				elif (loc=='GN280.7') or (len(loc)>7 and loc[:7]=='GN280.7' and not loc[7].isdigit()):
					return 'GN280.7'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=289.0:
					if len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=282.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=286.7:
						return 'GN282-286.7'
					else:
						return 'GN281-289'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=296.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=296.5:
					return 'GN296-296.5'
				else:
					return 'GN49-298'
			elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=674.0:
				if len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=357.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=367.0:
					return 'GN357-367'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=378.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=396.0:
					return 'GN378-396'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=397.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=397.7:
					return 'GN397-397.7'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=406.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=517.0:
					if len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=406.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=442.0:
						return 'GN406-442'
					elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=448.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.8:
						return 'GN448-450.8'
					elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=477.7:
						return 'GN451-477.7'
					elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=478.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=491.7:
						return 'GN478-491.7'
					elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=492.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.2:
						return 'GN492-495.2'
					elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=495.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=498.0:
						return 'GN495.4-498'
					elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=502.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=517.0:
						return 'GN502-517'
					else:
						return 'GN406-517'
				elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=537.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=674.0:
					if len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=674.0:
						return 'GN550-674'
					else:
						return 'GN537-674'
				else:
					return 'GN301-674'
			elif len(loc)>2 and loc[:2]=='GN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
				return 'GN700-890'
			else:
				return 'GN1-890'
		elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=950.0:
			if len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=72.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=79.0:
				return 'GR72-79'
			elif (loc=='GR81') or (len(loc)>4 and loc[:4]=='GR81' and not loc[4].isdigit()):
				return 'GR81'
			elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
				return 'GR99.6-390'
			elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=950.0:
				if len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=426.0:
					return 'GR420-426'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=488.0:
					return 'GR430-488'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.0:
					return 'GR500-615'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=640.0:
					return 'GR620-640'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=690.0:
					return 'GR650-690'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=860.0:
					return 'GR700-860'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=865.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=874.0:
					return 'GR865-874'
				elif (loc=='GR880') or (len(loc)>5 and loc[:5]=='GR880' and not loc[5].isdigit()):
					return 'GR880'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=890.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
					return 'GR890-915'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=931.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=935.0:
					return 'GR931-935'
				elif len(loc)>2 and loc[:2]=='GR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=941.0:
					return 'GR940-941'
				else:
					return 'GR420-950'
			else:
				return 'GR1-950'
		elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7070.0:
			if len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=165.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=476.0:
				return 'GT165-476'
			elif (loc=='GT485') or (len(loc)>5 and loc[:5]=='GT485' and not loc[5].isdigit()):
				return 'GT485'
			elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=495.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'GT495-499'
			elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2370.0:
				return 'GT500-2370'
			elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3390.5:
				return 'GT2400-3390.5'
			elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5090.0:
				return 'GT3400-5090'
			elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5286.0:
				return 'GT5220-5286'
			elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6737.0:
				if len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5690.0:
					return 'GT5320-5690'
				elif len(loc)>2 and loc[:2]=='GT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6390.0:
					return 'GT5750-6390'
				else:
					return 'GT5320-6737'
			else:
				return 'GT1-7070'
		elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1860.0:
			if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=181.35 and float(re.findall(r'\d+\.?\d*',loc)[0])<=181.6:
				return 'GV181.35-181.6'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=182.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=182.5:
				return 'GV182-182.5'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=200.66:
				if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.68 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.975:
					if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=198.945 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.975:
						return 'GV198.945-198.975'
					else:
						return 'GV191.68-198.975'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.62:
					return 'GV199-199.62'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=199.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=200.35:
					return 'GV199.8-200.35'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=200.56:
					return 'GV200.4-200.56'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=200.66:
					return 'GV200.6-200.66'
				else:
					return 'GV191.2-200.66'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=555.0:
				if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=346.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=351.5:
					return 'GV346-351.5'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.0:
					return 'GV401-433'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=435.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=436.7:
					return 'GV435-436.7'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=451.4:
					return 'GV450-451.4'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=555.0:
					return 'GV460-555'
				else:
					return 'GV201-555'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=557.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1198.995:
				if (loc=='GV711') or (len(loc)>5 and loc[:5]=='GV711' and not loc[5].isdigit()):
					return 'GV711'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=712.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=725.0:
					return 'GV712-725'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=733.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=734.5:
					return 'GV733-734.5'
				elif (loc=='GV735') or (len(loc)>5 and loc[:5]=='GV735' and not loc[5].isdigit()):
					return 'GV735'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=743.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=749.0:
					return 'GV743-749'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=770.27:
					return 'GV750-770.27'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=770.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=840.0:
					return 'GV770.3-840'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=857.0:
					return 'GV840.7-857'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=861.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1017.0:
					return 'GV861-1017'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1034.0:
					return 'GV1020-1034'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1060.4:
					return 'GV1040-1060.4'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1060.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1098.0:
					return 'GV1060.5-1098'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1150.9:
					return 'GV1100-1150.9'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1190.0:
					return 'GV1151-1190'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1198.995:
					return 'GV1195-1198.995'
				else:
					return 'GV557-1198.995'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1570.0:
				if (loc=='GV1201.5') or (len(loc)>8 and loc[:8]=='GV1201.5' and not loc[8].isdigit()):
					return 'GV1201.5'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1203.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1220.8:
					if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1218.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1220.8:
						return 'GV1218.5-1220.8'
					else:
						return 'GV1203-1220.8'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1469.63:
					if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1232.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1299.0:
						return 'GV1232-1299'
					elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1311.0:
						return 'GV1301-1311'
					elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1312.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1469.0:
						return 'GV1312-1469'
					elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1469.15 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1469.62:
						return 'GV1469.15-1469.62'
					else:
						return 'GV1221-1469.63'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1511.0:
					if len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1507.0:
						return 'GV1491-1507'
					else:
						return 'GV1470-1511'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1561.0:
					return 'GV1541-1561'
				elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1564.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1565.0:
					return 'GV1564-1565'
				else:
					return 'GV1199-1570'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1580.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.4:
				return 'GV1580-1799.4'
			elif len(loc)>2 and loc[:2]=='GV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1860.0:
				return 'GV1800-1860'
			else:
				return 'GV1-1860'
		else:
			return 'G'
	elif loc[0]=='H':
		if len(loc)>1 and loc[:1]=='H' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
			return 'H1-99'
		elif len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4737.0:
			if len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=29.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=32.0:
				return 'HA29-32'
			elif len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=36.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=37.0:
				return 'HA36-37'
			elif len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=38.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
				return 'HA38-39'
			elif len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=154.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4737.0:
				if len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=154.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=155.0:
					return 'HA154-155'
				elif len(loc)>2 and loc[:2]=='HA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=473.0:
					return 'HA175-473'
				else:
					return 'HA154-4737'
			else:
				return 'HA1-4737'
		elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3840.0:
			if len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=74.0:
				return 'HB71-74'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.0:
				return 'HB75-130'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=147.0:
				if len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=147.0:
					return 'HB135-147'
				else:
					return 'HB131-147'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=206.0:
				return 'HB201-206'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=236.0:
				return 'HB221-236'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=238.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=251.0:
				return 'HB238-251'
			elif (loc=='HB501') or (len(loc)>5 and loc[:5]=='HB501' and not loc[5].isdigit()):
				return 'HB501'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=522.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=715.0:
				if len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=535.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=551.0:
					return 'HB535-551'
				elif (loc=='HB601') or (len(loc)>5 and loc[:5]=='HB601' and not loc[5].isdigit()):
					return 'HB601'
				elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=615.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=715.0:
					return 'HB615-715'
				else:
					return 'HB522-715'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=843.0:
				return 'HB801-843'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=846.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=846.8:
				return 'HB846-846.8'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=848.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3697.0:
				return 'HB848-3697'
			elif len(loc)>2 and loc[:2]=='HB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3840.0:
				return 'HB3711-3840'
			else:
				return 'HB1-3840'
		elif len(loc)>2 and loc[:2]=='HC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1085.0:
			if (loc=='HC79') or (len(loc)>4 and loc[:4]=='HC79' and not loc[4].isdigit()):
				return 'HC79'
			elif (loc=='HC92') or (len(loc)>4 and loc[:4]=='HC92' and not loc[4].isdigit()):
				return 'HC92'
			elif len(loc)>2 and loc[:2]=='HC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=94.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1085.0:
				return 'HC94-1085'
			else:
				return 'HC10-1085'
		elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=28.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
			if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=28.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.0:
				if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=39.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=40.7:
					return 'HD39-40.7'
				elif (loc=='HD41') or (len(loc)>4 and loc[:4]=='HD41' and not loc[4].isdigit()):
					return 'HD41'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=45.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=45.2:
					return 'HD45-45.2'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=47.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=47.4:
					return 'HD47-47.4'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=49.5:
					return 'HD49-49.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=50.5:
					return 'HD50-50.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=56.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=57.5:
					return 'HD56-57.5'
				elif (loc=='HD58') or (len(loc)>4 and loc[:4]=='HD58' and not loc[4].isdigit()):
					return 'HD58'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.95:
					return 'HD58.7-58.95'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=59.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.6:
					return 'HD59-59.6'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.5:
					return 'HD60-60.5'
				elif (loc=='HD61') or (len(loc)>4 and loc[:4]=='HD61' and not loc[4].isdigit()):
					return 'HD61'
				elif (loc=='HD62') or (len(loc)>4 and loc[:4]=='HD62' and not loc[4].isdigit()):
					return 'HD62'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=62.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=62.8:
					return 'HD62.2-62.8'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=66.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=66.2:
					return 'HD66-66.2'
				elif (loc=='HD69') or (len(loc)>4 and loc[:4]=='HD69' and not loc[4].isdigit()):
					return 'HD69'
				else:
					return 'HD28-70'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=72.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=88.0:
				return 'HD72-88'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1395.5:
				if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1286.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1339.0:
					if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1286.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1289.0:
						return 'HD1286-1289'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1291.0:
						return 'HD1290-1291'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1313.0:
						return 'HD1301-1313'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1326.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1329.0:
						return 'HD1326-1329'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1331.0:
						return 'HD1330-1331'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1332.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1333.5:
						return 'HD1332-1333.5'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1334.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1335.0:
						return 'HD1334-1335'
					elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1336.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1339.0:
						return 'HD1336-1339'
					else:
						return 'HD1286-1339'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1395.5:
					return 'HD1361-1395.5'
				else:
					return 'HD101-1395.5'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2210.0:
				if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1428.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1431.0:
					return 'HD1428-1431'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1476.0:
					return 'HD1470-1476'
				elif (loc=='HD1478') or (len(loc)>6 and loc[:6]=='HD1478' and not loc[6].isdigit()):
					return 'HD1478'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1483.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1486.0:
					return 'HD1483-1486'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1491.5:
					return 'HD1491-1491.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1492.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1492.5:
					return 'HD1492-1492.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1493.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1493.5:
					return 'HD1493-1493.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1542.0:
					return 'HD1501-1542'
				elif (loc=='HD1549') or (len(loc)>6 and loc[:6]=='HD1549' and not loc[6].isdigit()):
					return 'HD1549'
				elif (loc=='HD1580') or (len(loc)>6 and loc[:6]=='HD1580' and not loc[6].isdigit()):
					return 'HD1580'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1635.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1702.0:
					return 'HD1635-1702'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1741.0:
					return 'HD1711-1741'
				else:
					return 'HD1401-2210'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4730.9:
				if (loc=='HD2329') or (len(loc)>6 and loc[:6]=='HD2329' and not loc[6].isdigit()):
					return 'HD2329'
				elif (loc=='HD2330') or (len(loc)>6 and loc[:6]=='HD2330' and not loc[6].isdigit()):
					return 'HD2330'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2336.0:
					return 'HD2331-2336'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2337.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2339.0:
					return 'HD2337-2339'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2340.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2346.5:
					return 'HD2340.8-2346.5'
				else:
					return 'HD2321-4730.9'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2350.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2356.0:
				if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2365.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2385.0:
					return 'HD2365-2385'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2429.0:
					return 'HD2421-2429'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2709.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2930.7:
					return 'HD2709-2930.7'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3575.0:
					return 'HD2951-3575'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3611.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4730.9:
					return 'HD3611-4730.9'
				else:
					return 'HD2350.8-2356'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8943.0:
				if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4861.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4895.0:
					return 'HD4861-4895'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4909.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5100.9:
					return 'HD4909-5100.9'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5106.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5267.0:
					return 'HD5106-5267'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5306.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5474.0:
					return 'HD5306-5474'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5630.7:
					return 'HD5481-5630.7'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5660.0:
					return 'HD5650-5660'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6000.9:
					return 'HD5701-6000.9'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6305.0:
					return 'HD6050-6305'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6940.7:
					return 'HD6350-6940.7'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6941.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6948.0:
					return 'HD6941-6948'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6957.0:
					return 'HD6951-6957'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6958.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6976.0:
					return 'HD6958.5-6976'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6977.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7080.0:
					return 'HD6977-7080'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7088.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7252.0:
					return 'HD7088-7252'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7255.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7256.0:
					return 'HD7255-7256'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7780.8:
					return 'HD7260-7780.8'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7795.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8027.0:
					return 'HD7795-8027'
				elif (loc=='HD8031') or (len(loc)>6 and loc[:6]=='HD8031' and not loc[6].isdigit()):
					return 'HD8031'
				elif (loc=='HD8038') or (len(loc)>6 and loc[:6]=='HD8038' and not loc[6].isdigit()):
					return 'HD8038'
				elif (loc=='HD8039') or (len(loc)>6 and loc[:6]=='HD8039' and not loc[6].isdigit()):
					return 'HD8039'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8045.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8943.0:
					return 'HD8045-8943'
				else:
					return 'HD4801-8943'
			elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				if len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9495.0:
					return 'HD9000-9495'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9502.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9502.5:
					return 'HD9502-9502.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9506.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9624.0:
					return 'HD9506-9624'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9663.0:
					return 'HD9650-9663'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9665.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9675.0:
					return 'HD9665-9675'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9714.0:
					return 'HD9680-9714'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9715.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9717.5:
					return 'HD9715-9717.5'
				elif len(loc)>2 and loc[:2]=='HD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9975.0:
					return 'HD9720-9975'
				elif (loc=='HD9999') or (len(loc)>6 and loc[:6]=='HD9999' and not loc[6].isdigit()):
					return 'HD9999'
				else:
					return 'HD9000-9999'
			else:
				return 'HD28-9999'
		elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9990.0:
			if len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.5:
				return 'HE199-199.5'
			elif (loc=='HE199.9') or (len(loc)>7 and loc[:7]=='HE199.9' and not loc[7].isdigit()):
				return 'HE199.9'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=305.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=311.0:
				return 'HE305-311'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=323.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=328.0:
				return 'HE323-328'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
				if len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=369.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=373.0:
					return 'HE369-373'
				elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=374.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=377.0:
					return 'HE374-377'
				elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=379.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
					return 'HE379-380'
				else:
					return 'HE331-380'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=971.0:
				if len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.0:
					return 'HE380.8-560'
				elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=971.0:
					if len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=943.0:
						return 'HE730-943'
					else:
						return 'HE561-971'
				else:
					return 'HE380.8-971'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5600.0:
				return 'HE1001-5600'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5725.0:
				return 'HE5601-5725'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5746.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5749.0:
				return 'HE5746-5749'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5870.0:
				return 'HE5751-5870'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5880.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5990.0:
				return 'HE5880-5990'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7500.0:
				return 'HE6000-7500'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7511.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7549.0:
				return 'HE7511-7549'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8700.9:
				if len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8688.0:
					return 'HE8660-8688'
				elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8689.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8700.95:
					return 'HE8689-8700.95'
				else:
					return 'HE7601-8700.9'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9680.7:
				return 'HE8701-9680.7'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9713.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9715.0:
				return 'HE9713-9715'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9719.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9721.0:
				return 'HE9719-9721'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9723.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9737.0:
				return 'HE9723-9737'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9756.0:
				return 'HE9751-9756'
			elif len(loc)>2 and loc[:2]=='HE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9761.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9900.0:
				return 'HE9761-9900'
			else:
				return 'HE1-9990'
		elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6182.0:
			if len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=294.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=343.0:
				return 'HF294-343'
			elif (loc=='HF1014') or (len(loc)>6 and loc[:6]=='HF1014' and not loc[6].isdigit()):
				return 'HF1014'
			elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1027.0:
				return 'HF1021-1027'
			elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1054.0:
				return 'HF1040-1054'
			elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2701.0:
				return 'HF1701-2701'
			elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4055.0:
				return 'HF3000-4055'
			elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6182.0:
				if len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5386.0:
					return 'HF5381-5386'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5387.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5387.5:
					return 'HF5387-5387.5'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5417.5:
					return 'HF5410-5417.5'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5419.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5422.0:
					return 'HF5419-5422'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5428.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5429.6:
					return 'HF5428-5429.6'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5429.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5430.6:
					return 'HF5429.7-5430.6'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5437.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5444.0:
					return 'HF5437-5444'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5446.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5459.0:
					return 'HF5446-5459'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5469.5:
					return 'HF5460-5469.5'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5469.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5481.0:
					return 'HF5469.7-5481'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5482.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5482.4:
					return 'HF5482-5482.4'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5482.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5482.65:
					return 'HF5482.6-5482.65'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5484.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5495.0:
					return 'HF5484-5495'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5541.0:
					return 'HF5520-5541'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5546.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5548.6:
					return 'HF5546-5548.6'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5548.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5548.85:
					return 'HF5548.7-5548.85'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5549.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5549.5:
					return 'HF5549-5549.5'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5689.0:
					return 'HF5601-5689'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5716.0:
					return 'HF5691-5716'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5717.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5734.7:
					return 'HF5717-5734.7'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5735.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5746.0:
					return 'HF5735-5746'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5761.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5780.0:
					return 'HF5761-5780'
				elif len(loc)>2 and loc[:2]=='HF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6182.0:
					return 'HF5801-6182'
				else:
					return 'HF5001-6182'
			else:
				return 'HF1-6182'
		elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
			if (loc=='HG178') or (len(loc)>5 and loc[:5]=='HG178' and not loc[5].isdigit()):
				return 'HG178'
			elif (loc=='HG179') or (len(loc)>5 and loc[:5]=='HG179' and not loc[5].isdigit()):
				return 'HG179'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1496.0:
				if len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=258.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=312.0:
					return 'HG258-312'
				elif (loc=='HG315') or (len(loc)>5 and loc[:5]=='HG315' and not loc[5].isdigit()):
					return 'HG315'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=329.0:
					return 'HG321-329'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=335.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=339.0:
					return 'HG335-339'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=348.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=353.5:
					return 'HG348-353.5'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=363.0:
					return 'HG361-363'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
					return 'HG381-395'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=421.0:
					return 'HG401-421'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1496.0:
					return 'HG451-1496'
				else:
					return 'HG201-1496'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3550.0:
				if len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1638.0:
					return 'HG1621-1638'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1641.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1643.0:
					return 'HG1641-1643'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1654.0:
					return 'HG1651-1654'
				elif (loc=='HG1655') or (len(loc)>6 and loc[:6]=='HG1655' and not loc[6].isdigit()):
					return 'HG1655'
				elif (loc=='HG1656') or (len(loc)>6 and loc[:6]=='HG1656' and not loc[6].isdigit()):
					return 'HG1656'
				elif (loc=='HG1660') or (len(loc)>6 and loc[:6]=='HG1660' and not loc[6].isdigit()):
					return 'HG1660'
				elif (loc=='HG1662') or (len(loc)>6 and loc[:6]=='HG1662' and not loc[6].isdigit()):
					return 'HG1662'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1685.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1704.0:
					return 'HG1685-1704'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1706.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1708.0:
					return 'HG1706-1708'
				elif (loc=='HG1709') or (len(loc)>6 and loc[:6]=='HG1709' and not loc[6].isdigit()):
					return 'HG1709'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1710.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1710.5:
					return 'HG1710-1710.5'
				elif (loc=='HG1722') or (len(loc)>6 and loc[:6]=='HG1722' and not loc[6].isdigit()):
					return 'HG1722'
				elif (loc=='HG1723') or (len(loc)>6 and loc[:6]=='HG1723' and not loc[6].isdigit()):
					return 'HG1723'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1778.0:
					return 'HG1725-1778'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1811.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2351.0:
					return 'HG1811-2351'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2397.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3550.0:
					return 'HG2397-3550'
				else:
					return 'HG1501-3550'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3769.0:
				return 'HG3691-3769'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3810.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4000.0:
				return 'HG3810-4000'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4285.0:
				return 'HG4001-4285'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4480.9:
				return 'HG4301-4480.9'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6051.0:
				if (loc=='HG4530') or (len(loc)>6 and loc[:6]=='HG4530' and not loc[6].isdigit()):
					return 'HG4530'
				elif (loc=='HG4538') or (len(loc)>6 and loc[:6]=='HG4538' and not loc[6].isdigit()):
					return 'HG4538'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4598.0:
					return 'HG4551-4598'
				elif (loc=='HG4621') or (len(loc)>6 and loc[:6]=='HG4621' and not loc[6].isdigit()):
					return 'HG4621'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4751.0:
					return 'HG4701-4751'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5993.0:
					return 'HG4900-5993'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6051.0:
					return 'HG6001-6051'
				else:
					return 'HG4501-6051'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6105.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6270.9:
				return 'HG6105-6270.9'
			elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				if len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8053.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8054.45:
					return 'HG8053.5-8054.45'
				elif (loc=='HG8059') or (len(loc)>6 and loc[:6]=='HG8059' and not loc[6].isdigit()):
					return 'HG8059'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8107.0:
					return 'HG8075-8107'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8123.0:
					return 'HG8111-8123'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8220.0:
					return 'HG8205-8220'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8745.0:
					return 'HG8501-8745'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9295.0:
					if len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8779.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8793.0:
						return 'HG8779-8793'
					elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8830.0:
						return 'HG8799-8830'
					elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8835.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8899.0:
						return 'HG8835-8899'
					elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8914.0:
						return 'HG8901-8914'
					elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8941.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9200.5:
						return 'HG8941-9200.5'
					elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9245.0:
						return 'HG9201-9245'
					elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9262.0:
						return 'HG9251-9262'
					elif (loc=='HG9271') or (len(loc)>6 and loc[:6]=='HG9271' and not loc[6].isdigit()):
						return 'HG9271'
					else:
						return 'HG8751-9295'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9291.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9295.0:
					return 'HG9291-9295'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9343.0:
					return 'HG9301-9343'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9399.0:
					return 'HG9371-9399'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9899.0:
					return 'HG9651-9899'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9956.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9969.0:
					return 'HG9956-9969'
				elif len(loc)>2 and loc[:2]=='HG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9969.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
					return 'HG9969.5-9999'
				else:
					return 'HG8011-9999'
			else:
				return 'HG1-9999'
		elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9940.0:
			if len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.8:
				return 'HJ9-99.8'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=240.0:
				return 'HJ210-240'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1620.0:
				return 'HJ241-1620'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2005.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2216.0:
				return 'HJ2005-2216'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2240.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5908.0:
				if len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2323.0:
					return 'HJ2321-2323'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2326.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2327.0:
					return 'HJ2326-2327'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2336.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2337.0:
					return 'HJ2336-2337'
				elif (loc=='HJ2338') or (len(loc)>6 and loc[:6]=='HJ2338' and not loc[6].isdigit()):
					return 'HJ2338'
				elif (loc=='HJ2351') or (len(loc)>6 and loc[:6]=='HJ2351' and not loc[6].isdigit()):
					return 'HJ2351'
				elif (loc=='HJ2351.4') or (len(loc)>8 and loc[:8]=='HJ2351.4' and not loc[8].isdigit()):
					return 'HJ2351.4'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3192.7:
					return 'HJ2361-3192.7'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3844.0:
					return 'HJ3801-3844'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3863.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3925.0:
					return 'HJ3863-3925'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4113.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4601.0:
					return 'HJ4113-4601'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4629.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4830.0:
					return 'HJ4629-4830'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4919.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4936.0:
					return 'HJ4919-4936'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5309.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5510.0:
					return 'HJ5309-5510'
				else:
					return 'HJ2240-5908'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6603.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7390.0:
				return 'HJ6603-7390'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7980.0:
				return 'HJ7461-7980'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8899.0:
				if (loc=='HJ8052') or (len(loc)>6 and loc[:6]=='HJ8052' and not loc[6].isdigit()):
					return 'HJ8052'
				elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8899.0:
					return 'HJ8101-8899'
				else:
					return 'HJ8001-8899'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9103.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9695.0:
				return 'HJ9103-9695'
			elif len(loc)>2 and loc[:2]=='HJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9940.0:
				return 'HJ9701-9940'
			else:
				return 'HJ9-9940'
		elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1281.0:
			if len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=435.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=477.0:
				if len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=473.0:
					return 'HM461-473'
				else:
					return 'HM435-477'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=554.0:
				return 'HM481-554'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=656.0:
				return 'HM621-656'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=696.0:
				return 'HM661-696'
			elif (loc=='HM701') or (len(loc)>5 and loc[:5]=='HM701' and not loc[5].isdigit()):
				return 'HM701'
			elif (loc=='HM706') or (len(loc)>5 and loc[:5]=='HM706' and not loc[5].isdigit()):
				return 'HM706'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=806.0:
				if len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=756.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=781.0:
					return 'HM756-781'
				elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=786.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=806.0:
					return 'HM786-806'
				else:
					return 'HM711-806'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=811.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=821.0:
				return 'HM811-821'
			elif (loc=='HM826') or (len(loc)>5 and loc[:5]=='HM826' and not loc[5].isdigit()):
				return 'HM826'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=831.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=901.0:
				return 'HM831-901'
			elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1281.0:
				if len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1041.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1101.0:
					return 'HM1041-1101'
				elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1106.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1171.0:
					return 'HM1106-1171'
				elif len(loc)>2 and loc[:2]=='HM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1281.0:
					return 'HM1176-1281'
				else:
					return 'HM1001-1281'
			else:
				return 'HM(1)-1281'
		elif len(loc)>2 and loc[:2]=='HN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
			if len(loc)>2 and loc[:2]=='HN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=30.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
				return 'HN30-39'
			elif len(loc)>2 and loc[:2]=='HN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=41.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=46.0:
				return 'HN41-46'
			elif len(loc)>2 and loc[:2]=='HN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
				return 'HN50-995'
			else:
				return 'HN1-995'
		elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2044.0:
			if len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=12.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
				if len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=19.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=30.7:
					return 'HQ19-30.7'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=64.0:
					return 'HQ31-64'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=72.0:
					return 'HQ71-72'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=74.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=74.2:
					return 'HQ74-74.2'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.8:
					return 'HQ75-76.8'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=77.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=77.2:
					return 'HQ77-77.2'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=77.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=77.95:
					return 'HQ77.7-77.95'
				elif (loc=='HQ79') or (len(loc)>4 and loc[:4]=='HQ79' and not loc[4].isdigit()):
					return 'HQ79'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.7:
					return 'HQ101-440.7'
				elif (loc=='HQ447') or (len(loc)>5 and loc[:5]=='HQ447' and not loc[5].isdigit()):
					return 'HQ447'
				elif (loc=='HQ449') or (len(loc)>5 and loc[:5]=='HQ449' and not loc[5].isdigit()):
					return 'HQ449'
				else:
					return 'HQ12-449'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=472.0:
				return 'HQ450-472'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=503.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1064.0:
				if len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=755.5:
					return 'HQ750-755.5'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=755.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=759.92:
					return 'HQ755.7-759.92'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=760.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=767.7:
					return 'HQ760-767.7'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=767.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=792.2:
					return 'HQ767.8-792.2'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=793.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.2:
					return 'HQ793-799.2'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.9:
					return 'HQ799.5-799.9'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.97:
					return 'HQ799.95-799.97'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=800.4:
					return 'HQ800-800.4'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=801.83:
					return 'HQ801-801.83'
				elif (loc=='HQ802') or (len(loc)>5 and loc[:5]=='HQ802' and not loc[5].isdigit()):
					return 'HQ802'
				elif (loc=='HQ802.5') or (len(loc)>7 and loc[:7]=='HQ802.5' and not loc[7].isdigit()):
					return 'HQ802.5'
				elif (loc=='HQ803') or (len(loc)>5 and loc[:5]=='HQ803' and not loc[5].isdigit()):
					return 'HQ803'
				elif (loc=='HQ804') or (len(loc)>5 and loc[:5]=='HQ804' and not loc[5].isdigit()):
					return 'HQ804'
				elif (loc=='HQ805') or (len(loc)>5 and loc[:5]=='HQ805' and not loc[5].isdigit()):
					return 'HQ805'
				elif (loc=='HQ806') or (len(loc)>5 and loc[:5]=='HQ806' and not loc[5].isdigit()):
					return 'HQ806'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=811.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=960.7:
					return 'HQ811-960.7'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=961.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=967.0:
					return 'HQ961-967'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=981.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=996.0:
					return 'HQ981-996'
				elif (loc=='HQ997') or (len(loc)>5 and loc[:5]=='HQ997' and not loc[5].isdigit()):
					return 'HQ997'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=998.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
					return 'HQ998-999'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1006.0:
					return 'HQ1001-1006'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1057.0:
					return 'HQ1051-1057'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1058.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1058.5:
					return 'HQ1058-1058.5'
				elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1060.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1064.0:
					return 'HQ1060-1064'
				else:
					return 'HQ503-1064'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1073.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1073.5:
				return 'HQ1073-1073.5'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1075.5:
				return 'HQ1075-1075.5'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1088.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1090.7:
				return 'HQ1088-1090.7'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2030.7:
				if len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1871.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2030.7:
					return 'HQ1871-2030.7'
				else:
					return 'HQ1101-2030.7'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2039.0:
				return 'HQ2035-2039'
			elif len(loc)>2 and loc[:2]=='HQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2042.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2044.0:
				return 'HQ2042-2044'
			else:
				return 'HQ1-2044'
		elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3371.0:
			if len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=330.7:
				return 'HS101-330.7'
			elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=929.0:
				return 'HS351-929'
			elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1179.0:
				return 'HS951-1179'
			elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1350.0:
				return 'HS1201-1350'
			elif (loc=='HS1355') or (len(loc)>6 and loc[:6]=='HS1355' and not loc[6].isdigit()):
				return 'HS1355'
			elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2460.7:
				if len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1510.0:
					return 'HS1501-1510'
				elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1525.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1560.0:
					return 'HS1525-1560'
				elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2265.0:
					return 'HS1601-2265'
				elif (loc=='HS2275') or (len(loc)>6 and loc[:6]=='HS2275' and not loc[6].isdigit()):
					return 'HS2275'
				elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2460.7:
					return 'HS2301-2460.7'
				else:
					return 'HS1501-2460.7'
			elif len(loc)>2 and loc[:2]=='HS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3371.0:
				return 'HS2501-3371'
			else:
				return 'HS1-3371'
		elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1595.0:
			if len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=65.0:
				return 'HT51-65'
			elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
				if len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
					return 'HT161-165'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=165.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=169.9:
					return 'HT165.5-169.9'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=178.0:
					return 'HT170-178'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=221.0:
					return 'HT201-221'
				elif (loc=='HT231') or (len(loc)>5 and loc[:5]=='HT231' and not loc[5].isdigit()):
					return 'HT231'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
					return 'HT251-265'
				elif (loc=='HT281') or (len(loc)>5 and loc[:5]=='HT281' and not loc[5].isdigit()):
					return 'HT281'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
					return 'HT321-325'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=334.0:
					return 'HT330-334'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=352.0:
					return 'HT351-352'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=384.0:
					return 'HT361-384'
				elif (loc=='HT388') or (len(loc)>5 and loc[:5]=='HT388' and not loc[5].isdigit()):
					return 'HT388'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
					return 'HT390-395'
				else:
					return 'HT101-395'
			elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=485.0:
				return 'HT401-485'
			elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1445.0:
				if len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=635.0:
					return 'HT621-635'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=641.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=657.0:
					return 'HT641-657'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=675.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=690.0:
					return 'HT675-690'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=713.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=725.0:
					return 'HT713-725'
				elif (loc=='HT731') or (len(loc)>5 and loc[:5]=='HT731' and not loc[5].isdigit()):
					return 'HT731'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=815.0:
					return 'HT751-815'
				elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1445.0:
					return 'HT851-1445'
				else:
					return 'HT601-1445'
			elif len(loc)>2 and loc[:2]=='HT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1595.0:
				return 'HT1501-1595'
			else:
				return 'HT51-1595'
		elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9960.0:
			if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=40.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=69.0:
				return 'HV40-69'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=85.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=525.0:
				return 'HV85-525'
			elif (loc=='HV530') or (len(loc)>5 and loc[:5]=='HV530' and not loc[5].isdigit()):
				return 'HV530'
			elif (loc=='HV541') or (len(loc)>5 and loc[:5]=='HV541' and not loc[5].isdigit()):
				return 'HV541'
			elif (loc=='HV544') or (len(loc)>5 and loc[:5]=='HV544' and not loc[5].isdigit()):
				return 'HV544'
			elif (loc=='HV544.5') or (len(loc)>7 and loc[:7]=='HV544.5' and not loc[7].isdigit()):
				return 'HV544.5'
			elif (loc=='HV547') or (len(loc)>5 and loc[:5]=='HV547' and not loc[5].isdigit()):
				return 'HV547'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.0:
				if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=553.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.0:
					if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=560.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=583.0:
						return 'HV560-583'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=599.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.0:
						return 'HV599-639'
					else:
						return 'HV553-639'
				else:
					return 'HV551.2-639'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.0:
				return 'HV640-645'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=670.0:
				return 'HV650-670'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=675.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=677.0:
				return 'HV675-677'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=696.0:
				return 'HV680-696'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=697.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4959.0:
				if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=697.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3024.0:
					if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=697.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=700.7:
						return 'HV697-700.7'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1420.5:
						return 'HV701-1420.5'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1441.0:
						return 'HV1421-1441'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1442.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1448.0:
						return 'HV1442-1448'
					elif (loc=='HV1449') or (len(loc)>6 and loc[:6]=='HV1449' and not loc[6].isdigit()):
						return 'HV1449'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1494.0:
						return 'HV1450-1494'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3024.0:
						return 'HV1551-3024'
					else:
						return 'HV697-3024'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3174.0:
					if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3163.0:
						return 'HV3025-3163'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3165.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3173.0:
						return 'HV3165-3173'
					elif (loc=='HV3174') or (len(loc)>6 and loc[:6]=='HV3174' and not loc[6].isdigit()):
						return 'HV3174'
					else:
						return 'HV3025-3174'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3199.0:
					return 'HV3176-3199'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4005.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4013.0:
					return 'HV4005-4013'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4023.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4470.7:
					return 'HV4023-4470.7'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4630.0:
					return 'HV4480-4630'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4890.9:
					return 'HV4701-4890.9'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4905.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4959.0:
					return 'HV4905-4959'
				else:
					return 'HV697-4959'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4961.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4995.0:
				return 'HV4961-4995'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5720.5:
				return 'HV5001-5720.5'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5770.0:
				return 'HV5725-5770'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5840.0:
				return 'HV5800-5840'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7220.5:
				if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6197.0:
					return 'HV6035-6197'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6249.0:
					return 'HV6201-6249'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6250.4:
					return 'HV6250-6250.4'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6773.55:
					return 'HV6251-6773.55'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6774.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7220.5:
					return 'HV6774-7220.5'
				else:
					return 'HV6001-7220.5'
			elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7231.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9960.0:
				if (loc=='HV7428') or (len(loc)>6 and loc[:6]=='HV7428' and not loc[6].isdigit()):
					return 'HV7428'
				elif (loc=='HV7431') or (len(loc)>6 and loc[:6]=='HV7431' and not loc[6].isdigit()):
					return 'HV7431'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7435.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7439.0:
					return 'HV7435-7439'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8280.7:
					if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7935.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8025.0:
						return 'HV7935-8025'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8031.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8080.0:
						return 'HV8031-8080'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8081.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8099.0:
						return 'HV8081-8099'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8280.7:
						return 'HV8130-8280.7'
					else:
						return 'HV7551-8280.7'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8291.0:
					return 'HV8290-8291'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9920.7:
					if len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9230.7:
						return 'HV9051-9230.7'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9261.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9430.7:
						return 'HV9261-9430.7'
					elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9920.7:
						return 'HV9441-9920.7'
					else:
						return 'HV8301-9920.7'
				elif len(loc)>2 and loc[:2]=='HV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9960.0:
					return 'HV9950-9960'
				else:
					return 'HV7231-9960'
			else:
				return 'HV1-9960'
		elif len(loc)>2 and loc[:2]=='HX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=970.7:
			if len(loc)>2 and loc[:2]=='HX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=519.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=550.0:
				return 'HX519-550'
			elif len(loc)>2 and loc[:2]=='HX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=626.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=696.0:
				return 'HX626-696'
			elif len(loc)>2 and loc[:2]=='HX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=806.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
				return 'HX806-811'
			elif len(loc)>2 and loc[:2]=='HX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=821.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=970.9:
				return 'HX821-970.9'
			else:
				return 'HX1-970.7'
		else:
			return 'H'
	elif loc[0]=='J':
		if len(loc)>1 and loc[:1]=='J' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=981.0:
			if len(loc)>1 and loc[:1]=='J' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9.0:
				return 'J(1)-(9)'
			elif len(loc)>1 and loc[:1]=='J' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
				if len(loc)>1 and loc[:1]=='J' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=82.0:
					return 'J80-82'
				else:
					return 'J80-87'
			elif len(loc)>1 and loc[:1]=='J' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=981.0:
				return 'J100-981'
			elif len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=92.0:
				if len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=26.0:
					return 'JA1-26'
				elif len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=34.0:
					return 'JA27-34'
				elif (loc=='JA35.5') or (len(loc)>6 and loc[:6]=='JA35.5' and not loc[6].isdigit()):
					return 'JA35.5'
				elif len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=64.0:
					return 'JA60-64'
				elif len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=80.0:
					return 'JA71-80'
				elif len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=81.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=84.0:
					return 'JA81-84'
				elif len(loc)>2 and loc[:2]=='JA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=86.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=88.0:
					return 'JA86-88'
				elif (loc=='JA92') or (len(loc)>4 and loc[:4]=='JA92' and not loc[4].isdigit()):
					return 'JA92'
				else:
					return 'JA1-92'
			else:
				return 'J(1)-981'
		elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
			if (loc=='JC47') or (len(loc)>4 and loc[:4]=='JC47' and not loc[4].isdigit()):
				return 'JC47'
			elif (loc=='JC49') or (len(loc)>4 and loc[:4]=='JC49' and not loc[4].isdigit()):
				return 'JC49'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=93.0:
				return 'JC51-93'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=121.0:
				if len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=273.0:
					return 'JC131-273'
				elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=178.0:
					return 'JC177-178'
				else:
					return 'JC109-121'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=311.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=314.0:
				return 'JC311-314'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=319.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=323.0:
				return 'JC319-323'
			elif (loc=='JC327') or (len(loc)>5 and loc[:5]=='JC327' and not loc[5].isdigit()):
				return 'JC327'
			elif (loc=='JC328.2') or (len(loc)>7 and loc[:7]=='JC328.2' and not loc[7].isdigit()):
				return 'JC328.2'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=328.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=328.65:
				return 'JC328.6-328.65'
			elif (loc=='JC329') or (len(loc)>5 and loc[:5]=='JC329' and not loc[5].isdigit()):
				return 'JC329'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=345.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=347.0:
				return 'JC345-347'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=348.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=497.0:
				return 'JC348-497'
			elif len(loc)>2 and loc[:2]=='JC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=571.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
				return 'JC571-605'
			else:
				return 'JC11-605'
		elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2112.0:
			if len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1177.0:
				if len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=56.0:
					return 'JF51-56'
				elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=225.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.0:
					if len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=289.0:
						return 'JF251-289'
					elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=341.0:
						return 'JF331-341'
					elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.0:
						return 'JF491-619'
					else:
						return 'JF225-619'
				elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1177.0:
					return 'JF799-1177'
				else:
					return 'JF20-1177'
			elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1338.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2112.0:
				if len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1521.0:
					return 'JF1501-1521'
				elif len(loc)>2 and loc[:2]=='JF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2112.0:
					return 'JF2011-2112'
				else:
					return 'JF1338-2112'
			else:
				return 'JF20-2112'
		elif len(loc)>2 and loc[:2]=='JJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1019.0:
			return 'JJ1000-1019'
		elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9993.0:
			if len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9593.0:
				if len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=404.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1685.0:
					if len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=868.0:
						return 'JK501-868'
					elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1012.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1432.0:
						return 'JK1012-1432'
					elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1606.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1683.0:
						return 'JK1606-1683'
					else:
						return 'JK404-1685'
				elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1717.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2217.0:
					if len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1758.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1761.0:
						return 'JK1758-1761'
					elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1846.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1929.0:
						return 'JK1846-1929'
					elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1965.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2217.0:
						return 'JK1965-2217'
					else:
						return 'JK1717-2217'
				elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2255.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2391.0:
					return 'JK2255-2391'
				elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2403.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9593.0:
					return 'JK2403-9593'
				else:
					return 'JK1-9593'
			elif len(loc)>2 and loc[:2]=='JK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9663.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9993.0:
				return 'JK9663-9993'
			else:
				return 'JK1-9993'
		elif len(loc)>2 and loc[:2]=='JL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3899.0:
			if len(loc)>2 and loc[:2]=='JL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
				return 'JL1-500'
			elif len(loc)>2 and loc[:2]=='JL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=599.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=839.0:
				return 'JL599.5-839'
			elif len(loc)>2 and loc[:2]=='JL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1299.0:
				return 'JL1200-1299'
			elif len(loc)>2 and loc[:2]=='JL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1679.0:
				return 'JL1400-1679'
			elif len(loc)>2 and loc[:2]=='JL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3899.0:
				return 'JL1850-3899'
			else:
				return 'JL1-3899'
		elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9689.0:
			if len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.0:
				return 'JN1-97'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1371.0:
				if len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1187.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1371.0:
					return 'JN1187-1371'
				else:
					return 'JN101-1371'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1395.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1571.5:
				return 'JN1395-1571.5'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2191.0:
				return 'JN1601-2191'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2229.0:
				return 'JN2210-2229'
			elif (loc=='JN2240') or (len(loc)>6 and loc[:6]=='JN2240' and not loc[6].isdigit()):
				return 'JN2240'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3007.0:
				return 'JN2301-3007'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4944.0:
				return 'JN3201-4944'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5191.0:
				return 'JN5001-5191'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5690.0:
				return 'JN5201-5690'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
				return 'JN5701-5999'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6371.0:
				return 'JN6101-6371'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6598.0:
				return 'JN6500-6598'
			elif (loc=='JN6615') or (len(loc)>6 and loc[:6]=='JN6615' and not loc[6].isdigit()):
				return 'JN6615'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6639.0:
				return 'JN6630-6639'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6649.0:
				return 'JN6640-6649'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6689.0:
				return 'JN6680-6689'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6699.0:
				return 'JN6690-6699'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6739.0:
				return 'JN6730-6739'
			elif (loc=='JN6745') or (len(loc)>6 and loc[:6]=='JN6745' and not loc[6].isdigit()):
				return 'JN6745'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6769.0:
				return 'JN6750-6769'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7066.0:
				return 'JN7011-7066'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7367.0:
				return 'JN7101-7367'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7379.0:
				return 'JN7370-7379'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7389.0:
				return 'JN7380-7389'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7399.0:
				return 'JN7390-7399'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7695.0:
				return 'JN7401-7695'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7721.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7995.0:
				return 'JN7721-7995'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8399.0:
				return 'JN8101-8399'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8423.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8661.0:
				return 'JN8423-8661'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9599.0:
				return 'JN8701-9599'
			elif len(loc)>2 and loc[:2]=='JN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9689.0:
				return 'JN9600-9689'
			else:
				return 'JN1-9689'
		elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6651.0:
			if len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1852.0:
				if len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.0:
					return 'JQ200-620'
				elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					return 'JQ1070-1199'
				elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1499.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1749.0:
					return 'JQ1499-1749'
				elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1758.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1852.0:
					if (loc=='JQ1850') or (len(loc)>6 and loc[:6]=='JQ1850' and not loc[6].isdigit()):
						return 'JQ1850'
					elif (loc=='JQ1852') or (len(loc)>6 and loc[:6]=='JQ1852' and not loc[6].isdigit()):
						return 'JQ1852'
					elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=55.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.0:
						return 'JS55-68'
					else:
						return 'JQ1758-1852'
				else:
					return 'JQ21-1852'
			elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1870.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3981.0:
				return 'JQ1870-3981'
			elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3981.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3986.7:
				return 'JQ3981.5-3986.7'
			elif len(loc)>2 and loc[:2]=='JQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3995.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6651.0:
				return 'JQ3995-6651'
			else:
				return 'JQ21-6651'
		elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=39.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8500.0:
			if len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=163.0:
				return 'JS141-163'
			elif (loc=='JS171') or (len(loc)>5 and loc[:5]=='JS171' and not loc[5].isdigit()):
				return 'JS171'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=227.0:
				return 'JS221-227'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=271.0:
				return 'JS241-271'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1583.0:
				return 'JS300-1583'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1800.0:
				return 'JS1701-1800'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2058.9:
				return 'JS1840-2058.9'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2143.0:
				return 'JS2101-2143'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2145.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2219.0:
				return 'JS2145-2219'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2778.0:
				return 'JS2300-2778'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6949.89:
				return 'JS3000-6949.89'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7520.0:
				if (loc=='JS7510') or (len(loc)>6 and loc[:6]=='JS7510' and not loc[6].isdigit()):
					return 'JS7510'
				elif (loc=='JS7520') or (len(loc)>6 and loc[:6]=='JS7520' and not loc[6].isdigit()):
					return 'JS7520'
				else:
					return 'JS6950-7520'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7525.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7819.9:
				return 'JS7525-7819.9'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7827.9:
				return 'JS7820-7827.9'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7906.9:
				return 'JS7900-7906.9'
			elif len(loc)>2 and loc[:2]=='JS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8490.9:
				return 'JS8001-8490.9'
			else:
				return 'JS39-8500'
		elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9480.0:
			if len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5397.0:
				if len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9.0:
					return 'JV1-9'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=19.0:
					return 'JV10-19'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=152.0:
					return 'JV61-152'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=412.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=461.0:
					return 'JV412-461'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5397.0:
					return 'JV500-5397'
				else:
					return 'JV1-5397'
			elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9480.0:
				if len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6006.0:
					return 'JV6001-6006'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6033.0:
					return 'JV6021-6033'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6091.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6124.0:
					return 'JV6091-6124'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6347.0:
					return 'JV6201-6347'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6403.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7127.0:
					return 'JV6403-7127'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7539.0:
					return 'JV7200-7539'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8339.7:
					return 'JV7590-8339.7'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8758.0:
					return 'JV8490-8758'
				elif (loc=='JV8760') or (len(loc)>6 and loc[:6]=='JV8760' and not loc[6].isdigit()):
					return 'JV8760'
				elif (loc=='JV8762') or (len(loc)>6 and loc[:6]=='JV8762' and not loc[6].isdigit()):
					return 'JV8762'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9024.5:
					return 'JV8790-9024.5'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9029.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9036.0:
					return 'JV9029-9036'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9047.0:
					return 'JV9040-9047'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9269.0:
					return 'JV9100-9269'
				elif len(loc)>2 and loc[:2]=='JV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9470.0:
					return 'JV9290-9470'
				else:
					return 'JV6001-9480'
			else:
				return 'JV1-9480'
		elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6650.0:
			if len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=63.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=191.0:
				return 'JX(63)-(191)'
			elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1195.0:
				return 'JX(220)-(1195)'
			elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1261.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1283.0:
				return 'JX(1261)-(1283)'
			elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1305.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1598.0:
				return 'JX(1305)-(1598)'
			elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1896.0:
				return 'JX(1621)-(1896)'
			elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1995.0:
				return 'JX(1901)-(1995)'
			elif len(loc)>2 and loc[:2]=='JX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6650.0:
				return 'JX(2001)-(6650)'
			else:
				return 'JX(1)-(6650)'
		elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6530.0:
			if len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=18.0:
				return 'JZ5.5-18'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=24.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=38.0:
				return 'JZ24-38'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=63.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1153.0:
				if len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1153.0:
					return 'JZ221-1153'
				else:
					return 'JZ63-1153'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1249.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1254.0:
				return 'JZ1249-1254'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1305.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2060.0:
				if len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1329.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1395.0:
					return 'JZ1329.5-1395'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1454.0:
					return 'JZ1400-1454'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1464.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2060.0:
					return 'JZ1464-2060'
				else:
					return 'JZ1305-2060'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3674.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3875.0:
				if (loc=='JZ3685') or (len(loc)>6 and loc[:6]=='JZ3685' and not loc[6].isdigit()):
					return 'JZ3685'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3686.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3875.0:
					return 'JZ3686-3875'
				else:
					return 'JZ3674-3875'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4835.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
				if len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4841.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4848.0:
					return 'JZ4841-4848'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
					if len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4853.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4934.0:
						return 'JZ4853-4934'
					elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4935.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5160.0:
						return 'JZ4935-5160'
					else:
						return 'JZ4850-5490'
				else:
					return 'JZ4835-5490'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5511.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6300.0:
				if len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5514.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5526.0:
					return 'JZ5514-5526'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5527.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5532.0:
					return 'JZ5527-5532'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5587.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6009.0:
					return 'JZ5587-6009'
				elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6060.0:
					return 'JZ6010-6060'
				else:
					return 'JZ5511.2-6300'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6377.0:
				return 'JZ6360-6377'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6385.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6405.0:
				return 'JZ6385-6405'
			elif len(loc)>2 and loc[:2]=='JZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6422.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6422.5:
				return 'JZ6422-6422.5'
			elif (loc=='JZ6530') or (len(loc)>6 and loc[:6]=='JZ6530' and not loc[6].isdigit()):
				return 'JZ6530'
			else:
				return 'JZ5-6530'
		else:
			return 'J'
	elif loc[0]=='K':
		if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7720.0:
			if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=36.5:
				return 'K1-36.5'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=37.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=44.0:
				return 'K37-44'
			elif (loc=='K46') or (len(loc)>3 and loc[:3]=='K46' and not loc[3].isdigit()):
				return 'K46'
			elif (loc=='K48') or (len(loc)>3 and loc[:3]=='K48' and not loc[3].isdigit()):
				return 'K48'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=54.0:
				return 'K50-54'
			elif (loc=='K58') or (len(loc)>3 and loc[:3]=='K58' and not loc[3].isdigit()):
				return 'K58'
			elif len(loc)>=5 and loc[:5]=='K(64)':
				return 'K(64)'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=68.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.0:
				return 'K68-70'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=85.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=89.0:
				return 'K85-89'
			elif (loc=='K94') or (len(loc)>3 and loc[:3]=='K94' and not loc[3].isdigit()):
				return 'K94'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=103.0:
				return 'K100-103'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=110.0:
				return 'K109-110'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.0:
				return 'K115-130'
			elif (loc=='K133') or (len(loc)>4 and loc[:4]=='K133' and not loc[4].isdigit()):
				return 'K133'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
				return 'K140-165'
			elif (loc=='K170') or (len(loc)>4 and loc[:4]=='K170' and not loc[4].isdigit()):
				return 'K170'
			elif len(loc)>=6 and loc[:6]=='K(175)':
				return 'K(175)'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=177.0:
				return 'K(176)-(177)'
			elif len(loc)>=6 and loc[:6]=='K(179)':
				return 'K(179)'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=181.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=184.7:
				return 'K181-184.7'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
				return 'K190-195'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=487.0:
				if (loc=='K202') or (len(loc)>4 and loc[:4]=='K202' and not loc[4].isdigit()):
					return 'K202'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=212.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=213.0:
					return 'K212-213'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=218.0:
					return 'K215-218'
				elif (loc=='K236') or (len(loc)>4 and loc[:4]=='K236' and not loc[4].isdigit()):
					return 'K236'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=237.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=264.0:
					return 'K237-264'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=274.0:
					return 'K270-274'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=286.0:
					return 'K280-286'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=288.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=296.0:
					return 'K288-296'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=304.0:
					return 'K300-304'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=474.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=325.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=328.0:
						return 'K325-328'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=344.0:
						return 'K330-344'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=366.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
						return 'K366-380'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=474.0:
						return 'K400-474'
					else:
						return 'K321-474'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=486.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=487.0:
					return 'K486-487'
				else:
					return 'K201-487'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5582.0:
				if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=525.0:
					return 'K524-525'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=546.0:
					return 'K540-546'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=578.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=579.0:
					return 'K578-579'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=583.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=591.0:
					return 'K583-(591)'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=592.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=597.0:
					return 'K592-597'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=605.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.0:
						return 'K605-615'
					else:
						return 'K600-615'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=623.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=968.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=625.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=709.0:
						return 'K625-709'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=709.0:
						return 'K670-709'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=792.0:
						return 'K720-792'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=795.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=798.0:
						return 'K795-798'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=805.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=821.0:
						return 'K805-821'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=830.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=968.0:
						return 'K830-968'
					else:
						return 'K623-968'
				elif (loc=='K970') or (len(loc)>4 and loc[:4]=='K970' and not loc[4].isdigit()):
					return 'K970'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1395.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1014.0:
						return 'K1010-1014'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1022.0:
						return 'K1021-1022'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1024.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1132.0:
						return 'K1024-1132'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1231.0:
						return 'K1150-1231'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1287.0:
						return 'K1241-1287'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1366.0:
						return 'K1301-1366'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1395.0:
						return 'K1370-1395'
					else:
						return 'K1000-1395'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1578.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1485.0:
						return 'K1411-1485'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1578.0:
						return 'K1500-1578'
					else:
						return 'K1401-1578'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1973.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1841.0:
						return 'K1701-1841'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1861.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1929.0:
						return 'K1861-1929'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1960.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1973.0:
						return 'K1960-1973'
					else:
						return 'K1700-1973'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2385.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2155.0:
						return 'K2110-2155'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2385.0:
						return 'K2201-2385'
					else:
						return 'K2100-2385'
				elif (loc=='K2390') or (len(loc)>5 and loc[:5]=='K2390' and not loc[5].isdigit()):
					return 'K2390'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2405.0:
					return 'K2400-2405'
				elif (loc=='K3150') or (len(loc)>5 and loc[:5]=='K3150' and not loc[5].isdigit()):
					return 'K3150'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3154.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3370.0:
					if (loc=='K3161') or (len(loc)>5 and loc[:5]=='K3161' and not loc[5].isdigit()):
						return 'K3161'
					elif (loc=='K3169') or (len(loc)>5 and loc[:5]=='K3169' and not loc[5].isdigit()):
						return 'K3169'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3179.0:
						return 'K3171-3179'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3188.0:
						return 'K3184-3188'
					elif (loc=='K3195') or (len(loc)>5 and loc[:5]=='K3195' and not loc[5].isdigit()):
						return 'K3195'
					elif (loc=='K3201') or (len(loc)>5 and loc[:5]=='K3201' and not loc[5].isdigit()):
						return 'K3201'
					elif (loc=='K3220') or (len(loc)>5 and loc[:5]=='K3220' and not loc[5].isdigit()):
						return 'K3220'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3224.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3278.0:
						return 'K3224-3278'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3282.0:
						return 'K3280-3282'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3289.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3367.0:
						return 'K3289-3367'
					elif (loc=='K3370') or (len(loc)>5 and loc[:5]=='K3370' and not loc[5].isdigit()):
						return 'K3370'
					else:
						return 'K3154-3370'
				elif (loc=='K3375') or (len(loc)>5 and loc[:5]=='K3375' and not loc[5].isdigit()):
					return 'K3375'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3431.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3402.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3417.0:
						return 'K3402-3417'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3431.0:
						return 'K3420-3431'
					else:
						return 'K3400-3431'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3460.0:
					return 'K3440-3460'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3476.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3560.0:
					return 'K3476-3560'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3566.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3578.0:
					return 'K3566-3578'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3598.0:
					return 'K3581-(3598)'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3611.0:
					return 'K3601-3611'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3615.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3622.0:
					return 'K3615-3622'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3625.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3649.0:
					return 'K3625-3649'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3654.0:
					return 'K3651-3654'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3674.0:
					return 'K3661-3674'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3705.0:
					return 'K3700-3705'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3762.0:
					return 'K3740-3762'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3795.0:
					return 'K3770-3795'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3836.0:
					return 'K3820-3836'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4375.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3842.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3862.0:
						return 'K3842-3862'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3870.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3918.0:
						return 'K3870-3918'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3925.0:
						return 'K3921-3925'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3926.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3935.0:
						return 'K3926-3935'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3941.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3974.0:
						return 'K3941-3974'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3978.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3992.0:
						return 'K3978-3992'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4343.0:
						return 'K4011-4343'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4375.0:
						return 'K4360-4375'
					else:
						return 'K3840-4375'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4675.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4453.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4640.0:
						return 'K4453-4640'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4675.0:
						return 'K4650-4675'
					else:
						return 'K4430-4675'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4705.0:
					return 'K4700-4705'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4780.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4734.0:
						return 'K4725-4734'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4760.0:
						return 'K4740-4760'
					else:
						return 'K4720-4780'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5582.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5015.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5350.0:
						return 'K5015.4-5350'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5570.0:
						return 'K5401-5570'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5575.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5582.0:
						return 'K5575-5582'
					else:
						return 'K5000-5582'
				else:
					return 'K(520)-5582'
			elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7720.0:
				if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7054.0:
					return 'K7051-7054'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7060.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7081.0:
					return 'K7060-7081'
				elif (loc=='K7085') or (len(loc)>5 and loc[:5]=='K7085' and not loc[5].isdigit()):
					return 'K7085'
				elif (loc=='K7090') or (len(loc)>5 and loc[:5]=='K7090' and not loc[5].isdigit()):
					return 'K7090'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7197.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7140.0:
						return 'K7125-7140'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7145.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7148.0:
						return 'K7145-7148'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7197.0:
						return 'K7155-7197'
					else:
						return 'K7120-7197'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7218.0:
					return 'K7200-7218'
				elif (loc=='K7222') or (len(loc)>5 and loc[:5]=='K7222' and not loc[5].isdigit()):
					return 'K7222'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7230.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7245.0:
					return 'K7230-7245'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7338.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7265.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7305.0:
						return 'K7265-7305'
					elif (loc=='K7310') or (len(loc)>5 and loc[:5]=='K7310' and not loc[5].isdigit()):
						return 'K7310'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7315.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7338.0:
						return 'K7315-7338'
					else:
						return 'K7260-7338'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7512.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7444.0:
						return 'K7350-7444'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7449.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7460.0:
						return 'K7449-7460'
					elif (loc=='K7470') or (len(loc)>5 and loc[:5]=='K7470' and not loc[5].isdigit()):
						return 'K7470'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7485.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7495.0:
						return 'K7485-7495'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7512.0:
						return 'K7510-7512'
					else:
						return 'K7340-7512'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7582.0:
					if len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7555.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7557.0:
						return 'K7555-7557'
					elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7570.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7582.0:
						return 'K7570-7582'
					else:
						return 'K7550-7582'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7585.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7595.0:
					return 'K7585-7595'
				elif len(loc)>1 and loc[:1]=='K' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7611.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7688.0:
					return 'K7611-7688'
				elif (loc=='K7690') or (len(loc)>5 and loc[:5]=='K7690' and not loc[5].isdigit()):
					return 'K7690'
				elif (loc=='K7720') or (len(loc)>5 and loc[:5]=='K7720' and not loc[5].isdigit()):
					return 'K7720'
				else:
					return 'K7000-7720'
			else:
				return 'K1-7720'
		elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4855.0:
			if len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4.0:
				return 'KB2-4'
			elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.0:
				return 'KB7-68'
			elif (loc=='KB68') or (len(loc)>4 and loc[:4]=='KB68' and not loc[4].isdigit()):
				return 'KB68'
			elif len(loc)>=6 and loc[:6]=='KB70.A-' and loc[5]>='A' and loc[5]<='Z':
				return 'KB70.A-Z'
			elif (loc=='KB73') or (len(loc)>4 and loc[:4]=='KB73' and not loc[4].isdigit()):
				return 'KB73'
			elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=74.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
				return 'KB74-78'
			elif len(loc)>=6 and loc[:6]=='KB90.A-' and loc[5]>='A' and loc[5]<='Z':
				return 'KB90.A-Z'
			elif len(loc)>=7 and loc[:7]=='KB100.A-' and loc[6]>='A' and loc[6]<='Z':
				return 'KB100.A-Z'
			elif (loc=='KB122') or (len(loc)>5 and loc[:5]=='KB122' and not loc[5].isdigit()):
				return 'KB122'
			elif (loc=='KB130') or (len(loc)>5 and loc[:5]=='KB130' and not loc[5].isdigit()):
				return 'KB130'
			elif (loc=='KB150') or (len(loc)>5 and loc[:5]=='KB150' and not loc[5].isdigit()):
				return 'KB150'
			elif (loc=='KB160') or (len(loc)>5 and loc[:5]=='KB160' and not loc[5].isdigit()):
				return 'KB160'
			elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=162.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=250.0:
				return 'KB162-250'
			elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.0:
				return 'KB270-280'
			elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4855.0:
				if (loc=='KB400') or (len(loc)>5 and loc[:5]=='KB400' and not loc[5].isdigit()):
					return 'KB400'
				elif (loc=='KB410') or (len(loc)>5 and loc[:5]=='KB410' and not loc[5].isdigit()):
					return 'KB410'
				elif (loc=='KB479') or (len(loc)>5 and loc[:5]=='KB479' and not loc[5].isdigit()):
					return 'KB479'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=482.0:
					return 'KB480-482'
				elif (loc=='KB491') or (len(loc)>5 and loc[:5]=='KB491' and not loc[5].isdigit()):
					return 'KB491'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=530.0:
					return 'KB524-530'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=531.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.0:
					return 'KB531-619'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=622.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=628.5:
					return 'KB622-628.5'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=632.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=636.2:
					return 'KB632-636.2'
				elif (loc=='KB636.3') or (len(loc)>7 and loc[:7]=='KB636.3' and not loc[7].isdigit()):
					return 'KB636.3'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=726.0:
					return 'KB640-726'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=810.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=962.8:
					return 'KB810-962.8'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1278.0:
					return 'KB1270-1278'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1468.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1550.0:
					return 'KB1468-1550'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1572.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1690.0:
					return 'KB1572-1690'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2035.0:
					return 'KB2000-2035'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2862.0:
					return 'KB2101-2862'
				elif (loc=='KB2870') or (len(loc)>6 and loc[:6]=='KB2870' and not loc[6].isdigit()):
					return 'KB2870'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3034.0:
					return 'KB3000-3034'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3040.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3056.0:
					return 'KB3040.5-3056'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3096.5:
					return 'KB3075-3096.5'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3098.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3121.7:
					return 'KB3098-3121.7'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3124.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3125.0:
					return 'KB3124-3125'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3135.0:
					return 'KB3127-3135'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3137.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3183.0:
					return 'KB3137-3183'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3429.0:
					return 'KB3190-3429'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3500.7:
					return 'KB3440-3500.7'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3515.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3522.0:
					return 'KB3515-3522'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3526.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3694.0:
					return 'KB3526-3694'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3709.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3726.0:
					return 'KB3709-3726'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3735.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3780.0:
					return 'KB3735-3780'
				elif len(loc)>2 and loc[:2]=='KB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4855.0:
					return 'KB3790-4855'
				else:
					return 'KB400-4855'
			else:
				return 'KB1-4855'
		elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4855.0:
			if (loc=='KBM523') or (len(loc)>6 and loc[:6]=='KBM523' and not loc[6].isdigit()):
				if (loc=='KBM523.6') or (len(loc)>8 and loc[:8]=='KBM523.6' and not loc[8].isdigit()):
					return 'KBM523.6'
				elif (loc=='KBM523.72') or (len(loc)>9 and loc[:9]=='KBM523.72' and not loc[9].isdigit()):
					return 'KBM523.72'
				else:
					return 'KBM523'
			elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=523.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4855.0:
				if (loc=='KBM523.8') or (len(loc)>8 and loc[:8]=='KBM523.8' and not loc[8].isdigit()):
					return 'KBM523.8'
				elif (loc=='KBM523.82') or (len(loc)>9 and loc[:9]=='KBM523.82' and not loc[9].isdigit()):
					return 'KBM523.82'
				elif (loc=='KBM523.9') or (len(loc)>8 and loc[:8]=='KBM523.9' and not loc[8].isdigit()):
					return 'KBM523.9'
				elif (loc=='KBM524') or (len(loc)>6 and loc[:6]=='KBM524' and not loc[6].isdigit()):
					return 'KBM524'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.12 and float(re.findall(r'\d+\.?\d*',loc)[0])<=524.26:
					return 'KBM524.12-524.26'
				elif (loc=='KBM524.3') or (len(loc)>8 and loc[:8]=='KBM524.3' and not loc[8].isdigit()):
					return 'KBM524.3'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.32 and float(re.findall(r'\d+\.?\d*',loc)[0])<=524.34:
					return 'KBM524.32-524.34'
				elif (loc=='KBM524.36') or (len(loc)>9 and loc[:9]=='KBM524.36' and not loc[9].isdigit()):
					return 'KBM524.36'
				elif (loc=='KBM524.38') or (len(loc)>9 and loc[:9]=='KBM524.38' and not loc[9].isdigit()):
					return 'KBM524.38'
				elif len(loc)>=10 and loc[:10]=='KBM524.4.A-' and loc[9]>='A' and loc[9]<='Z':
					return 'KBM524.4.A-Z'
				elif (loc=='KBM524.42') or (len(loc)>9 and loc[:9]=='KBM524.42' and not loc[9].isdigit()):
					return 'KBM524.42'
				elif (loc=='KBM524.43') or (len(loc)>9 and loc[:9]=='KBM524.43' and not loc[9].isdigit()):
					return 'KBM524.43'
				elif (loc=='KBM524.5') or (len(loc)>8 and loc[:8]=='KBM524.5' and not loc[8].isdigit()):
					return 'KBM524.5'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=530.0:
					return 'KBM524.6-530'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=531.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.0:
					return 'KBM531-619'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=622.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=628.5:
					return 'KBM622-628.5'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=632.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=636.2:
					return 'KBM632-636.2'
				elif (loc=='KBM636.3') or (len(loc)>8 and loc[:8]=='KBM636.3' and not loc[8].isdigit()):
					return 'KBM636.3'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=639.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1424.0:
					return 'KBM639-1424'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1468.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1547.0:
					return 'KBM1468-1547'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1572.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1942.0:
					return 'KBM1572-1942'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2024.0:
					return 'KBM2000-2024'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2614.0:
					return 'KBM2070-2614'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2840.0:
					return 'KBM2711-2840'
				elif (loc=='KBM2970') or (len(loc)>7 and loc[:7]=='KBM2970' and not loc[7].isdigit()):
					return 'KBM2970'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3036.5:
					return 'KBM3000-3036.5'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3040.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3073.0:
					return 'KBM3040.5-3073'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3097.0:
					return 'KBM3075-3097'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3098.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3122.0:
					return 'KBM3098-3122'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3124.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3125.0:
					return 'KBM3124-3125'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3134.0:
					return 'KBM3127-3134'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3137.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3183.0:
					return 'KBM3137-3183'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3436.0:
					return 'KBM3190-3436'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3504.5:
					return 'KBM3440-3504.5'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3515.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3519.0:
					return 'KBM3515-3519'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3526.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3695.0:
					return 'KBM3526-3695'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3709.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3729.0:
					return 'KBM3709-3729'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3738.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3785.0:
					return 'KBM3738-3785'
				elif len(loc)>3 and loc[:3]=='KBM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4855.0:
					return 'KBM3790-4855'
				else:
					return 'KBM523.8-4855'
			else:
				return 'KBM1-4855'
		elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4860.0:
			if len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8.0:
				return 'KBP2.2-8'
			elif (loc=='KBP9.5') or (len(loc)>6 and loc[:6]=='KBP9.5' and not loc[6].isdigit()):
				return 'KBP9.5'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=14.5:
				return 'KBP10-14.5'
			elif (loc=='KBP15') or (len(loc)>5 and loc[:5]=='KBP15' and not loc[5].isdigit()):
				return 'KBP15'
			elif (loc=='KBP18') or (len(loc)>5 and loc[:5]=='KBP18' and not loc[5].isdigit()):
				return 'KBP18'
			elif (loc=='KBP40') or (len(loc)>5 and loc[:5]=='KBP40' and not loc[5].isdigit()):
				return 'KBP40'
			elif (loc=='KBP40.2') or (len(loc)>7 and loc[:7]=='KBP40.2' and not loc[7].isdigit()):
				return 'KBP40.2'
			elif (loc=='KBP40.5') or (len(loc)>7 and loc[:7]=='KBP40.5' and not loc[7].isdigit()):
				return 'KBP40.5'
			elif (loc=='KBP41') or (len(loc)>5 and loc[:5]=='KBP41' and not loc[5].isdigit()):
				return 'KBP41'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=42.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=43.0:
				return 'KBP42-43'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=69.0:
				return 'KBP50-69'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=75.4:
				return 'KBP70-75.4'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=136.8:
				return 'KBP100-136.8'
			elif (loc=='KBP144') or (len(loc)>6 and loc[:6]=='KBP144' and not loc[6].isdigit()):
				return 'KBP144'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=173.25 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.6:
				return 'KBP173.25-173.6'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=174.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.5:
				return 'KBP174-190.5'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=420.0:
				return 'KBP250-420'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=425.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=466.3:
				return 'KBP425-466.3'
			elif (loc=='KBP469') or (len(loc)>6 and loc[:6]=='KBP469' and not loc[6].isdigit()):
				return 'KBP469'
			elif (loc=='KBP470') or (len(loc)>6 and loc[:6]=='KBP470' and not loc[6].isdigit()):
				return 'KBP470'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=485.0:
				return 'KBP480-485'
			elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4860.0:
				if len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=490.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.95:
					return 'KBP490.2-490.95'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=497.95:
					return 'KBP491-497.95'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=509.8:
					return 'KBP500-509.8'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=524.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=638.0:
					return 'KBP524-638'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=639.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1154.0:
					return 'KBP639-1154'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1194.0:
					return 'KBP1155-1194'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1234.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1259.0:
					return 'KBP1234-1259'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1467.0:
					return 'KBP1270-1467'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1468.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1569.0:
					return 'KBP1468-1569'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1572.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1942.0:
					return 'KBP1572-1942'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2035.0:
					return 'KBP2000-2035'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2612.0:
					return 'KBP2101-2612'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2968.0:
					return 'KBP2730-2968'
				elif (loc=='KBP2970') or (len(loc)>7 and loc[:7]=='KBP2970' and not loc[7].isdigit()):
					return 'KBP2970'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3037.0:
					return 'KBP3000-3037'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3040.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3072.0:
					return 'KBP3040.5-3072'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3096.5:
					return 'KBP3075-3096.5'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3098.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3121.5:
					return 'KBP3098-3121.5'
				elif (loc=='KBP3122') or (len(loc)>7 and loc[:7]=='KBP3122' and not loc[7].isdigit()):
					return 'KBP3122'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3123.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3123.5:
					return 'KBP3123-3123.5'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3124.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3125.0:
					return 'KBP3124-3125'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3135.0:
					return 'KBP3127-3135'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3137.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3183.3:
					return 'KBP3137-3183.3'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3437.0:
					return 'KBP3190-3437'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3512.0:
					return 'KBP3440-3512'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3515.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3521.0:
					return 'KBP3515-3521'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3526.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3705.0:
					return 'KBP3526-3705'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3709.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3727.0:
					return 'KBP3709-3727'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3738.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3785.0:
					return 'KBP3738-3785'
				elif len(loc)>3 and loc[:3]=='KBP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4860.0:
					return 'KBP3790-4860'
				else:
					return 'KBP490-4860'
			else:
				return 'KBP1-4860'
		elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4090.0:
			if len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=19.0:
				return 'KBR2-19'
			elif (loc=='KBR21') or (len(loc)>5 and loc[:5]=='KBR21' and not loc[5].isdigit()):
				return 'KBR21'
			elif (loc=='KBR22') or (len(loc)>5 and loc[:5]=='KBR22' and not loc[5].isdigit()):
				return 'KBR22'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.7:
				return 'KBR27-41.7'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=42.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=54.5:
				return 'KBR42-54.5'
			elif (loc=='KBR56') or (len(loc)>5 and loc[:5]=='KBR56' and not loc[5].isdigit()):
				return 'KBR56'
			elif (loc=='KBR64') or (len(loc)>5 and loc[:5]=='KBR64' and not loc[5].isdigit()):
				return 'KBR64'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=74.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=83.0:
				return 'KBR74-83'
			elif len(loc)>=8 and loc[:8]=='KBR100.A-' and loc[7]>='A' and loc[7]<='Z':
				return 'KBR100.A-Z'
			elif len(loc)>=8 and loc[:8]=='KBR105.A-' and loc[7]>='A' and loc[7]<='Z':
				return 'KBR105.A-Z'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=122.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'KBR122-124'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=129.5:
				return 'KBR127-129.5'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=132.0:
				return 'KBR130-132'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=133.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=134.0:
				return 'KBR133-134'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=136.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=148.0:
				return 'KBR136-148'
			elif (loc=='KBR150') or (len(loc)>6 and loc[:6]=='KBR150' and not loc[6].isdigit()):
				return 'KBR150'
			elif (loc=='KBR160') or (len(loc)>6 and loc[:6]=='KBR160' and not loc[6].isdigit()):
				return 'KBR160'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2154.5:
				return 'KBR190-2154.5'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2157.0:
				return 'KBR2155-2157'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2204.5:
				return 'KBR2160-2204.5'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2206.3:
				return 'KBR2205-2206.3'
			elif (loc=='KBR2207') or (len(loc)>7 and loc[:7]=='KBR2207' and not loc[7].isdigit()):
				return 'KBR2207'
			elif len(loc)>=9 and loc[:9]=='KBR2208.A-' and loc[8]>='A' and loc[8]<='Z':
				return 'KBR2208.A-Z'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2224.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2295.0:
				return 'KBR2224-2295'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3026.0:
				return 'KBR2310-3026'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3070.0:
				return 'KBR3040-3070'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3077.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3165.0:
				return 'KBR3077-3165'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3182.0:
				return 'KBR3180-3182'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3256.0:
				return 'KBR3184-3256'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3264.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3280.0:
				return 'KBR3264-3280'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3460.0:
				return 'KBR3320-3460'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3774.0:
				return 'KBR3500-3774'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3780.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3983.0:
				return 'KBR3780-3983'
			elif len(loc)>3 and loc[:3]=='KBR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4090.0:
				return 'KBR4000-4090'
			else:
				return 'KBR2-4090'
		elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4820.0:
			if len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=19.0:
				return 'KBU2-19'
			elif (loc=='KBU21') or (len(loc)>5 and loc[:5]=='KBU21' and not loc[5].isdigit()):
				return 'KBU21'
			elif (loc=='KBU22') or (len(loc)>5 and loc[:5]=='KBU22' and not loc[5].isdigit()):
				return 'KBU22'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=26.0:
				return 'KBU25-26'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=26.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=41.5:
				return 'KBU26.8-41.5'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=42.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=54.5:
				return 'KBU42-54.5'
			elif (loc=='KBU56') or (len(loc)>5 and loc[:5]=='KBU56' and not loc[5].isdigit()):
				return 'KBU56'
			elif (loc=='KBU56.5') or (len(loc)>7 and loc[:7]=='KBU56.5' and not loc[7].isdigit()):
				return 'KBU56.5'
			elif (loc=='KBU64') or (len(loc)>5 and loc[:5]=='KBU64' and not loc[5].isdigit()):
				return 'KBU64'
			elif (loc=='KBU102') or (len(loc)>6 and loc[:6]=='KBU102' and not loc[6].isdigit()):
				return 'KBU102'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=129.5:
				return 'KBU127-129.5'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=132.0:
				return 'KBU130-132'
			elif (loc=='KBU133') or (len(loc)>6 and loc[:6]=='KBU133' and not loc[6].isdigit()):
				return 'KBU133'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=136.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=148.0:
				return 'KBU136-148'
			elif (loc=='KBU149') or (len(loc)>6 and loc[:6]=='KBU149' and not loc[6].isdigit()):
				return 'KBU149'
			elif (loc=='KBU150') or (len(loc)>6 and loc[:6]=='KBU150' and not loc[6].isdigit()):
				return 'KBU150'
			elif (loc=='KBU160') or (len(loc)>6 and loc[:6]=='KBU160' and not loc[6].isdigit()):
				return 'KBU160'
			elif len(loc)>=8 and loc[:8]=='KBU180.A-' and loc[7]>='A' and loc[7]<='Z':
				return 'KBU180.A-Z'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1565.0:
				return 'KBU195-1565'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2157.0:
				return 'KBU2155-2157'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2204.0:
				return 'KBU2160-2204'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2206.0:
				return 'KBU2205-2206'
			elif (loc=='KBU2207') or (len(loc)>7 and loc[:7]=='KBU2207' and not loc[7].isdigit()):
				return 'KBU2207'
			elif len(loc)>=9 and loc[:9]=='KBU2208.A-' and loc[8]>='A' and loc[8]<='Z':
				return 'KBU2208.A-Z'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2212.0:
				return 'KBU2210-2212'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2308.0:
				return 'KBU2215-2308'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3026.0:
				return 'KBU2310-3026'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3070.0:
				return 'KBU3040-3070'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3165.0:
				return 'KBU3075-3165'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3182.0:
				return 'KBU3180-3182'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3256.0:
				return 'KBU3184-3256'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3264.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3280.0:
				return 'KBU3264-3280'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3282.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3310.0:
				return 'KBU3282-3310'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3460.0:
				return 'KBU3320-3460'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3774.0:
				return 'KBU3500-3774'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3780.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3985.0:
				return 'KBU3780-3985'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4097.0:
				return 'KBU4000-4097'
			elif len(loc)>3 and loc[:3]=='KBU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4112.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4820.0:
				return 'KBU4112-4820'
			else:
				return 'KBU2-4820'
		elif len(loc)>=2 and loc[:2]=='KD':
			if len(loc)>2 and loc[:2]=='KD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9500.0:
				return 'KD51-9500'
			elif len(loc)>2 and loc[:2]=='KD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9312.0:
				return 'KD8850-9312'
			elif len(loc)>2 and loc[:2]=='KD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9355.0:
				return 'KD9320-9355'
			elif len(loc)>2 and loc[:2]=='KD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9500.0:
				return 'KD9400-9500'
			elif len(loc)>3 and loc[:3]=='KDC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.0:
				return 'KDC51-990'
			elif len(loc)>3 and loc[:3]=='KDE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=580.0:
				return 'KDE21-580'
			elif len(loc)>3 and loc[:3]=='KDG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=26.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=540.0:
				return 'KDG26-540'
			elif len(loc)>3 and loc[:3]=='KDK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1950.0:
				return 'KDK21-1950'
			else:
				return 'KD'
		elif len(loc)>3 and loc[:3]=='KDZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
			if len(loc)>3 and loc[:3]=='KDZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
				return 'KDZ1101-1199'
			elif len(loc)>3 and loc[:3]=='KDZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.2:
				return 'KDZ2001-2499.2'
			elif len(loc)>3 and loc[:3]=='KDZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3499.0:
				return 'KDZ3001-3499'
			elif len(loc)>3 and loc[:3]=='KDZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4499.0:
				return 'KDZ4001-4499'
			else:
				return 'KDZ1-4999'
		elif len(loc)>=2 and loc[:2]=='KE':
			if len(loc)>2 and loc[:2]=='KE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9450.0:
				if len(loc)>3 and loc[:3]=='KEA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KEA1-599'
				elif len(loc)>3 and loc[:3]=='KEB' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KEB1-599'
				elif len(loc)>3 and loc[:3]=='KEM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KEM1-599'
				elif len(loc)>3 and loc[:3]=='KEN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KEN1-599'
				elif len(loc)>3 and loc[:3]=='KEN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KEN1201-1799'
				elif len(loc)>3 and loc[:3]=='KEN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
					return 'KEN5401-5999'
				elif len(loc)>3 and loc[:3]=='KEN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7999.0:
					return 'KEN7401-7999'
				elif len(loc)>3 and loc[:3]=='KEO' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					return 'KEO1-1199'
				elif len(loc)>3 and loc[:3]=='KEP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KEP1-599'
				elif len(loc)>3 and loc[:3]=='KEQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					return 'KEQ1-1199'
				elif len(loc)>3 and loc[:3]=='KES' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KES1-599'
				elif len(loc)>3 and loc[:3]=='KEY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KEY1-599'
				else:
					return 'KE1-9450'
			elif len(loc)>3 and loc[:3]=='KEZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				return 'KEZ1-9999'
			else:
				return 'KE'
		elif len(loc)>=2 and loc[:2]=='KF':
			if len(loc)>2 and loc[:2]=='KF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9827.0:
				if len(loc)>3 and loc[:3]=='KFA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFA1-599'
				elif len(loc)>3 and loc[:3]=='KFA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFA1201-1799'
				elif len(loc)>3 and loc[:3]=='KFA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
					return 'KFA2401-2999'
				elif len(loc)>3 and loc[:3]=='KFA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4199.0:
					return 'KFA3601-4199'
				elif len(loc)>3 and loc[:3]=='KFC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					return 'KFC1-1199'
				elif len(loc)>3 and loc[:3]=='KFC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2399.0:
					return 'KFC1801-2399'
				elif len(loc)>3 and loc[:3]=='KFC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4199.0:
					return 'KFC3601-4199'
				elif len(loc)>3 and loc[:3]=='KFD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFD1-599'
				elif len(loc)>3 and loc[:3]=='KFD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFD1201-1799'
				elif len(loc)>3 and loc[:3]=='KFF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFF1-599'
				elif len(loc)>3 and loc[:3]=='KFG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFG1-599'
				elif len(loc)>3 and loc[:3]=='KFH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFH1-599'
				elif len(loc)>3 and loc[:3]=='KFI' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFI1-599'
				elif len(loc)>3 and loc[:3]=='KFI' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFI1201-1799'
				elif len(loc)>3 and loc[:3]=='KFI' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3599.0:
					return 'KFI3001-3599'
				elif len(loc)>3 and loc[:3]=='KFI' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4799.0:
					return 'KFI4201-4799'
				elif len(loc)>3 and loc[:3]=='KFK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFK1-599'
				elif len(loc)>3 and loc[:3]=='KFK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFK1201-1799'
				elif len(loc)>3 and loc[:3]=='KFL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFL1-599'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFM1-599'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFM1201-1799'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
					return 'KFM2401-2999'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4799.0:
					return 'KFM4201-4799'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
					return 'KFM5401-5999'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7199.0:
					return 'KFM6601-7199'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8399.0:
					return 'KFM7801-8399'
				elif len(loc)>3 and loc[:3]=='KFM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9599.0:
					return 'KFM9001-9599'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFN1-599'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					return 'KFN601-1199'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFN1201-1799'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2399.0:
					return 'KFN1801-2399'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4199.0:
					return 'KFN3601-4199'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6199.0:
					return 'KFN5001-6199'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7999.0:
					return 'KFN7401-7999'
				elif len(loc)>3 and loc[:3]=='KFN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9199.0:
					return 'KFN8601-9199'
				elif len(loc)>3 and loc[:3]=='KFO' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFO1-599'
				elif len(loc)>3 and loc[:3]=='KFO' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFO1201-1799'
				elif len(loc)>3 and loc[:3]=='KFO' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
					return 'KFO2401-2999'
				elif len(loc)>3 and loc[:3]=='KFP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFP1-599'
				elif len(loc)>3 and loc[:3]=='KFR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFR1-599'
				elif len(loc)>3 and loc[:3]=='KFS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2399.0:
					return 'KFS1801-2399'
				elif len(loc)>3 and loc[:3]=='KFS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3599.0:
					return 'KFS3001-3599'
				elif len(loc)>3 and loc[:3]=='KFT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFT1-599'
				elif len(loc)>3 and loc[:3]=='KFT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFT1201-1799'
				elif len(loc)>3 and loc[:3]=='KFU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFU1-599'
				elif len(loc)>3 and loc[:3]=='KFV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFV1-599'
				elif len(loc)>3 and loc[:3]=='KFV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
					return 'KFV2401-2999'
				elif len(loc)>3 and loc[:3]=='KFW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
					return 'KFW1-599'
				elif len(loc)>3 and loc[:3]=='KFW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
					return 'KFW1201-1799'
				elif len(loc)>3 and loc[:3]=='KFW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
					return 'KFW2401-2999'
				elif len(loc)>3 and loc[:3]=='KFW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4799.0:
					return 'KFW4201-4799'
				else:
					return 'KF1-9827'
			elif len(loc)>3 and loc[:3]=='KFX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				return 'KFX1-9999'
			elif len(loc)>3 and loc[:3]=='KFZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2399.0:
				return 'KFZ1801-2399'
			elif len(loc)>3 and loc[:3]=='KFZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9199.0:
				return 'KFZ8601-9199'
			else:
				return 'KF'
		elif len(loc)>2 and loc[:2]=='KG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			return 'KG1-999'
		elif len(loc)>2 and loc[:2]=='KG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3999.0:
			if len(loc)>3 and loc[:3]=='KGA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KGA1-9000'
			elif len(loc)>3 and loc[:3]=='KGB' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KGB1-9000'
			elif len(loc)>3 and loc[:3]=='KGC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KGC1-9800'
			elif len(loc)>3 and loc[:3]=='KGD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9990.0:
				return 'KGD1-9990'
			elif len(loc)>3 and loc[:3]=='KGE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9990.0:
				return 'KGE1-9990'
			elif len(loc)>3 and loc[:3]=='KGF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9900.0:
				return 'KGF1-9900'
			elif len(loc)>3 and loc[:3]=='KGG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KGG1-9800'
			elif len(loc)>3 and loc[:3]=='KGH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8000.0:
				return 'KGH1-8000'
			elif len(loc)>3 and loc[:3]=='KGH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9499.0:
				return 'KGH9001-9499'
			else:
				return 'KG3001-3999'
		elif len(loc)>=3 and loc>='':
			if len(loc)>3 and loc[:3]=='KGJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				return 'KGJ1-999'
			elif len(loc)>3 and loc[:3]=='KGJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7499.0:
				return 'KGJ7001-7499'
			elif len(loc)>3 and loc[:3]=='KGK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGK1-499'
			elif len(loc)>3 and loc[:3]=='KGK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
				return 'KGK1001-1499'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGL1-499'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
				return 'KGL1001-1499'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
				return 'KGL2001-2499'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3499.0:
				return 'KGL3001-3499'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4499.0:
				return 'KGL4001-4499'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
				return 'KGL5001-5999'
			elif len(loc)>3 and loc[:3]=='KGL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6499.0:
				return 'KGL6001-6499'
			elif len(loc)>3 and loc[:3]=='KGM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGM1-499'
			elif len(loc)>3 and loc[:3]=='KGN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KGN1-9800'
			elif len(loc)>3 and loc[:3]=='KGP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGP1-499'
			elif len(loc)>3 and loc[:3]=='KGP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
				return 'KGP2001-2499'
			elif len(loc)>3 and loc[:3]=='KGQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KGQ1-9800'
			elif len(loc)>3 and loc[:3]=='KGR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGR1-499'
			elif len(loc)>3 and loc[:3]=='KGR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
				return 'KGR1001-1499'
			elif len(loc)>3 and loc[:3]=='KGR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
				return 'KGR2001-2499'
			elif len(loc)>3 and loc[:3]=='KGR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3499.0:
				return 'KGR3001-3499'
			elif len(loc)>3 and loc[:3]=='KGR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4499.0:
				return 'KGR4001-4499'
			elif len(loc)>3 and loc[:3]=='KGR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5499.0:
				return 'KGR5001-5499'
			elif len(loc)>3 and loc[:3]=='KGS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KGS1-9000'
			elif len(loc)>3 and loc[:3]=='KGT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGT1-499'
			elif len(loc)>3 and loc[:3]=='KGT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
				return 'KGT1001-1499'
			elif len(loc)>3 and loc[:3]=='KGT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
				return 'KGT2001-2499'
			elif len(loc)>3 and loc[:3]=='KGU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGU1-499'
			elif len(loc)>3 and loc[:3]=='KGV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8200.0:
				return 'KGV1-8200'
			elif len(loc)>3 and loc[:3]=='KGW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGW1-499'
			elif len(loc)>3 and loc[:3]=='KGW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
				return 'KGW2001-2499'
			elif len(loc)>3 and loc[:3]=='KGW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3499.0:
				return 'KGW3001-3499'
			elif len(loc)>3 and loc[:3]=='KGW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5499.0:
				return 'KGW5001-5499'
			elif len(loc)>3 and loc[:3]=='KGW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7499.0:
				return 'KGW7001-7499'
			elif len(loc)>3 and loc[:3]=='KGW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8499.0:
				return 'KGW8001-8499'
			elif len(loc)>3 and loc[:3]=='KGX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGX1-499'
			elif len(loc)>3 and loc[:3]=='KGY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGY1-499'
			elif len(loc)>3 and loc[:3]=='KGZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KGZ1-499'
			else:
				return 'KGJ-'
		elif len(loc)>2 and loc[:2]=='KH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>3 and loc[:3]=='KHA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KHA1-9800'
			elif len(loc)>3 and loc[:3]=='KHC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8200.0:
				return 'KHC1-8200'
			elif len(loc)>3 and loc[:3]=='KHD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9900.0:
				return 'KHD1-9900'
			elif len(loc)>3 and loc[:3]=='KHF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KHF1-9800'
			elif len(loc)>3 and loc[:3]=='KHH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9900.0:
				return 'KHH1-9900'
			elif len(loc)>3 and loc[:3]=='KHK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9990.0:
				return 'KHK1-9990'
			elif len(loc)>3 and loc[:3]=='KHL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KHL1-9000'
			elif len(loc)>3 and loc[:3]=='KHM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KHM1-9000'
			elif len(loc)>3 and loc[:3]=='KHN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KHN1-9000'
			elif len(loc)>3 and loc[:3]=='KHP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9700.0:
				return 'KHP1-9700'
			elif len(loc)>3 and loc[:3]=='KHQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KHQ1-9800'
			elif len(loc)>3 and loc[:3]=='KHS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
				return 'KHS1-9000'
			elif len(loc)>3 and loc[:3]=='KHU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9800.0:
				return 'KHU1-9800'
			elif len(loc)>3 and loc[:3]=='KHW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9900.0:
				return 'KHW1-9900'
			else:
				return 'KH1-999'
		elif len(loc)>=2 and loc[:2]=='KJ':
			if len(loc)>2 and loc[:2]=='KJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1040.0:
				return 'KJ2-1040'
			elif len(loc)>2 and loc[:2]=='KJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1040.0:
				return 'KJ160-1040'
			elif len(loc)>3 and loc[:3]=='KJA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3660.0:
				return 'KJA2-3660'
			elif len(loc)>3 and loc[:3]=='KJC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9799.0:
				return 'KJC2-9799'
			elif len(loc)>3 and loc[:3]=='KJE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7975.0:
				return 'KJE5-7975'
			elif len(loc)>3 and loc[:3]=='KJG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJG1-4999'
			elif len(loc)>3 and loc[:3]=='KJH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KJH1-499'
			elif len(loc)>3 and loc[:3]=='KJJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJJ1-4999'
			elif len(loc)>3 and loc[:3]=='KJK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJK1-4999'
			elif len(loc)>3 and loc[:3]=='KJM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJM1-4999'
			elif len(loc)>3 and loc[:3]=='KJN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KJN1-499'
			elif len(loc)>3 and loc[:3]=='KJP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJP1-4999'
			elif len(loc)>3 and loc[:3]=='KJR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJR1-4999'
			elif len(loc)>3 and loc[:3]=='KJS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4985.0:
				return 'KJS1-4985'
			elif len(loc)>3 and loc[:3]=='KJT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KJT1-4999'
			elif len(loc)>=3 and loc>='':
				if len(loc)>3 and loc[:3]=='KJV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9158.0:
					return 'KJV2-9158'
				elif len(loc)>3 and loc[:3]=='KJW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4360.0:
					return 'KJW51-4360'
				elif len(loc)>3 and loc[:3]=='KJW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9600.0:
					return 'KJW5201-9600'
				else:
					return 'KJV-'
			elif len(loc)>2 and loc[:2]=='KK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0:
				if len(loc)>2 and loc[:2]=='KK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9799.3:
					return 'KK2-9799.3'
				elif len(loc)>3 and loc[:3]=='KKA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9796.0:
					return 'KKA7-9796'
				elif len(loc)>=min(3,3) and loc>='KKB' and loc<='KKC':
					return 'KKB-KKC'
				else:
					return 'KK2-'
			elif len(loc)>3 and loc[:3]=='KKE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKE1-4999'
			elif len(loc)>3 and loc[:3]=='KKF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKF1-4999'
			elif len(loc)>3 and loc[:3]=='KKG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KKG1-499'
			elif len(loc)>3 and loc[:3]=='KKH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKH1-4999'
			elif len(loc)>3 and loc[:3]=='KKI' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4890.0:
				return 'KKI1-4890'
			elif len(loc)>3 and loc[:3]=='KKJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KKJ1-499'
			elif len(loc)>3 and loc[:3]=='KKJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9890.0:
				return 'KKJ501-9890'
			elif len(loc)>3 and loc[:3]=='KKK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KKK1-499'
			elif len(loc)>3 and loc[:3]=='KKK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
				return 'KKK1001-1499'
			elif len(loc)>3 and loc[:3]=='KKL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KKL1-499'
			elif len(loc)>3 and loc[:3]=='KKM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKM1-4999'
			elif len(loc)>3 and loc[:3]=='KKN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKN1-4999'
			elif len(loc)>3 and loc[:3]=='KKP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKP1-4999'
			elif len(loc)>3 and loc[:3]=='KKQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKQ1-4999'
			elif len(loc)>3 and loc[:3]=='KKR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKR1-4999'
			elif len(loc)>3 and loc[:3]=='KKS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'KKS1-499'
			elif len(loc)>3 and loc[:3]=='KKT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKT1-4999'
			elif len(loc)>3 and loc[:3]=='KKV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKV1-4999'
			elif len(loc)>3 and loc[:3]=='KKW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKW1-4999'
			elif len(loc)>3 and loc[:3]=='KKX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKX1-4999'
			elif len(loc)>3 and loc[:3]=='KKY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKY1-4999'
			elif len(loc)>3 and loc[:3]=='KKZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
				return 'KKZ1-4999'
			else:
				return 'KJ'
		elif len(loc)>=2 and loc>='':
			if len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5915.0:
				if len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=135.0:
					return 'KL2-135'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=147.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=177.0:
					return 'KL147-177'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=420.0:
					return 'KL190-420'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2215.0:
					return 'KL700-2215'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1299.0:
					return 'KL1000-1299'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1899.0:
					return 'KL1600-1899'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
					return 'KL2200-2499'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3099.0:
					return 'KL2800-3099'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.0:
					return 'KL3500-3799'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4399.0:
					return 'KL4110-4399'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
					return 'KL4700-4999'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5599.0:
					return 'KL5300-5599'
				elif len(loc)>2 and loc[:2]=='KL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6199.0:
					return 'KL5900-6199'
				else:
					return 'KL2-5915'
			elif len(loc)>=3 and loc>='':
				if len(loc)>=3 and loc[:3]=='KKX':
					return 'KKX'
				elif len(loc)>3 and loc[:3]=='KLA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
					return 'KLA1-9999'
				elif len(loc)>3 and loc[:3]=='KLB' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6499.0:
					return 'KLB1-6499'
				elif len(loc)>3 and loc[:3]=='KLD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLD1-490'
				elif len(loc)>3 and loc[:3]=='KLE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLE1-490'
				elif len(loc)>3 and loc[:3]=='KLF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLF1-490'
				elif len(loc)>=3 and loc[:3]=='KJS':
					return 'KJS'
				elif len(loc)>3 and loc[:3]=='KLH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLH1-490'
				elif len(loc)>=3 and loc[:3]=='KKI':
					return 'KKI'
				elif len(loc)>=3 and loc[:3]=='KKJ':
					return 'KKJ'
				elif len(loc)>3 and loc[:3]=='KLM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLM1-490'
				elif len(loc)>3 and loc[:3]=='KLN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
					return 'KLN1-489'
				elif len(loc)>3 and loc[:3]=='KLP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4989.0:
					return 'KLP1-4989'
				elif len(loc)>3 and loc[:3]=='KLP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9499.0:
					return 'KLP9001-9499'
				elif len(loc)>3 and loc[:3]=='KLQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KLQ1-499'
				elif len(loc)>3 and loc[:3]=='KLR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLR1-490'
				elif len(loc)>3 and loc[:3]=='KLR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
					return 'KLR1001-1499'
				elif len(loc)>3 and loc[:3]=='KLS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLS1-490'
				elif len(loc)>3 and loc[:3]=='KLT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLT1-490'
				elif len(loc)>3 and loc[:3]=='KLV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLV1-490'
				elif len(loc)>3 and loc[:3]=='KLW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KLW1-490'
				else:
					return 'KLA-'
			elif len(loc)>2 and loc[:2]=='KM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0:
				if len(loc)>2 and loc[:2]=='KM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
					return 'KM1-999'
				elif len(loc)>=3 and loc>='':
					if len(loc)>3 and loc[:3]=='KMC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.0:
						return 'KMC1-799'
					elif len(loc)>3 and loc[:3]=='KME' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.0:
						return 'KME10-799'
					elif len(loc)>3 and loc[:3]=='KMF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=293.5:
						return 'KMF1-293.5'
					elif len(loc)>3 and loc[:3]=='KMF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1490.0:
						return 'KMF1001-1490'
					elif len(loc)>3 and loc[:3]=='KMG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KMG1-489'
					elif len(loc)>3 and loc[:3]=='KMH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KMH1-4990'
					elif len(loc)>3 and loc[:3]=='KMJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KMJ1-4990'
					elif len(loc)>3 and loc[:3]=='KMK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KMK1-4990'
					elif len(loc)>3 and loc[:3]=='KML' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KML1-490'
					elif len(loc)>3 and loc[:3]=='KMM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KMM1-490'
					elif len(loc)>3 and loc[:3]=='KMM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=994.0:
						return 'KMM501-994'
					elif len(loc)>3 and loc[:3]=='KMN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'KMN1-499'
					elif len(loc)>3 and loc[:3]=='KMP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KMP1-490'
					elif len(loc)>3 and loc[:3]=='KMQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KMQ1-490'
					elif len(loc)>3 and loc[:3]=='KMQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
						return 'KMQ1001-1499'
					elif len(loc)>3 and loc[:3]=='KMS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KMS1-490'
					elif len(loc)>3 and loc[:3]=='KMT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KMT1-4990'
					elif len(loc)>=3 and loc[:3]=='KMY':
						return 'KMY'
					elif len(loc)>3 and loc[:3]=='KMU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KMU1-490'
					elif len(loc)>3 and loc[:3]=='KMV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9870.0:
						return 'KMV1-9870'
					elif len(loc)>3 and loc[:3]=='KMX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1526.0:
						return 'KMX1001-1526'
					elif len(loc)>3 and loc[:3]=='KMY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KMY1-489'
					else:
						return 'KMC-'
				elif len(loc)>=3 and loc>='':
					if len(loc)>3 and loc[:3]=='KNC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
						return 'KNC1-999'
					elif len(loc)>3 and loc[:3]=='KNE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'KNE150-499'
					elif len(loc)>3 and loc[:3]=='KNF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KNF1-4990'
					elif len(loc)>3 and loc[:3]=='KNG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KNG1-4990'
					elif len(loc)>3 and loc[:3]=='KNH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KNH1-490'
					elif len(loc)>3 and loc[:3]=='KNK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KNK1-490'
					elif len(loc)>3 and loc[:3]=='KNL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KNL1-4990'
					elif len(loc)>3 and loc[:3]=='KNM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KNM1-4990'
					elif len(loc)>3 and loc[:3]=='KNN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
						return 'KNN1-9000'
					elif len(loc)>3 and loc[:3]=='KNP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.0:
						return 'KNP1-599'
					elif len(loc)>3 and loc[:3]=='KNQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9665.0:
						return 'KNQ1-9665'
					elif len(loc)>3 and loc[:3]=='KNR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KNR1-489'
					elif len(loc)>3 and loc[:3]=='KNS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
						return 'KNS1-4999'
					elif len(loc)>3 and loc[:3]=='KNV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KNV1-489'
					elif len(loc)>3 and loc[:3]=='KNW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KNW1-4990'
					elif len(loc)>3 and loc[:3]=='KNX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
						return 'KNX1-4999'
					elif len(loc)>3 and loc[:3]=='KPA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPA1-4990'
					elif len(loc)>3 and loc[:3]=='KPC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPC1-4990'
					elif len(loc)>3 and loc[:3]=='KPE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPE1-4990'
					elif len(loc)>3 and loc[:3]=='KPF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KPF1-489'
					elif len(loc)>3 and loc[:3]=='KPG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6999.0:
						return 'KPG1-6999'
					elif len(loc)>3 and loc[:3]=='KPH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
						return 'KPH5001-5490'
					elif len(loc)>3 and loc[:3]=='KPJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KPJ1-490'
					elif len(loc)>3 and loc[:3]=='KPK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KPK1-490'
					elif len(loc)>3 and loc[:3]=='KPL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPL1-4990'
					elif len(loc)>3 and loc[:3]=='KPM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPM1-4990'
					elif len(loc)>3 and loc[:3]=='KPP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'KPP1-499'
					elif len(loc)>3 and loc[:3]=='KPS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPS1-4990'
					elif len(loc)>3 and loc[:3]=='KPT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
						return 'KPT1-4990'
					elif len(loc)>3 and loc[:3]=='KPV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8094.0:
						return 'KPV1-8094'
					elif len(loc)>3 and loc[:3]=='KPW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KPW1-489'
					else:
						return 'KNC-'
				else:
					return 'KM1-'
			elif len(loc)>=2 and loc>='':
				if len(loc)>2 and loc[:2]=='KQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=197.0:
					return 'KQ2-197'
				elif len(loc)>2 and loc[:2]=='KQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9000.0:
					return 'KQ2010-9000'
				elif len(loc)>3 and loc[:3]=='KQC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
					return 'KQC1-999'
				elif len(loc)>3 and loc[:3]=='KQE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1249.0:
					return 'KQE10-1249'
				elif len(loc)>3 and loc[:3]=='KQG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KQG1-4990'
				elif len(loc)>3 and loc[:3]=='KQH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KQH1-4990'
				elif len(loc)>3 and loc[:3]=='KQJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KQJ1-490'
				elif len(loc)>3 and loc[:3]=='KQK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KQK1-490'
				elif len(loc)>3 and loc[:3]=='KQM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KQM1-499'
				elif len(loc)>3 and loc[:3]=='KQP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KQP1-499'
				elif len(loc)>3 and loc[:3]=='KQP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
					return 'KQP1001-1499'
				elif len(loc)>3 and loc[:3]=='KQT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KQT1-490'
				elif len(loc)>3 and loc[:3]=='KQV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KQV1-490'
				elif len(loc)>3 and loc[:3]=='KQW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8020.0:
					return 'KQW1-8020'
				elif len(loc)>3 and loc[:3]=='KQX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KQX1-490'
				elif len(loc)>3 and loc[:3]=='KRB' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KRB1-490'
				elif len(loc)>3 and loc[:3]=='KRC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KRC1-490'
				elif len(loc)>3 and loc[:3]=='KRE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KRE1-490'
				elif len(loc)>3 and loc[:3]=='KRG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KRG1-490'
				elif len(loc)>3 and loc[:3]=='KRK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KRK1-490'
				elif len(loc)>3 and loc[:3]=='KRL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KRL1-499'
				elif len(loc)>3 and loc[:3]=='KRM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KRM1-4990'
				elif len(loc)>3 and loc[:3]=='KRN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KRN1-499'
				elif len(loc)>3 and loc[:3]=='KRP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KRP1-4990'
				elif len(loc)>3 and loc[:3]=='KRR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KRR1-499'
				elif len(loc)>3 and loc[:3]=='KRS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KRS1-499'
				elif len(loc)>3 and loc[:3]=='KRU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KRU1-490'
				elif len(loc)>3 and loc[:3]=='KRV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
					return 'KRV1-489'
				elif len(loc)>3 and loc[:3]=='KRW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KRW1-499'
				elif len(loc)>3 and loc[:3]=='KRX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KRX1-4990'
				elif len(loc)>3 and loc[:3]=='KRY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KRY1-499'
				elif len(loc)>3 and loc[:3]=='KSA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSA1-490'
				elif len(loc)>3 and loc[:3]=='KSC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSC1-490'
				elif len(loc)>3 and loc[:3]=='KSE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSE1-490'
				elif len(loc)>3 and loc[:3]=='KSE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
					return 'KSE601-699'
				elif len(loc)>3 and loc[:3]=='KSG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KSG1-499'
				elif len(loc)>3 and loc[:3]=='KSG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
					return 'KSG1001-1499'
				elif len(loc)>3 and loc[:3]=='KSH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KSH1-4990'
				elif len(loc)>3 and loc[:3]=='KSK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KSK1-4990'
				elif len(loc)>3 and loc[:3]=='KSL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSL1-490'
				elif len(loc)>3 and loc[:3]=='KSN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSN1-490'
				elif len(loc)>3 and loc[:3]=='KSP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KSP1-4990'
				elif len(loc)>3 and loc[:3]=='KSR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSR1-490'
				elif len(loc)>3 and loc[:3]=='KSS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSS1-490'
				elif len(loc)>3 and loc[:3]=='KST' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KST1-490'
				elif len(loc)>3 and loc[:3]=='KSU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSU1-490'
				elif len(loc)>3 and loc[:3]=='KSV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSV1-490'
				elif len(loc)>3 and loc[:3]=='KSV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
					return 'KSV5001-5490'
				elif len(loc)>3 and loc[:3]=='KSW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KSW1-4990'
				elif len(loc)>3 and loc[:3]=='KSX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KSX1-4990'
				elif len(loc)>3 and loc[:3]=='KSY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KSY1-4990'
				elif len(loc)>3 and loc[:3]=='KSZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KSZ1-490'
				elif len(loc)>3 and loc[:3]=='KTA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9150.0:
					return 'KTA1-9150'
				elif len(loc)>3 and loc[:3]=='KTC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KTC1-499'
				elif len(loc)>3 and loc[:3]=='KTD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTD1-490'
				elif len(loc)>3 and loc[:3]=='KTE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTE1-490'
				elif len(loc)>3 and loc[:3]=='KTF' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTF1-490'
				elif len(loc)>3 and loc[:3]=='KTG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KTG1-4990'
				elif len(loc)>3 and loc[:3]=='KTH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTH1-490'
				elif len(loc)>3 and loc[:3]=='KTJ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTJ1-490'
				elif len(loc)>3 and loc[:3]=='KTK' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTK1-490'
				elif len(loc)>3 and loc[:3]=='KTL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9560.0:
					return 'KTL1-9560'
				elif len(loc)>3 and loc[:3]=='KTN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'KTN1-499'
				elif len(loc)>3 and loc[:3]=='KTN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
					return 'KTN601-699'
				elif len(loc)>3 and loc[:3]=='KTQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KTQ1-4990'
				elif len(loc)>3 and loc[:3]=='KTR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTR1-490'
				elif len(loc)>3 and loc[:3]=='KTT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9910.0:
					return 'KTT1-9910'
				elif len(loc)>3 and loc[:3]=='KTU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTU1-490'
				elif len(loc)>3 and loc[:3]=='KTV' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KTV1-4990'
				elif len(loc)>3 and loc[:3]=='KTW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTW1-490'
				elif len(loc)>3 and loc[:3]=='KTX' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KTX1-4990'
				elif len(loc)>3 and loc[:3]=='KTY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTY1-490'
				elif len(loc)>3 and loc[:3]=='KTY' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1599.0:
					return 'KTY1501-1599'
				elif len(loc)>3 and loc[:3]=='KTZ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
					return 'KTZ1-490'
				else:
					return 'KQ-'
			elif len(loc)>=2 and loc>='':
				if len(loc)>2 and loc[:2]=='KU' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4999.0:
					if len(loc)>=min(3,3) and loc>='KUA' and loc<='KUH':
						return 'KUA-KUH'
					elif len(loc)>3 and loc[:3]=='KUN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3050.0:
						return 'KUN3001-3050'
					else:
						return 'KU1-4999'
				elif len(loc)>3 and loc[:3]=='KUQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4990.0:
					return 'KUQ1-4990'
				elif len(loc)>=2 and loc>='':
					if len(loc)>=3 and loc>='':
						return 'KVB-'
					elif len(loc)>3 and loc[:3]=='KVE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=349.0:
						return 'KVE200-349'
					elif len(loc)>3 and loc[:3]=='KVH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KVH1-490'
					elif len(loc)>3 and loc[:3]=='KVH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1499.0:
						return 'KVH1001-1499'
					elif len(loc)>3 and loc[:3]=='KVL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KVL1-489'
					elif len(loc)>3 and loc[:3]=='KVM' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KVM1-489'
					elif len(loc)>3 and loc[:3]=='KVN' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KVN1-490'
					elif len(loc)>3 and loc[:3]=='KVP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=100.0:
						return 'KVP1-100'
					elif len(loc)>3 and loc[:3]=='KVP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1099.0:
						return 'KVP1001-1099'
					elif len(loc)>3 and loc[:3]=='KVQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KVQ1-490'
					elif len(loc)>3 and loc[:3]=='KVR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KVR1-490'
					elif len(loc)>3 and loc[:3]=='KVS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KVS1-490'
					elif len(loc)>3 and loc[:3]=='KVS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.0:
						return 'KVS501-990'
					elif len(loc)>3 and loc[:3]=='KVS' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
						return 'KVS2501-2999'
					elif len(loc)>3 and loc[:3]=='KVU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'KVU1-499'
					elif len(loc)>3 and loc[:3]=='KVU' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1099.0:
						return 'KVU1001-1099'
					elif len(loc)>3 and loc[:3]=='KVW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KVW1-490'
					elif len(loc)>3 and loc[:3]=='KWA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KWA1-489'
					elif len(loc)>3 and loc[:3]=='KWC' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWC1-490'
					elif len(loc)>3 and loc[:3]=='KWE' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'KWE1-499'
					elif len(loc)>3 and loc[:3]=='KWG' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWG1-490'
					elif len(loc)>3 and loc[:3]=='KWH' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWH1-490'
					elif len(loc)>3 and loc[:3]=='KWL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'KWL1-499'
					elif len(loc)>3 and loc[:3]=='KWL' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2490.0:
						return 'KWL2001-2490'
					elif len(loc)>3 and loc[:3]=='KWP' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWP1-490'
					elif len(loc)>3 and loc[:3]=='KWQ' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWQ1-490'
					elif len(loc)>3 and loc[:3]=='KWR' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWR1-490'
					elif len(loc)>3 and loc[:3]=='KWT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'KWT1-489'
					elif len(loc)>3 and loc[:3]=='KWT' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2490.0:
						return 'KWT2001-2490'
					elif len(loc)>3 and loc[:3]=='KWW' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=490.0:
						return 'KWW1-490'
					else:
						return 'KV-'
				else:
					return 'KU-'
			elif len(loc)>=3 and loc[:3]=='KWX':
				return 'KWX'
			else:
				return 'KL-'
		elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6795.0:
			if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5.5:
				return 'KZ2-5.5'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=24.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=38.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=37.0:
					return 'KZ27-37'
				else:
					return 'KZ24-38'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=62.5:
				return 'KZ(60)-62.5'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=63.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1152.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=118.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=194.0:
					if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=119.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
						return 'KZ119-165'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.0:
						return 'KZ170-173'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=182.5:
						return 'KZ176-182.5'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=183.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=183.5:
						return 'KZ183-183.5'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=194.0:
						return 'KZ184-194'
					else:
						return 'KZ118-194'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=218.0:
					return 'KZ199-218'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1152.0:
					return 'KZ221-1152'
				else:
					return 'KZ(63)-1152'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1165.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1208.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1168.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1208.0:
					return 'KZ1168-1208'
				else:
					return 'KZ1165-1208'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1234.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1236.0:
				return 'KZ1234-1236'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1249.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1252.0:
				return 'KZ1249-1252'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1255.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1273.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1267.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1273.0:
					return 'KZ1267-1273'
				else:
					return 'KZ1255-1273'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1284.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1285.5:
				return 'KZ1284-1285.5'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1287.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1296.0:
				return 'KZ1287-1296'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1298.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1304.0:
				return 'KZ1298-1304'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1319.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1327.0:
				return 'KZ(1319)-(1327)'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1329.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3085.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1339.0:
					return 'KZ1330-1339'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1345.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1369.0:
					return 'KZ1345-1369'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1373.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1387.2:
					return 'KZ1373-1387.2'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2064.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3085.0:
					return 'KZ2064-3085'
				else:
					return 'KZ1329-3085'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3092.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3405.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3405.0:
					return 'KZ3110-3405'
				else:
					return 'KZ3092-3405'
			elif (loc=='KZ3410') or (len(loc)>6 and loc[:6]=='KZ3410' and not loc[6].isdigit()):
				return 'KZ3410'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3881.0:
				return 'KZ3670-3881'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3910.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
					if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4002.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4080.0:
						return 'KZ4002-4080'
					elif (loc=='KZ4110') or (len(loc)>6 and loc[:6]=='KZ4110' and not loc[6].isdigit()):
						return 'KZ4110'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4112.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4820.0:
						return 'KZ4112-4820'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
						return 'KZ4850-(5490)'
					else:
						return 'KZ3910-(5490)'
				else:
					return 'KZ3900-(5490)'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6299.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5586.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5893.0:
					if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5615.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5893.0:
						return 'KZ5615-5893'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5967.0:
						return 'KZ5900-5967'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6009.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6299.0:
						return 'KZ6009-6299'
					else:
						return 'KZ5586-5893'
				else:
					return 'KZ5510-6299'
			elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6785.0:
				if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6373.0:
					return 'KZ6360-6373'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6374.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6377.0:
					return 'KZ6374-(6377)'
				elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6378.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6795.0:
					if len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6427.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6437.0:
						return 'KZ6427-6437'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6530.0:
						return 'KZ6440-6530'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6660.0:
						return 'KZ6540-6660'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6665.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6714.0:
						return 'KZ6665-6714'
					elif len(loc)>2 and loc[:2]=='KZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6785.0:
						return 'KZ6730-6785'
					else:
						return 'KZ6378-6795'
				else:
					return 'KZ6350-6785'
			else:
				return 'KZ2-6795'
		elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1002.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4205.0:
			if len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1065.0:
				return 'KZA1040-1065'
			elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1118.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1122.0:
				return 'KZA1118-1122'
			elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1417.0:
				if (loc=='KZA1340') or (len(loc)>7 and loc[:7]=='KZA1340' and not loc[7].isdigit()):
					return 'KZA1340'
				elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1348.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1405.0:
					return 'KZA1348-1405'
				else:
					return 'KZA1340-1417'
			elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1690.0:
				if len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1664.0:
					return 'KZA1630-1664'
				else:
					return 'KZA1430-1690'
			elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3900.0:
				if len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3891.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3900.0:
					return 'KZA(3891)-(3900)'
				else:
					return 'KZA(3481)-(3900)'
			elif len(loc)>3 and loc[:3]=='KZA' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4205.0:
				return 'KZA4130-(4205)'
			else:
				return 'KZA1002-(4205)'
		elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1002.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6715.0:
			if len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1065.0:
				return 'KZD1040-1065'
			elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1118.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1122.0:
				return 'KZD1118-1122'
			elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1400.0:
				if len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1400.0:
					return 'KZD1390-1400'
				else:
					return 'KZD1340-1400'
			elif (loc=='KZD1410') or (len(loc)>7 and loc[:7]=='KZD1410' and not loc[7].isdigit()):
				return 'KZD1410'
			elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1455.0:
				return 'KZD1420-1455'
			elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3489.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4406.0:
				if len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3489.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3608.0:
					return 'KZD3489.5-3608'
				elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4030.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4326.0:
					if len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4210.0:
						return 'KZD4080-4210'
					elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4310.0:
						return 'KZD(4301)-4310'
					else:
						return 'KZD4030-4326'
				elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4320.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4326.0:
					return 'KZD4320.2-4326'
				elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4406.0:
					return 'KZD4440-4406'
				else:
					return 'KZD3489-4406'
			elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5614.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6715.0:
				if len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5622.2:
					return 'KZD5620-5622.2'
				elif len(loc)>3 and loc[:3]=='KZD' and loc[3].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5648.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5680.2:
					return 'KZD5648-5680.2'
				else:
					return 'KZD5614-6715'
			else:
				return 'KZD1002-6715'
		else:
			return 'K'
	elif loc[0]=='L':
		if len(loc)>1 and loc[:1]=='L' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
			if len(loc)>1 and loc[:1]=='L' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.0:
				return 'L7-97'
			elif (loc=='L101') or (len(loc)>4 and loc[:4]=='L101' and not loc[4].isdigit()):
				return 'L101'
			elif (loc=='L107') or (len(loc)>4 and loc[:4]=='L107' and not loc[4].isdigit()):
				return 'L107'
			elif len(loc)>1 and loc[:1]=='L' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=791.0:
				return 'L111-791'
			elif len(loc)>1 and loc[:1]=='L' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=797.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=898.0:
				return 'L797-898'
			elif (loc=='L899') or (len(loc)>4 and loc[:4]=='L899' and not loc[4].isdigit()):
				return 'L899'
			elif len(loc)>1 and loc[:1]=='L' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
				return 'L900-991'
			else:
				return 'L7-991'
		elif len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2396.0:
			if len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=25.0:
				return 'LA5-25'
			elif len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=135.0:
				return 'LA31-135'
			elif len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=173.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=186.0:
				return 'LA173-186'
			elif len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=398.0:
				return 'LA201-398'
			elif len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2284.0:
				return 'LA410-2284'
			elif len(loc)>2 and loc[:2]=='LA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2396.0:
				return 'LA2301-2396'
			else:
				return 'LA5-2396'
		elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3640.0:
			if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=45.0:
				return 'LB5-45'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=885.0:
				return 'LB51-885'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1050.75:
				if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1049.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1050.75:
					return 'LB1049.9-1050.75'
				else:
					return 'LB1025-1050.75'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1050.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1091.0:
				return 'LB1050.9-1091'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1139.0:
				return 'LB1101-1139'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1139.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1139.5:
				return 'LB1139.2-1139.5'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1140.5:
				return 'LB1140-1140.5'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1489.0:
				return 'LB1141-1489'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1547.0:
				return 'LB1501-1547'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1555.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1602.0:
				return 'LB1555-1602'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1603.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1696.6:
				return 'LB1603-1696.6'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1705.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2286.0:
				if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1771.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1773.0:
					return 'LB1771-1773'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1775.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1785.0:
					return 'LB1775-1785'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1805.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2151.0:
					if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1811.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1987.0:
						return 'LB1811-1987'
					elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2151.0:
						return 'LB1991-2151'
					else:
						return 'LB1805-2151'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2165.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2278.0:
					return 'LB2165-2278'
				else:
					return 'LB1705-2286'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2430.0:
				if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2326.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2330.0:
					return 'LB2326.4-2330'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2331.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2335.8:
					return 'LB2331.7-2335.8'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2335.86 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2335.885:
					return 'LB2335.86-2335.885'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2335.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2337.0:
					return 'LB2335.95-2337'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2337.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2340.8:
					return 'LB2337.2-2340.8'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2341.95:
					return 'LB2341-2341.95'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2359.0:
					return 'LB2351-2359'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2365.0:
					return 'LB2361-2365'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2366.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2367.75:
					return 'LB2366-2367.75'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2372.0:
					return 'LB2371-2372'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2391.0:
					return 'LB2381-2391'
				else:
					return 'LB2300-2430'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2799.3:
				return 'LB2799-2799.3'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3095.0:
				if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2831.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2831.99:
					return 'LB2831.6-2831.99'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2832.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2844.1:
					return 'LB2832-2844.1'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2844.52 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2844.63:
					return 'LB2844.52-2844.63'
				elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3095.0:
					if len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3045.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3048.0:
						return 'LB3045-3048'
					elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3060.87:
						return 'LB3050-3060.87'
					else:
						return 'LB3011-3095'
				else:
					return 'LB2801-3095'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3325.0:
				return 'LB3201-3325'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3495.0:
				return 'LB3401-3495'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3497.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3499.0:
				return 'LB3497-3499'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3525.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3575.0:
				return 'LB3525-3575'
			elif len(loc)>2 and loc[:2]=='LB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3602.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3640.0:
				return 'LB3602-3640'
			else:
				return 'LB5-3640'
		elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6691.0:
			if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
				if (loc=='LC8') or (len(loc)>3 and loc[:3]=='LC8' and not loc[3].isdigit()):
					return 'LC8'
				elif (loc=='LC15') or (len(loc)>4 and loc[:4]=='LC15' and not loc[4].isdigit()):
					return 'LC15'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=33.0:
					return 'LC25-33'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=37.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=44.3:
					return 'LC37-44.3'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=45.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=45.8:
					return 'LC45-45.8'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=47.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.7:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.7:
						return 'LC58-58.7'
					else:
						return 'LC47-58.7'
				elif (loc=='LC59') or (len(loc)>4 and loc[:4]=='LC59' and not loc[4].isdigit()):
					return 'LC59'
				else:
					return 'LC8-59'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=245.0:
				if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=65.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=67.68:
					return 'LC65-67.68'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=68.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=70.0:
					return 'LC68-70'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.4:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=72.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=72.5:
						return 'LC72-72.5'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=107.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.4:
						return 'LC107-120.4'
					else:
						return 'LC71-120.4'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=129.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=139.0:
					return 'LC129-139'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=142.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=148.5:
					return 'LC142-148.5'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=149.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=161.0:
					return 'LC149-161'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=165.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=182.0:
					return 'LC165-182'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=184.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=188.0:
					return 'LC184-188'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=189.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=214.53:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=212.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=212.863:
						return 'LC212-212.863'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=212.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=212.93:
						return 'LC212.9-212.93'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=213.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=214.53:
						return 'LC213-214.53'
					else:
						return 'LC189-214.53'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=238.4:
					if (loc=='LC223') or (len(loc)>5 and loc[:5]=='LC223' and not loc[5].isdigit()):
						return 'LC223'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=225.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=226.7:
						return 'LC225-226.7'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=230.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=235.0:
						return 'LC230-235'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=237.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=238.4:
						return 'LC237-238.4'
					else:
						return 'LC215-238.4'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=245.0:
					return 'LC241-245'
				else:
					return 'LC65-245'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
				if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=318.0:
					return 'LC251-318'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=629.0:
						return 'LC361-629'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=775.0:
						return 'LC701-775'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
						return 'LC901-915'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=929.7:
						return 'LC921-929.7'
					elif (loc=='LC951') or (len(loc)>5 and loc[:5]=='LC951' and not loc[5].isdigit()):
						return 'LC951'
					else:
						return 'LC321-951'
				else:
					return 'LC251-951'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1099.5:
				if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1024.0:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1022.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1022.25:
						return 'LC1022-1022.25'
					else:
						return 'LC1001-1024'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1027.0:
					return 'LC1025-1027'
				elif (loc=='LC1030') or (len(loc)>6 and loc[:6]=='LC1030' and not loc[6].isdigit()):
					return 'LC1030'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1031.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1034.5:
					return 'LC1031-1034.5'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1035.8:
					return 'LC1035-1035.8'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1036.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1036.8:
					return 'LC1036-1036.8'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1037.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1037.8:
					return 'LC1037-1037.8'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1041.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1048.0:
					return 'LC1041-1048'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1049.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1049.8:
					return 'LC1049-1049.8'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1072.0:
					return 'LC1051-1072'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1081.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1087.4:
					return 'LC1081-1087.4'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1090.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1091.0:
					return 'LC1090-1091'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1099.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1099.5:
					return 'LC1099-1099.5'
				else:
					return 'LC980-1099.5'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1203.0:
				return 'LC1200-1203'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5160.3:
				if (loc=='LC1390') or (len(loc)>6 and loc[:6]=='LC1390' and not loc[6].isdigit()):
					return 'LC1390'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2572.0:
					return 'LC1401-2572'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2574.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2576.0:
					return 'LC2574-2576'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2580.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2582.0:
					return 'LC2580-2582'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2611.0:
					return 'LC2601-2611'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2638.0:
					return 'LC2630-2638'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2667.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2698.0:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2688.0:
						return 'LC2680-2688'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2698.0:
						return 'LC2690-2698'
					else:
						return 'LC2667-2698'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2699.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2913.0:
					return 'LC2699-2913'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3501.0:
					return 'LC3001-3501'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3503.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3520.0:
					return 'LC3503-3520'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3530.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3540.0:
					return 'LC3530-3540'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3593.0:
					return 'LC3551-3593'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3740.0:
					return 'LC3701-3740'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3745.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3747.0:
					return 'LC3745-3747'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4806.5:
					if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4000.0:
						return 'LC3991-4000'
					elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4806.5:
						return 'LC4001-4806.5'
					else:
						return 'LC3950-4806.5'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4812.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5160.3:
					return 'LC4812-5160.3'
				else:
					return 'LC1390-5160.3'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5163.0:
				return 'LC5161-5163'
			elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6660.4:
				if len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5493.0:
					return 'LC5451-5493'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5560.0:
					return 'LC5501-5560'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5771.0:
					return 'LC5701-5771'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5808.0:
					return 'LC5800-5808'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6101.0:
					return 'LC5900-6101'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6401.0:
					return 'LC6201-6401'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6560.4:
					return 'LC6501-6560.4'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6571.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6581.0:
					return 'LC6571-6581'
				elif len(loc)>2 and loc[:2]=='LC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6660.4:
					return 'LC6601-6660.4'
				else:
					return 'LC5201-6660.4'
			elif (loc=='LC6681') or (len(loc)>6 and loc[:6]=='LC6681' and not loc[6].isdigit()):
				return 'LC6681'
			elif (loc=='LC6691') or (len(loc)>6 and loc[:6]=='LC6691' and not loc[6].isdigit()):
				return 'LC6691'
			else:
				return 'LC8-6691'
		elif len(loc)>=2 and loc>='':
			if len(loc)>2 and loc[:2]=='LD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=13.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7501.0:
				if len(loc)>2 and loc[:2]=='LD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=13.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7251.0:
					if (loc=='LD6501') or (len(loc)>6 and loc[:6]=='LD6501' and not loc[6].isdigit()):
						return 'LD6501'
					elif len(loc)>2 and loc[:2]=='LD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7251.0:
						return 'LD7020-7251'
					else:
						return 'LD13-7251'
				elif (loc=='LD7501') or (len(loc)>6 and loc[:6]=='LD7501' and not loc[6].isdigit()):
					return 'LD7501'
				else:
					return 'LD13-7501'
			elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
				if len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5.0:
					return 'LE3-5'
				elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9.0:
					return 'LE7-9'
				elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=13.0:
					return 'LE11-13'
				elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=15.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=17.0:
					return 'LE15-17'
				elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
					if len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=23.0:
						return 'LE21-23'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=29.0:
						return 'LE27-29'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=33.0:
						return 'LE31-33'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=36.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=38.0:
						return 'LE36-38'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=41.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=43.0:
						return 'LE41-43'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=46.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=48.0:
						return 'LE46-48'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
						return 'LE51-59'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=63.0:
						return 'LE61-63'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=66.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=68.0:
						return 'LE66-68'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=73.0:
						return 'LE71-73'
					elif len(loc)>2 and loc[:2]=='LE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=76.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
						return 'LE76-78'
					else:
						return 'LE21-78'
				else:
					return 'LE3-78'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=14.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1257.0:
				if len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=14.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=797.0:
					return 'LF14-797'
				elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=957.0:
					return 'LF800-957'
				elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=960.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1137.0:
					return 'LF960-1137'
				elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1257.0:
					return 'LF1140-1257'
				else:
					return 'LF14-1257'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1311.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1537.0:
				return 'LF(1311)-1537'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1549.0:
				return 'LF1541-1549'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1550.8:
				return 'LF1550-1550.8'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1697.0:
				return 'LF1561-1697'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1705.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1709.0:
				return 'LF1705-1709'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2397.0:
				return 'LF1711-2397'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2402.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3197.0:
				return 'LF2402-3197'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3247.0:
				return 'LF3211-3247'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3248.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3897.0:
				return 'LF3248-3897'
			elif (loc=='LF3899') or (len(loc)>6 and loc[:6]=='LF3899' and not loc[6].isdigit()):
				return 'LF3899'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3911.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4067.0:
				return 'LF3911-4067'
			elif (loc=='LF4069') or (len(loc)>6 and loc[:6]=='LF4069' and not loc[6].isdigit()):
				return 'LF4069'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4071.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4197.0:
				return 'LF4071-4197'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4203.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4209.0:
				return 'LF4203-4209'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4437.0:
				return 'LF(4211)-4437'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4441.0:
				return 'LF4440-4441'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4443.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4444.0:
				return 'LF4443-4444'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4445.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4446.0:
				return 'LF4445-4446'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4447.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4447.5:
				return 'LF4447.2-4447.5'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4448.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4448.5:
				return 'LF4448-4448.5'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4449.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4449.5:
				return 'LF4449.2-4449.5'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4487.0:
				return 'LF4451-4487'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4488.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4488.2:
				return 'LF4488-4488.2'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4489.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4491.0:
				return 'LF4489-4491'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4493.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4537.0:
				return 'LF4493-4537'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4539.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4607.0:
				return 'LF4539-4607'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4827.0:
				return 'LF4610-4827'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4831.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4887.0:
				return 'LF4831-4887'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5047.0:
				return 'LF4901-5047'
			elif len(loc)>2 and loc[:2]=='LF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5627.0:
				return 'LF5051-5627'
			elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
				if (loc=='LG21') or (len(loc)>4 and loc[:4]=='LG21' and not loc[4].isdigit()):
					return 'LG21'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=51.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=53.0:
					return 'LG51-53'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=55.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=57.0:
					return 'LG55-57'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=170.2:
					return 'LG60-170.2'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=172.0:
					return 'LG171-172'
				elif (loc=='LG173') or (len(loc)>5 and loc[:5]=='LG173' and not loc[5].isdigit()):
					return 'LG173'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=181.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=184.0:
					return 'LG181-184'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=187.0:
					return 'LG185-187'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=227.0:
					return 'LG200-227'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=240.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=277.0:
					return 'LG240-277'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=285.0:
					return 'LG281-285'
				elif (loc=='LG291') or (len(loc)>5 and loc[:5]=='LG291' and not loc[5].isdigit()):
					return 'LG291'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=302.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=320.0:
					return 'LG302.2-320'
				elif (loc=='LG321') or (len(loc)>5 and loc[:5]=='LG321' and not loc[5].isdigit()):
					return 'LG321'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=331.5:
					return 'LG331-331.5'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=332.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=332.5:
					return 'LG332.2-332.5'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=332.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=332.9:
					return 'LG332.7-332.9'
				elif (loc=='LG333') or (len(loc)>5 and loc[:5]=='LG333' and not loc[5].isdigit()):
					return 'LG333'
				elif (loc=='LG338') or (len(loc)>5 and loc[:5]=='LG338' and not loc[5].isdigit()):
					return 'LG338'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=345.0:
					return 'LG341-345'
				elif (loc=='LG346') or (len(loc)>5 and loc[:5]=='LG346' and not loc[5].isdigit()):
					return 'LG346'
				elif (loc=='LG347') or (len(loc)>5 and loc[:5]=='LG347' and not loc[5].isdigit()):
					return 'LG347'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=357.0:
					return 'LG351-357'
				elif (loc=='LG358') or (len(loc)>5 and loc[:5]=='LG358' and not loc[5].isdigit()):
					return 'LG358'
				elif (loc=='LG359') or (len(loc)>5 and loc[:5]=='LG359' and not loc[5].isdigit()):
					return 'LG359'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=367.0:
					return 'LG361-367'
				elif (loc=='LG370') or (len(loc)>5 and loc[:5]=='LG370' and not loc[5].isdigit()):
					return 'LG370'
				elif (loc=='LG395') or (len(loc)>5 and loc[:5]=='LG395' and not loc[5].isdigit()):
					return 'LG395'
				else:
					return 'LG21-395'
			elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=681.0:
				if (loc=='LG401') or (len(loc)>5 and loc[:5]=='LG401' and not loc[5].isdigit()):
					return 'LG401'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=405.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=411.0:
					return 'LG405-411'
				elif (loc=='LG416') or (len(loc)>5 and loc[:5]=='LG416' and not loc[5].isdigit()):
					return 'LG416'
				elif (loc=='LG418') or (len(loc)>5 and loc[:5]=='LG418' and not loc[5].isdigit()):
					return 'LG418'
				elif (loc=='LG419') or (len(loc)>5 and loc[:5]=='LG419' and not loc[5].isdigit()):
					return 'LG419'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=423.0:
					return 'LG421-423'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=431.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=438.0:
					return 'LG431-438'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=443.0:
					return 'LG441-443'
				elif (loc=='LG451') or (len(loc)>5 and loc[:5]=='LG451' and not loc[5].isdigit()):
					return 'LG451'
				elif (loc=='LG454') or (len(loc)>5 and loc[:5]=='LG454' and not loc[5].isdigit()):
					return 'LG454'
				elif (loc=='LG457') or (len(loc)>5 and loc[:5]=='LG457' and not loc[5].isdigit()):
					return 'LG457'
				elif (loc=='LG459') or (len(loc)>5 and loc[:5]=='LG459' and not loc[5].isdigit()):
					return 'LG459'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=462.0:
					return 'LG461-462'
				elif (loc=='LG468') or (len(loc)>5 and loc[:5]=='LG468' and not loc[5].isdigit()):
					return 'LG468'
				elif (loc=='LG469') or (len(loc)>5 and loc[:5]=='LG469' and not loc[5].isdigit()):
					return 'LG469'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
					return 'LG471-475'
				elif (loc=='LG478') or (len(loc)>5 and loc[:5]=='LG478' and not loc[5].isdigit()):
					return 'LG478'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=505.0:
					if len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=483.0:
						return 'LG481-483'
					elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=497.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'LG497-499'
					else:
						return 'LG481-505'
				elif (loc=='LG511') or (len(loc)>5 and loc[:5]=='LG511' and not loc[5].isdigit()):
					return 'LG511'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=513.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=514.0:
					return 'LG513-514'
				elif (loc=='LG521') or (len(loc)>5 and loc[:5]=='LG521' and not loc[5].isdigit()):
					return 'LG521'
				elif (loc=='LG525') or (len(loc)>5 and loc[:5]=='LG525' and not loc[5].isdigit()):
					return 'LG525'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=531.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=536.0:
					return 'LG531-536'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=543.0:
					return 'LG541-543'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=545.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=547.0:
					return 'LG545-547'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=552.0:
					return 'LG551-552'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=553.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=554.0:
					return 'LG553-554'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=559.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.0:
					return 'LG559-560'
				elif (loc=='LG561') or (len(loc)>5 and loc[:5]=='LG561' and not loc[5].isdigit()):
					return 'LG561'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=593.0:
					return 'LG581-593'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=611.0:
					return 'LG601-611'
				elif (loc=='LG615') or (len(loc)>5 and loc[:5]=='LG615' and not loc[5].isdigit()):
					return 'LG615'
				elif (loc=='LG621') or (len(loc)>5 and loc[:5]=='LG621' and not loc[5].isdigit()):
					return 'LG621'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=631.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=632.0:
					return 'LG631-632'
				elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=641.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=651.0:
					return 'LG641-651'
				elif (loc=='LG671') or (len(loc)>5 and loc[:5]=='LG671' and not loc[5].isdigit()):
					return 'LG671'
				elif (loc=='LG681') or (len(loc)>5 and loc[:5]=='LG681' and not loc[5].isdigit()):
					return 'LG681'
				else:
					return 'LG401-681'
			elif (loc=='LG690') or (len(loc)>5 and loc[:5]=='LG690' and not loc[5].isdigit()):
				return 'LG690'
			elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=715.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=720.0:
				return 'LG715-720'
			elif len(loc)>2 and loc[:2]=='LG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=741.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=745.0:
				return 'LG741-745'
			elif (loc=='LG961') or (len(loc)>5 and loc[:5]=='LG961' and not loc[5].isdigit()):
				if len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2.3:
					return 'M2-2.3'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3.3:
					return 'M3-3.3'
				else:
					return 'LG961'
			else:
				return 'LD-'
		elif len(loc)>2 and loc[:2]=='LH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9.0:
			return 'LH1-9'
		elif len(loc)>2 and loc[:2]=='LJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
			return 'LJ3-165'
		elif len(loc)>2 and loc[:2]=='LT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1001.0:
			return 'LT6-(1001)'
		else:
			return 'L'
	elif loc[0]=='M':
		if len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5000.0:
			if len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1480.0:
				if (loc=='M5') or (len(loc)>2 and loc[:2]=='M5' and not loc[2].isdigit()):
					return 'M5'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=175.5:
					return 'M6-175.5'
				elif (loc=='M176') or (len(loc)>4 and loc[:4]=='M176' and not loc[4].isdigit()):
					return 'M176'
				elif (loc=='M176.5') or (len(loc)>6 and loc[:6]=='M176.5' and not loc[6].isdigit()):
					return 'M176.5'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.0:
					return 'M177-990'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1075.0:
					return 'M1000-1075'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1160.0:
					return 'M1100-1160'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1270.0:
					return 'M1200-1270'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1366.0:
					return 'M1350-1366'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1375.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1420.0:
					return 'M1375-1420'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1480.0:
					return 'M1470-1480'
				else:
					return 'M5-1480'
			elif (loc=='M1490') or (len(loc)>5 and loc[:5]=='M1490' and not loc[5].isdigit()):
				return 'M1490'
			elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1495.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2199.0:
				if (loc=='M1495') or (len(loc)>5 and loc[:5]=='M1495' and not loc[5].isdigit()):
					return 'M1495'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1497.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1998.0:
					if (loc=='M1497') or (len(loc)>5 and loc[:5]=='M1497' and not loc[5].isdigit()):
						return 'M1497'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1527.8:
						return 'M1500-1527.8'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1528.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1529.5:
						return 'M1528-1529.5'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1530.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1609.0:
						return 'M1530-1609'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1611.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1624.8:
						return 'M1611-1624.8'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1625.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1626.0:
						return 'M1625-1626'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1627.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1853.0:
						return 'M1627-1853'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1985.0:
						return 'M1900-1985'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1990.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1998.0:
						return 'M1990-1998'
					else:
						return 'M1497-1998'
				elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1999.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2199.0:
					if (loc=='M1999') or (len(loc)>5 and loc[:5]=='M1999' and not loc[5].isdigit()):
						return 'M1999'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2007.0:
						return 'M2000-2007'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2017.6:
						return 'M2010-2017.6'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2018.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2019.5:
						return 'M2018-2019.5'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2101.5:
						return 'M2020-2101.5'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2102.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2114.8:
						return 'M2102-2114.8'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2146.0:
						return 'M2115-2146'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2147.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2188.0:
						return 'M2147-2188'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2196.0:
						return 'M2190-2196'
					elif len(loc)>1 and loc[:1]=='M' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2198.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2199.0:
						return 'M2198-2199'
					else:
						return 'M1999-2199'
				else:
					return 'M1495-2199'
			elif (loc=='M5000') or (len(loc)>5 and loc[:5]=='M5000' and not loc[5].isdigit()):
				return 'M5000'
			else:
				return 'M1-5000'
		elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3930.0:
			if len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5.0:
				return 'ML1-5'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=12.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=21.0:
				return 'ML12-21'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=28.0:
				return 'ML25-28'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=29.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=31.0:
				return 'ML29-31'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=32.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=33.0:
				return 'ML32-33'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=38.0:
				return 'ML35-38'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=40.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=44.0:
				return 'ML40-44'
			elif (loc=='ML45') or (len(loc)>4 and loc[:4]=='ML45' and not loc[4].isdigit()):
				return 'ML45'
			elif (loc=='ML46') or (len(loc)>4 and loc[:4]=='ML46' and not loc[4].isdigit()):
				return 'ML46'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=47.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=54.8:
				return 'ML47-54.8'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=55.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=89.0:
				return 'ML55-89'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=93.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=96.5:
				return 'ML93-96.5'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.0:
				return 'ML100-109'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=111.5:
				return 'ML110-111.5'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=112.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=112.5:
				return 'ML112-112.5'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=112.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=158.8:
				return 'ML112.8-158.8'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=159.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3785.0:
				if len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=159.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=161.0:
					return 'ML159-161'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=162.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=197.0:
					return 'ML162-197'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=198.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=360.6:
					return 'ML198-360.6'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=385.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=429.0:
					return 'ML385-429'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=458.0:
					return 'ML430-458'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=459.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1380.0:
					return 'ML459-1380'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3275.0:
					return 'ML1400-3275'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3351.0:
					return 'ML3300-3351'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3465.0:
					return 'ML3400-3465'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3469.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3541.0:
					return 'ML3469-3541'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3544.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3776.0:
					return 'ML3544-3776'
				elif (loc=='ML3780') or (len(loc)>6 and loc[:6]=='ML3780' and not loc[6].isdigit()):
					return 'ML3780'
				elif (loc=='ML3785') or (len(loc)>6 and loc[:6]=='ML3785' and not loc[6].isdigit()):
					return 'ML3785'
				else:
					return 'ML159-3785'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3792.0:
				return 'ML3790-3792'
			elif (loc=='ML3795') or (len(loc)>6 and loc[:6]=='ML3795' and not loc[6].isdigit()):
				return 'ML3795'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3797.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.5:
				return 'ML3797-3799.5'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3923.0:
				if (loc=='ML3800') or (len(loc)>6 and loc[:6]=='ML3800' and not loc[6].isdigit()):
					return 'ML3800'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3805.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3817.0:
					return 'ML3805-3817'
				elif (loc=='ML3820') or (len(loc)>6 and loc[:6]=='ML3820' and not loc[6].isdigit()):
					return 'ML3820'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3830.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3840.0:
					return 'ML3830-3840'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3845.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3877.0:
					return 'ML3845-3877'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3880.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3915.0:
					return 'ML3880-3915'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3916.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3918.0:
					return 'ML3916-3918'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3919.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3920.0:
					return 'ML3919-3920'
				elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3921.8:
					return 'ML3921-3921.8'
				elif (loc=='ML3922') or (len(loc)>6 and loc[:6]=='ML3922' and not loc[6].isdigit()):
					return 'ML3922'
				else:
					return 'ML3800-3923'
			elif len(loc)>2 and loc[:2]=='ML' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3928.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3930.0:
				return 'ML3928-3930'
			else:
				return 'ML1-3930'
		elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=960.0:
			if (loc=='MT1') or (len(loc)>3 and loc[:3]=='MT1' and not loc[3].isdigit()):
				return 'MT1'
			elif (loc=='M2.5') or (len(loc)>4 and loc[:4]=='M2.5' and not loc[4].isdigit()):
				return 'M2.5'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5.0:
				return 'MT3-5'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7.0:
				return 'MT5.5-7'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=15.0:
				if (loc=='MT9') or (len(loc)>3 and loc[:3]=='MT9' and not loc[3].isdigit()):
					return 'MT9'
				elif (loc=='MT10') or (len(loc)>4 and loc[:4]=='MT10' and not loc[4].isdigit()):
					return 'MT10'
				elif (loc=='MT15') or (len(loc)>4 and loc[:4]=='MT15' and not loc[4].isdigit()):
					return 'MT15'
				else:
					return 'MT9-15'
			elif (loc=='MT17') or (len(loc)>4 and loc[:4]=='MT17' and not loc[4].isdigit()):
				return 'MT17'
			elif (loc=='MT18') or (len(loc)>4 and loc[:4]=='MT18' and not loc[4].isdigit()):
				return 'MT18'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=34.0:
				return 'MT20-34'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=35.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.0:
				return 'MT35-39'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=40.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=67.0:
				return 'MT40-67'
			elif (loc=='MT68') or (len(loc)>4 and loc[:4]=='MT68' and not loc[4].isdigit()):
				return 'MT68'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=74.0:
				return 'MT70-74'
			elif (loc=='MT75') or (len(loc)>4 and loc[:4]=='MT75' and not loc[4].isdigit()):
				return 'MT75'
			elif (loc=='MT80') or (len(loc)>4 and loc[:4]=='MT80' and not loc[4].isdigit()):
				return 'MT80'
			elif (loc=='MT82') or (len(loc)>4 and loc[:4]=='MT82' and not loc[4].isdigit()):
				return 'MT82'
			elif (loc=='MT85') or (len(loc)>4 and loc[:4]=='MT85' and not loc[4].isdigit()):
				return 'MT85'
			elif (loc=='MT87') or (len(loc)>4 and loc[:4]=='MT87' and not loc[4].isdigit()):
				return 'MT87'
			elif (loc=='MT88') or (len(loc)>4 and loc[:4]=='MT88' and not loc[4].isdigit()):
				return 'MT88'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=90.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=146.0:
				return 'MT90-146'
			elif (loc=='MT150') or (len(loc)>5 and loc[:5]=='MT150' and not loc[5].isdigit()):
				return 'MT150'
			elif (loc=='MT155') or (len(loc)>5 and loc[:5]=='MT155' and not loc[5].isdigit()):
				return 'MT155'
			elif (loc=='MT165') or (len(loc)>5 and loc[:5]=='MT165' and not loc[5].isdigit()):
				return 'MT165'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=810.0:
				if len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=179.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=258.0:
					return 'MT179-258'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=259.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=338.0:
					return 'MT259-338'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=339.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=533.0:
					return 'MT339-533'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=539.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=654.0:
					return 'MT539-654'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=655.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=725.0:
					return 'MT655-725'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=728.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=735.0:
					return 'MT728-735'
				elif (loc=='MT737') or (len(loc)>5 and loc[:5]=='MT737' and not loc[5].isdigit()):
					return 'MT737'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=740.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=810.0:
					return 'MT740-810'
				else:
					return 'MT170-810'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
				if len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=898.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
					return 'MT898-915'
				else:
					return 'MT820-915'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=918.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=948.0:
				if len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=920.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=925.0:
					return 'MT920-925'
				elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=930.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=948.0:
					return 'MT930-948'
				else:
					return 'MT918-948'
			elif (loc=='MT949.5') or (len(loc)>7 and loc[:7]=='MT949.5' and not loc[7].isdigit()):
				return 'MT949.5'
			elif (loc=='MT950') or (len(loc)>5 and loc[:5]=='MT950' and not loc[5].isdigit()):
				return 'MT950'
			elif len(loc)>2 and loc[:2]=='MT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=955.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=956.0:
				return 'MT955-956'
			elif (loc=='MT960') or (len(loc)>5 and loc[:5]=='MT960' and not loc[5].isdigit()):
				return 'MT960'
			else:
				return 'MT1-960'
		else:
			return 'M'
	elif loc[0]=='N':
		if len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9211.0:
			if len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.0:
				return 'N1-58'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=72.0:
				return 'N61-72'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=81.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
				return 'N81-390'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3990.0:
				return 'N400-3990'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5198.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5299.0:
				return 'N5198-5299'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7418.0:
				return 'N5300-7418'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7525.8:
				return 'N7420-7525.8'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7560.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8266.0:
				return 'N7560-8266'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8356.0:
				return 'N8350-8356'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8553.0:
				return 'N8510-8553'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8554.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8585.0:
				return 'N8554-8585'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8675.0:
				return 'N8600-8675'
			elif len(loc)>1 and loc[:1]=='N' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9165.0:
				return 'N8700-9165'
			else:
				return 'N1-(9211)'
		elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9428.0:
			if len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.0:
				return 'NA1-60'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.0:
				return 'NA100-130'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1555.5:
				return 'NA190-1555.5'
			elif (loc=='NA1995') or (len(loc)>6 and loc[:6]=='NA1995' and not loc[6].isdigit()):
				return 'NA1995'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2320.0:
				return 'NA2000-2320'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2335.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2360.0:
				return 'NA2335-2360'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2460.0:
				return 'NA2400-2460'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2599.0:
				return 'NA2500-2599'
			elif len(loc)>=2 and loc[:2]=='NA'and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2599.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2599.9:
				return 'NA2599.5-2599.9'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2695.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2793.0:
				return 'NA2695-2793'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2835.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4050.0:
				return 'NA2835-4050'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8480.0:
				if len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4145.0:
					return 'NA4100-4145'
				elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4160.0:
					return 'NA4150-4160'
				elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8480.0:
					if len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7020.0:
						return 'NA4170-(7020)'
					elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7884.0:
						return 'NA7100-7884'
					elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7910.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8125.0:
						return 'NA7910-8125'
					elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8260.0:
						return 'NA8200-8260'
					elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8480.0:
						return 'NA8300-8480'
					else:
						return 'NA4170-8480'
				else:
					return 'NA4100-8480'
			elif len(loc)>2 and loc[:2]=='NA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9428.0:
				return 'NA9000-9428'
			else:
				return 'NA1-9428'
		elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1952.0:
			if len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=50.0:
				return 'NB1-50'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1115.0:
				return 'NB60-1115'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1133.0:
				return 'NB1120-1133'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1134.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1134.4:
				return 'NB1134-1134.4'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1150.0:
				return 'NB1135-1150'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1195.0:
				return 'NB1160-1195'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1200.0:
				return 'NB1199-1200'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1203.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1270.0:
				return 'NB1203-1270'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1272.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1291.0:
				return 'NB1272-1291'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1293.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1895.0:
				if len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1293.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1310.0:
					return 'NB1293-1310'
				elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1312.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1313.0:
					return 'NB1312-1313'
				elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1685.0:
					return 'NB1330-1685'
				elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1793.0:
					return 'NB1750-1793'
				elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1880.0:
					return 'NB1800-1880'
				else:
					return 'NB1293-1895'
			elif len(loc)>2 and loc[:2]=='NB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1910.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1952.0:
				return 'NB1910-1952'
			else:
				return 'NB1-1952'
		elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1940.0:
			if len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=45.0:
				return 'NC1-45'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=266.0:
				return 'NC50-266'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=670.0:
				return 'NC390-670'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=673.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=677.0:
				return 'NC673-677'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=703.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=725.0:
				return 'NC703-725'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=758.0:
				return 'NC730-758'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=760.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=825.0:
				return 'NC760-825'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=845.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
				return 'NC845-915'
			elif (loc=='NC930') or (len(loc)>5 and loc[:5]=='NC930' and not loc[5].isdigit()):
				return 'NC930'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=996.0:
				return 'NC950-(996)'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=997.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1003.0:
				return 'NC997-1003'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1284.0:
				return 'NC1280-1284'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1766.0:
				return 'NC1300-1766'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1850.0:
				return 'NC1800-1850'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1860.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1896.0:
				return 'NC1860-1896'
			elif len(loc)>2 and loc[:2]=='NC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1920.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1940.0:
				return 'NC1920-1940'
			else:
				return 'NC1-1940'
		elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3416.0:
			if len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=48.0:
				return 'ND25-(48)'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=813.0:
				return 'ND49-813'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1115.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1120.0:
				return 'ND1115-1120'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1156.0:
				return 'ND1130-1156'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1288.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1460.0:
				if len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1290.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1293.0:
					return 'ND1290-1293'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1337.0:
					return 'ND1300-1337'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1367.0:
					return 'ND1340-1367'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1375.0:
					return 'ND1370-1375'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1383.0:
					return 'ND1380-1383'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1385.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1388.0:
					return 'ND1385-1388'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1393.0:
					return 'ND1390-1393'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1403.0:
					return 'ND1400-1403'
				elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1460.0:
					return 'ND1410-1460'
				else:
					return 'ND1288-1460'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1625.0:
				return 'ND1470-1625'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1662.0:
				return 'ND1630-1662'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2495.0:
				return 'ND1700-2495'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2733.0:
				return 'ND2550-2733'
			elif len(loc)>2 and loc[:2]=='ND' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2889.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3416.0:
				return 'ND2889-3416'
			else:
				return 'ND25-3416'
		elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3002.0:
			if len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.0:
				if len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
					return 'NE1-90'
				elif len(loc)>=2 and loc[:2]=='NE':
					return 'NE'
				elif (loc=='NE380') or (len(loc)>5 and loc[:5]=='NE380' and not loc[5].isdigit()):
					return 'NE380'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
					return 'NE390-395'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=773.0:
					return 'NE400-773'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=830.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=898.0:
					return 'NE830-898'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=962.0:
					return 'NE951-962'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=965.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=965.3:
					return 'NE965-965.3'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=970.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=973.0:
					return 'NE970-973'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=975.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=975.4:
					return 'NE975-975.4'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=977.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.0:
					return 'NE977-978'
				else:
					return 'NE1-978'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1352.0:
				if len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1027.0:
					return 'NE1000-1027'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1030.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1196.3:
					return 'NE1030-1196.3'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1233.0:
					return 'NE1220-1233'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1326.5:
					return 'NE1310-1326.5'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1336.0:
					return 'NE1330-1336'
				elif (loc=='NE1340') or (len(loc)>6 and loc[:6]=='NE1340' and not loc[6].isdigit()):
					return 'NE1340'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1344.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1345.0:
					return 'NE1344-1345'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1352.0:
					return 'NE1350-1352'
				else:
					return 'NE1000-1352'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1879.0:
				if len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1422.0:
					return 'NE1400-1422'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1630.0:
					return 'NE1620-1630'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1634.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1749.0:
					return 'NE1634-1749'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1775.0:
					return 'NE1750-1775'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1850.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1879.0:
					return 'NE1850-1879'
				else:
					return 'NE1400-1879'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2232.5:
				if len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1975.0:
					return 'NE1940-1975'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2055.5:
					return 'NE1980-2055.5'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2140.0:
					return 'NE2120-2140'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2149.0:
					return 'NE2141-2149'
				elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2225.0:
					return 'NE2220-2225'
				else:
					return 'NE1940-2232.5'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2236.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2240.6:
				return 'NE2236-2240.6'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2242.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2246.0:
				return 'NE2242-2246'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2570.0:
				return 'NE2250-2570'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2685.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2685.8:
				return 'NE2685-2685.8'
			elif (loc=='NE2690') or (len(loc)>6 and loc[:6]=='NE2690' and not loc[6].isdigit()):
				return 'NE2690'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2880.0:
				return 'NE2800-2880'
			elif len(loc)>2 and loc[:2]=='NE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3002.0:
				return 'NE3000-3002'
			else:
				return 'NE1-3002'
		elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9990.0:
			if len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=570.0:
				return 'NK1-570'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=806.0:
				return 'NK600-806'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1149.5:
				return 'NK1135-1149.5'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1590.0:
				if len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1174.0:
					return 'NK1160-1174'
				elif len(loc)>=2 and loc[:2]=='NK':
					return 'NK'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1505.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1535.0:
					return 'NK1505-1535'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1548.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1590.0:
					return 'NK1548-1590'
				else:
					return 'NK1160-1590'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1648.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1678.0:
				return 'NK1648-1678'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2195.0:
				if len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2138.0:
					return 'NK1700-2138'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2180.0:
					return 'NK2140-2180'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2192.0:
					return 'NK2190-2192'
				else:
					return 'NK1700-2195'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2750.0:
				return 'NK2200-2750'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2775.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2898.0:
				return 'NK2775-2898'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2975.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3049.0:
				return 'NK2975-3049'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3296.3:
				return 'NK3175-3296.3'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3375.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3496.3:
				return 'NK3375-3496.3'
			elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9990.0:
				if len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4695.0:
					return 'NK3700-4695'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4890.0:
					return 'NK4700-4890'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5440.0:
					return 'NK5100-5440'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6060.0:
					return 'NK5500-6060'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8459.0:
					return 'NK6400-8459'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9505.5:
					return 'NK8800-9505.5'
				elif len(loc)>2 and loc[:2]=='NK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9955.0:
					return 'NK9600-9955'
				else:
					return 'NK3600-(9990)'
			else:
				return 'NK1-(9990)'
		elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=820.0:
			if len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=260.0:
				return 'NX1-260'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=410.0:
				return 'NX280-410'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=415.0:
				return 'NX411-415'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.0:
				return 'NX420-430'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=632.0:
				return 'NX440-632'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=694.0:
				return 'NX650-694'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=750.0:
				return 'NX700-750'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=760.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=770.0:
				return 'NX760-770'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=775.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=777.0:
				return 'NX775-777'
			elif len(loc)>2 and loc[:2]=='NX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=798.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=820.0:
				return 'NX798-820'
			else:
				return 'NX1-820'
		else:
			return 'N'
	elif loc[0]=='P':
		if len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1091.0:
			if len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=85.0:
				return 'P1-85'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=87.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=96.0:
				if (loc=='P94.7') or (len(loc)>5 and loc[:5]=='P94.7' and not loc[5].isdigit()):
					return 'P94.7'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=95.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=95.6:
					return 'P95-95.6'
				else:
					return 'P87-96'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=98.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=98.5:
				return 'P98-98.5'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.4:
				return 'P99-99.4'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.6:
				return 'P99.5-99.6'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=410.0:
				if len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=118.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=118.75:
					return 'P118-118.75'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=149.0:
					return 'P121-149'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=299.0:
					return 'P201-299'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=301.5:
					return 'P301-301.5'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=302.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.87:
					return 'P302-302.87'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=306.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=310.0:
					return 'P306-310'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=324.5:
					return 'P321-324.5'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=325.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.5:
					return 'P325-325.5'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=326.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=326.5:
					return 'P326-326.5'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=327.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=327.5:
					return 'P327-327.5'
				elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=375.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=381.0:
					return 'P375-381'
				else:
					return 'P101-410'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=769.0:
				return 'P501-769'
			elif len(loc)>1 and loc[:1]=='P' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1091.0:
				return 'P901-1091'
			else:
				return 'P1-1091'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
			return 'PA1-199'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=899.0:
			return 'PA201-899'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1179.0:
			return 'PA1000-1179'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2915.0:
			return 'PA2001-2915'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3049.0:
			return 'PA3000-3049'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4505.0:
			if len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3285.0:
				return 'PA3051-3285'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3516.0:
				return 'PA3300-3516'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3564.0:
				return 'PA3520-3564'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3681.0:
				return 'PA3601-3681'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3818.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4505.0:
				if len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3825.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3849.0:
					return 'PA3825-3849'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3858.0:
					return 'PA3851-3858'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3890.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3926.0:
					return 'PA3890-3926'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3949.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3964.0:
					return 'PA3949-3964'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3973.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3992.0:
					return 'PA3973-3992'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4018.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4209.0:
					return 'PA4018-4209'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4279.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4333.0:
					return 'PA4279-4333'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4367.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4389.0:
					return 'PA4367-4389'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4413.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4434.0:
					return 'PA4413-4434'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4452.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4486.0:
					return 'PA4452-4486'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4494.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4499.0:
					return 'PA4494-4499'
				else:
					return 'PA3818-4505'
			else:
				return 'PA3050-4505'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5660.0:
			if len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5638.36:
				return 'PA5301-5638.36'
			else:
				return 'PA5000-5660'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6971.0:
			if len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6097.0:
				return 'PA6001-6097'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6140.0:
				return 'PA6100-6140'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6144.0:
				return 'PA6141-6144'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6191.0:
				return 'PA6155-6191'
			elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6202.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6971.0:
				if len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6235.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6269.0:
					return 'PA6235-6269'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6278.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6370.0:
					return 'PA6278-6370'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6393.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6444.0:
					return 'PA6393-6444'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6482.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6496.0:
					return 'PA6482-6496'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6510.0:
					return 'PA6501-6510'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6519.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6553.0:
					return 'PA6519-6553'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6568.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6609.0:
					return 'PA6568-6609'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6611.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6637.0:
					return 'PA6611-6637'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6693.0:
					return 'PA6661-6693'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6705.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6753.0:
					return 'PA6705-6753'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6755.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6785.0:
					return 'PA6755-6785'
				elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6961.0:
					return 'PA6801-6961'
				else:
					return 'PA6202-6971'
			else:
				return 'PA6000-6971'
		elif len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8595.0:
			if len(loc)>2 and loc[:2]=='PA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8595.0:
				return 'PA8200-8595'
			else:
				return 'PA8001-8595'
		elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3029.0:
			if len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=431.0:
				return 'PB1-431'
			elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3029.0:
				if len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1200.0:
					if len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1449.0:
						return 'PB1201-1449'
					elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1709.0:
						return 'PB1501-1709'
					elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1867.0:
						return 'PB1801-1867'
					else:
						return 'PB1101-1200'
				elif (loc=='PB1950') or (len(loc)>6 and loc[:6]=='PB1950' and not loc[6].isdigit()):
					return 'PB1950'
				elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3029.0:
					if len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2499.0:
						return 'PB2101-2499'
					elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2621.0:
						return 'PB2501-2621'
					elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2932.0:
						return 'PB2801-2932'
					else:
						return 'PB2001-3029'
				elif len(loc)>2 and loc[:2]=='PB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3029.0:
					return 'PB3001-3029'
				else:
					return 'PB1001-3029'
			else:
				return 'PB1-3029'
		elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5498.0:
			if len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=400.0:
				return 'PC1-400'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=872.0:
				return 'PC601-872'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=986.0:
				return 'PC901-986'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1977.0:
				return 'PC1001-1977'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1981.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1984.0:
				return 'PC1981-1984'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3761.0:
				if len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3708.0:
					if len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2813.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2898.0:
						return 'PC2813-(2898)'
					elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3366.0:
						return 'PC3201-3366'
					elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3420.5:
						return 'PC3371-3420.5'
					elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3420.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3495.0:
						return 'PC3420.8-3495'
					else:
						return 'PC2700-(3708)'
				elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3721.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3761.0:
					return 'PC3721-3761'
				else:
					return 'PC2001-3761'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3976.0:
				return 'PC3801-3976'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4977.0:
				return 'PC4001-4977'
			elif len(loc)>2 and loc[:2]=='PC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5498.0:
				return 'PC5001-5498'
			else:
				return 'PC1-5498'
		elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7159.0:
			if len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=780.0:
				return 'PD1-780'
			elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1350.0:
				if len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1211.0:
					return 'PD1101-1211'
				else:
					return 'PD1001-1350'
			elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7159.0:
				if len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2393.0:
					return 'PD2201-2393'
				elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2446.0:
					return 'PD2401-2446'
				elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2999.0:
					return 'PD(2501)-2999'
				elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3929.0:
					return 'PD3001-3929'
				elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5929.0:
					return 'PD5001-5929'
				elif len(loc)>2 and loc[:2]=='PD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7159.0:
					return 'PD(6000)-(7159)'
				else:
					return 'PD1501-(7159)'
			else:
				return 'PD1-(7159)'
		elif len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3729.0:
			if len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=458.0:
				return 'PE101-(458)'
			elif len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=693.0:
				return 'PE501-(693)'
			elif len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=814.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=896.0:
				return 'PE(814)-896'
			elif len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1693.0:
				return 'PE1001-1693'
			elif len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3602.0:
				return 'PE1700-3602'
			elif len(loc)>2 and loc[:2]=='PE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3729.0:
				return 'PE3701-3729'
			else:
				return 'PE1-3729'
		elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
			if len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=979.0:
				return 'PF1-979'
			elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1184.0:
				return 'PF1001-1184'
			elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1541.0:
				return 'PF1401-1541'
			elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
				if len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3991.0:
					return 'PF3801-3991'
				elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3992.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4010.0:
					return 'PF3992-4010'
				elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4043.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4350.0:
					return 'PF4043-(4350)'
				elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4596.0:
					return 'PF(4501)-(4596)'
				elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5951.0:
					return 'PF5000-5951'
				elif len(loc)>2 and loc[:2]=='PF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5971.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
					return 'PF5971-5999'
				else:
					return 'PF3001-5999'
			else:
				return 'PF1-5999'
		elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9665.0:
			if len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7925.0:
				if len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
					return 'PG1-499'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=585.0:
					return 'PG500-585'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=716.0:
					return 'PG601-716'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=771.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.0:
					return 'PG(771)-(799)'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1146.0:
					return 'PG801-1146'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1199.0:
					return 'PG1151-1199'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1749.0:
					return 'PG1201-1749'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1962.0:
					return 'PG1801-1962'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2826.0:
					return 'PG2001-2826'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2830.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2847.0:
					return 'PG2830-2847'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3698.0:
					if len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3190.0:
						return 'PG2900-3190'
					elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3299.0:
						return 'PG3199-3299'
					elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3493.96:
						return 'PG3300-3493.96'
					elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3505.0:
						return 'PG3500-3505'
					elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3515.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3550.0:
						return 'PG3515-3550'
					elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3698.0:
						return 'PG(3651)-(3698)'
					else:
						return 'PG2900-(3698)'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3987.0:
					return 'PG3801-3987'
				elif (loc=='PG3990') or (len(loc)>6 and loc[:6]=='PG3990' and not loc[6].isdigit()):
					return 'PG3990'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5146.0:
					return 'PG4001-5146'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5546.0:
					return 'PG5201-5546'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5631.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5689.0:
					return 'PG5631-5689'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7446.0:
					return 'PG6001-7446'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7925.0:
					return 'PG7900-7925'
				else:
					return 'PG1-7925'
			elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9146.0:
				if len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8208.0:
					return 'PG8201-8208'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8772.0:
					return 'PG8501-8772'
				elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9146.0:
					return 'PG8801-9146'
				else:
					return 'PG8001-9146'
			elif len(loc)>2 and loc[:2]=='PG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9665.0:
				return 'PG9501-9665'
			else:
				return 'PG1-9665'
		elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
			if len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
				return 'PH1-87'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=98.5:
				return 'PH91-98.5'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=405.0:
				return 'PH101-405'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1109.0:
				if len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=509.0:
					return 'PH501-509'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=529.0:
					return 'PH521-529'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=531.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=539.0:
					return 'PH531-539'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=549.0:
					return 'PH541-549'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=559.0:
					return 'PH551-559'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=569.0:
					return 'PH561-569'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=589.0:
					return 'PH581-589'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=671.0:
					return 'PH601-671'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=735.0:
					return 'PH701-735'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
					return 'PH751-785'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=836.0:
					return 'PH801-836'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1079.0:
					return 'PH1001-1079'
				elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1109.0:
					return 'PH1101-1109'
				else:
					return 'PH501-1109'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1409.0:
				return 'PH1201-1409'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3445.0:
				return 'PH2001-3445'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3820.0:
				return 'PH3801-3820'
			elif len(loc)>2 and loc[:2]=='PH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5490.0:
				return 'PH5001-5490'
			else:
				return 'PH1-5490'
		elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9500.0:
			if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
					return 'PJ1-(195)'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=306.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
					return 'PJ306-489'
				else:
					return 'PJ1-489'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=621.0:
					return 'PJ601-621'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
					return 'PJ701-989'
				else:
					return 'PJ601-989'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
				return 'PJ991-995'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1989.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1091.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1109.0:
					return 'PJ1091-1109'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1446.0:
					return 'PJ1111-1446'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1989.0:
					return 'PJ1481-1989'
				else:
					return 'PJ1001-1989'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2199.0:
				return 'PJ2001-2199'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2399.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2353.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2367.0:
					return 'PJ2353-2367'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2369.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2399.0:
					return 'PJ2369-2399'
				else:
					return 'PJ2340-2399'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2594.0:
				return 'PJ2401-2594'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3097.0:
				return 'PJ3001-3097'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3971.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3231.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3595.0:
					return 'PJ3231-3595'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3971.0:
					return 'PJ3601-(3971)'
				else:
					return 'PJ3101-(3971)'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4091.0:
				return 'PJ4001-(4091)'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4197.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4197.0:
					return 'PJ4171-4197'
				else:
					return 'PJ4101-4197'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5192.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4543.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4937.0:
					return 'PJ4543-4937'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4996.0:
					return 'PJ4951-4996'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5060.0:
					if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5055.51:
						return 'PJ5050-5055.51'
					else:
						return 'PJ5001-5060'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5061.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5192.0:
					if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5192.0:
						return 'PJ5111-5192'
					else:
						return 'PJ5061-5192'
				else:
					return 'PJ4501-5192'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5329.5:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5289.0:
					if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5219.5:
						return 'PJ5211-5219.5'
					elif (loc=='PJ5229') or (len(loc)>6 and loc[:6]=='PJ5229' and not loc[6].isdigit()):
						return 'PJ5229'
					elif (loc=='PJ5239') or (len(loc)>6 and loc[:6]=='PJ5239' and not loc[6].isdigit()):
						return 'PJ5239'
					elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5249.0:
						return 'PJ5241-5249'
					elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5259.0:
						return 'PJ5251-5259'
					elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5271.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5279.0:
						return 'PJ5271-5279'
					elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5289.0:
						return 'PJ5281-5289'
					else:
						return 'PJ5211-5289'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5329.5:
					if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5329.5:
						return 'PJ5321-5329.5'
					else:
						return 'PJ5301-5329.5'
				else:
					return 'PJ5201-5329.5'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5809.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5414.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5495.0:
					return 'PJ5414-5495'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5695.0:
					return 'PJ5601-5695'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5709.0:
					return 'PJ5701-5709'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5719.0:
					return 'PJ5711-5719'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5809.0:
					return 'PJ5801-5809'
				else:
					return 'PJ5401-5809'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5909.0:
				return 'PJ5901-5909'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8517.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6073.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7144.0:
					if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6697.0:
						return 'PJ6690-6697'
					elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6901.0:
						return 'PJ6701-6901'
					elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7144.0:
						return 'PJ6950-7144'
					else:
						return 'PJ6073-7144'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8517.0:
					if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7695.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7976.0:
						return 'PJ7695.8-7976'
					else:
						return 'PJ7501-8517'
				else:
					return 'PJ6001-8517'
			elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9348.0:
				if len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9101.0:
					return 'PJ9001-9101'
				elif len(loc)>2 and loc[:2]=='PJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9269.0:
					return 'PJ9201-9269'
				else:
					return 'PJ8991-9348'
			else:
				return 'PJ1-(9500)'
		elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9601.0:
			if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=85.0:
				return 'PK1-85'
			elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2899.0:
				if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=185.0:
					return 'PK101-185'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=379.0:
					return 'PK(201)-379'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=976.0:
					return 'PK401-976'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1095.0:
					return 'PK1001-1095'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1409.5:
					return 'PK1201-1409.5'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1429.5:
					return 'PK1421-1429.5'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1490.0:
					return 'PK1471-1490'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2899.0:
					if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2899.0:
						return 'PK1550-2899'
					else:
						return 'PK1501-2899'
				else:
					return 'PK101-2899'
			elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5471.0:
				if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2979.0:
					return 'PK(2901)-2979'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3591.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4485.0:
					if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3799.0:
						return 'PK3791-3799'
					elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4251.0:
						return 'PK(3801)-(4251)'
					elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4485.0:
						return 'PK4471-4485'
					else:
						return 'PK3591-4485'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4681.0:
					return 'PK(4501)-4681'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4990.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5046.0:
					return 'PK4990-5046'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5471.0:
					return 'PK5401-5471'
				else:
					return 'PK(2901)-5471'
			elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6996.0:
				if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6099.0:
					return 'PK6001-6099'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6119.0:
					return 'PK6101-(6119)'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6129.0:
					return 'PK6121-6129'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6135.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6199.9:
					if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6199.5:
						return 'PK6141-6199.5'
					else:
						return 'PK6135-6199.9'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6599.7:
					if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6399.0:
						return 'PK6201-6399'
					elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6599.7:
						return 'PK6400-(6599.7)'
					else:
						return 'PK6201-(6599.7)'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6821.0:
					return 'PK6701-6821'
				else:
					return 'PK6001-6996'
			elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7075.0:
				if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7037.0:
					return 'PK7021-7037'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7045.0:
					return 'PK7040-7045'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7065.0:
					return 'PK7050-7065'
				else:
					return 'PK7001-7075'
			elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8832.0:
				if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8496.0:
					return 'PK8001-8496'
				elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8832.0:
					return 'PK8501-8832'
				else:
					return 'PK8001-8832'
			elif len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9201.0:
				if len(loc)>2 and loc[:2]=='PK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9169.0:
					return 'PK9101-9169'
				else:
					return 'PK9001-9201'
			else:
				return 'PK1-(9601)'
		elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8844.0:
			if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=481.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=396.0:
					return 'PL21-396'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=431.0:
					return 'PL400-431'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=481.0:
					return 'PL450-481'
				else:
					return 'PL1-481'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.0:
				return 'PL(490)-495'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=889.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
					return 'PL501-699'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=889.0:
					if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=751.5:
						return 'PL700-751.5'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=752.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=783.0:
						return 'PL752-783'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=784.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=866.0:
						return 'PL784-866'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=885.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=889.0:
						return 'PL885-889'
					else:
						return 'PL700-889'
				else:
					return 'PL501-889'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=998.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=949.0:
					return 'PL901-949'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=998.0:
					if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=969.5:
						return 'PL950.2-969.5'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=969.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=985.0:
						return 'PL969.8-985'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=986.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=993.0:
						return 'PL986-993'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=997.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=998.0:
						return 'PL997-998'
					else:
						return 'PL950-998'
				else:
					return 'PL901-998'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3208.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1960.0:
					return 'PL1001-1960'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3208.0:
					if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2443.0:
						return 'PL2250-2443'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2659.0:
						return 'PL2450-2659'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2979.0:
						return 'PL2661-2979'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3030.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3208.0:
						return 'PL3030-3208'
					else:
						return 'PL2250-3208'
				else:
					return 'PL1001-3208'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3311.0:
				return 'PL3301-3311'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3509.0:
				return 'PL3501-3509'
			elif (loc=='PL3512') or (len(loc)>6 and loc[:6]=='PL3512' and not loc[6].isdigit()):
				return 'PL3512'
			elif (loc=='PL3515') or (len(loc)>6 and loc[:6]=='PL3515' and not loc[6].isdigit()):
				return 'PL3515'
			elif (loc=='PL3518') or (len(loc)>6 and loc[:6]=='PL3518' and not loc[6].isdigit()):
				return 'PL3518'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4001.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4001.0:
					if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3801.0:
						return 'PL3561-3801'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4001.0:
						return 'PL3851-4001'
					else:
						return 'PL3551-4001'
				else:
					return 'PL3521-4001'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4054.0:
				return 'PL4051-4054'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4074.0:
				return 'PL4070-4074'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4587.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4470.0:
					if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4379.0:
						return 'PL4371-4379'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4423.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4470.0:
						return 'PL4423-4470'
					else:
						return 'PL4301-4470'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4471.5:
					return 'PL4471-4471.5'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4498.0:
					return 'PL4490-4498'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4587.0:
					return 'PL4501-4587'
				else:
					return 'PL4281-4587'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4890.0:
				return 'PL4601-(4890)'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7511.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7101.0:
					if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5497.0:
						return 'PL5051-5497'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6135.0:
						return 'PL5501-6135'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6145.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6167.0:
						return 'PL6145-6167'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6341.0:
						return 'PL6191-6341'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6551.0:
						return 'PL6401-6551'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6621.0:
						return 'PL6601-6621'
					elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7101.0:
						return 'PL7001-7101'
					else:
						return 'PL5001-7101'
				else:
					return 'PL5001-7511'
			elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8844.0:
				if len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8009.0:
					return 'PL8000-8009'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8009.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8014.0:
					return 'PL8009.5-8014'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8015.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8021.0:
					return 'PL8015-8021'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8024.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8027.0:
					return 'PL8024-8027'
				elif len(loc)>2 and loc[:2]=='PL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8844.0:
					return 'PL8035-8844'
				else:
					return 'PL8000-8844'
			else:
				return 'PL1-8844'
		elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9021.0:
			if len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=94.0:
				return 'PM1-94'
			elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2711.0:
				if len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=231.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=355.0:
					return 'PM231-355'
				elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=501.0:
					return 'PM(401)-501'
				elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=549.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2711.0:
					return 'PM549-2711'
				else:
					return 'PM101-2711'
			elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4566.0:
				return 'PM3001-4566'
			elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7356.0:
				return 'PM5001-7356'
			elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7895.0:
				if len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7831.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7875.0:
					return 'PM7831-7875'
				else:
					return 'PM7801-7895'
			elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8995.0:
				if len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8298.0:
					return 'PM8201-8298'
				else:
					return 'PM8001-8995'
			elif (loc=='PM8999') or (len(loc)>6 and loc[:6]=='PM8999' and not loc[6].isdigit()):
				return 'PM8999'
			elif len(loc)>2 and loc[:2]=='PM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9021.0:
				return 'PM9001-9021'
			else:
				return 'PM1-9021'
		elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6790.0:
			if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9.0:
				return 'PN1-9'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=30.0:
				return 'PN20-30'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=45.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=57.0:
				return 'PN45-57'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=59.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=72.0:
				return 'PN59-72'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'PN80-99'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=245.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=172.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=239.0:
					return 'PN172-239'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=241.5:
					return 'PN241-241.5'
				else:
					return 'PN101-245'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1009.5:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=497.0:
					return 'PN451-497'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=519.0:
					return 'PN500-519'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=597.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=605.0:
					return 'PN597-605'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=779.0:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=611.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=649.0:
						return 'PN611-649'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=661.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=694.0:
						return 'PN661-694'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=695.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=779.0:
						return 'PN695-779'
					else:
						return 'PN610-779'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=820.0:
					return 'PN801-820'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=821.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=840.0:
					return 'PN821-840'
				elif (loc=='PN841') or (len(loc)>5 and loc[:5]=='PN841' and not loc[5].isdigit()):
					return 'PN841'
				elif (loc=='PN842') or (len(loc)>5 and loc[:5]=='PN842' and not loc[5].isdigit()):
					return 'PN842'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=884.0:
					return 'PN851-(884)'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=905.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1008.0:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
						return 'PN980-995'
					else:
						return 'PN(905)-1008'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1008.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1009.5:
					return 'PN1008.2-1009.5'
				else:
					return 'PN441-1009.5'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1525.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1031.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1049.0:
					return 'PN1031-1049'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1065.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1085.0:
					return 'PN1065-1085'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1279.0:
					return 'PN1110-1279'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1333.0:
					return 'PN1301-1333'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1347.0:
					return 'PN1341-1347'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1389.0:
					return 'PN1351-1389'
				else:
					return 'PN1010-1525'
			elif (loc=='PN1530') or (len(loc)>6 and loc[:6]=='PN1530' and not loc[6].isdigit()):
				return 'PN1530'
			elif (loc=='PN1551') or (len(loc)>6 and loc[:6]=='PN1551' and not loc[6].isdigit()):
				return 'PN1551'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1560.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1590.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1585.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1589.0:
					return 'PN1585-1589'
				else:
					return 'PN1560-1590'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3307.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1635.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1650.0:
					return 'PN1635-1650'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1693.0:
					return 'PN1660-1693'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1861.0:
					return 'PN1720-1861'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1865.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1988.0:
					return 'PN1865-1988'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1990.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1992.92:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1991.9:
						return 'PN1991-1991.9'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1992.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1992.92:
						return 'PN1992-1992.92'
					else:
						return 'PN1990-1992.92'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1992.93 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1992.95:
					return 'PN1992.93-1992.95'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1993.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1999.0:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1997.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1997.85:
						return 'PN1997-1997.85'
					else:
						return 'PN1993-1999'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3307.0:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2061.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2071.0:
						return 'PN2061-2071'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2085.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2091.0:
						return 'PN2085-2091'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2193.0:
						return 'PN2131-2193'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2219.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3030.0:
						return 'PN2219.3-3030'
					elif (loc=='PN3035') or (len(loc)>6 and loc[:6]=='PN3035' and not loc[6].isdigit()):
						return 'PN3035'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3171.0:
						return 'PN3151-3171'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3191.0:
						return 'PN3175-3191'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3203.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3299.0:
						return 'PN3203-3299'
					else:
						return 'PN2000-3307'
				else:
					return 'PN1600-3307'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3311.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3503.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3329.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3352.0:
					return 'PN3329-3352'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3355.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3383.0:
					return 'PN3355-3383'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3427.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3448.0:
					return 'PN3427-3448'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3503.0:
					return 'PN3451-3503'
				else:
					return 'PN3311-3503'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4355.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4071.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4095.0:
					return 'PN4071-4095'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4191.0:
					return 'PN4177-4191'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4321.0:
					return 'PN4199-4321'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4355.0:
					return 'PN4331-4355'
				else:
					return 'PN4001-4355'
			elif (loc=='PN4390') or (len(loc)>6 and loc[:6]=='PN4390' and not loc[6].isdigit()):
				return 'PN4390'
			elif (loc=='PN4400') or (len(loc)>6 and loc[:6]=='PN4400' and not loc[6].isdigit()):
				return 'PN4400'
			elif (loc=='PN4500') or (len(loc)>6 and loc[:6]=='PN4500' and not loc[6].isdigit()):
				return 'PN4500'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4699.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5650.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4735.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4748.0:
					return 'PN4735-4748'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4775.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4784.0:
					return 'PN4775-4784'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4825.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4830.0:
					return 'PN4825-4830'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4832.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4836.0:
					return 'PN4832-4836'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5648.0:
					return 'PN4840-5648'
				elif (loc=='PN5650') or (len(loc)>6 and loc[:6]=='PN5650' and not loc[6].isdigit()):
					return 'PN5650'
				else:
					return 'PN4699-5650'
			elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6010.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6790.0:
				if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6066.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6069.0:
					return 'PN6066-6069'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6095.0:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6081.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6084.0:
						return 'PN6081-6084'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6086.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6089.0:
						return 'PN6086-6089'
					elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6090.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6110.0:
						return 'PN6090-6110'
					else:
						return 'PN6080-6095'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6099.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6110.0:
					return 'PN6099-6110'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6110.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6120.0:
					return 'PN6110.5-6120'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6120.15 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6120.95:
					return 'PN6120.15-6120.95'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6129.0:
					return 'PN6121-6129'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6140.0:
					return 'PN6130-6140'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6141.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6145.0:
					return 'PN6141-6145'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6146.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6231.0:
					if len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6157.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6222.0:
						return 'PN6157-6222'
					else:
						return 'PN6146.5-6231'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6233.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6238.0:
					return 'PN6233-6238'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6244.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6246.0:
					return 'PN6244-6246'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6249.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6258.0:
					return 'PN6249-6258'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6259.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6268.0:
					return 'PN6259-6268'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6269.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6278.0:
					return 'PN6269-6278'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6279.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6288.0:
					return 'PN6279-6288'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6288.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6298.0:
					return 'PN6288.5-6298'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6299.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6308.0:
					return 'PN6299-6308'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6309.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6318.0:
					return 'PN6309-6318'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6319.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6328.0:
					return 'PN6319-6328'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6329.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6338.0:
					return 'PN6329-6338'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6348.0:
					return 'PN6340-6348'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6348.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6358.0:
					return 'PN6348.5-6358'
				elif (loc=='PN6361') or (len(loc)>6 and loc[:6]=='PN6361' and not loc[6].isdigit()):
					return 'PN6361'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6366.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6377.0:
					return 'PN6366-6377'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6525.0:
					return 'PN6400-6525'
				elif len(loc)>2 and loc[:2]=='PN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6790.0:
					return 'PN6700-6790'
				else:
					return 'PN6010-6790'
			else:
				return 'PN1-6790'
		elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3999.0:
			if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=771.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=150.0:
					return 'PQ1-150'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=221.0:
					return 'PQ151-221'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=226.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=317.0:
					return 'PQ226-317'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=491.0:
					return 'PQ400-491'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=591.0:
					return 'PQ500-591'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=771.0:
					return 'PQ601-771'
				else:
					return 'PQ1-771'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=781.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=841.0:
				return 'PQ(781)-(841)'
			elif (loc=='PQ845') or (len(loc)>5 and loc[:5]=='PQ845' and not loc[5].isdigit()):
				return 'PQ845'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1297.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1145.0:
					return 'PQ1100-1145'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1193.0:
					return 'PQ1160-1193'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1241.0:
					return 'PQ1211-1241'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1243.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1297.0:
					return 'PQ1243-1297'
				else:
					return 'PQ1100-1297'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1595.0:
				return 'PQ1300-1595'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1391.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1545.0:
					return 'PQ1411-1545'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1595.0:
					return 'PQ1551-1595'
				else:
					return 'PQ1300-1391'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2726.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1709.0:
					return 'PQ1600-1709'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1710.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1935.0:
					return 'PQ1710-1935'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1947.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2147.0:
					return 'PQ1947-2147'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2149.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2551.0:
					return 'PQ2149-2551'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2651.0:
					return 'PQ2600-2651'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2686.0:
					return 'PQ2660-2686'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2726.0:
					return 'PQ2700-2726'
				else:
					return 'PQ1600-2726'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3999.0:
				return 'PQ3800-3999'
			else:
				return 'PQ1-3999'
		elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
			if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4199.5:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4063.0:
					return 'PQ4001-4063'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4064.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4075.0:
					return 'PQ4064-4075'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4077.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4088.0:
					return 'PQ4077-4088'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4091.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4131.0:
					return 'PQ4091-(4131)'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4133.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4160.0:
					return 'PQ4133-4160'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4185.0:
					return 'PQ4161-4185'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4186.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4199.0:
					return 'PQ(4186)-(4199)'
				elif (loc=='PQ4199.5') or (len(loc)>8 and loc[:8]=='PQ4199.5' and not loc[8].isdigit()):
					return 'PQ4199.5'
				else:
					return 'PQ4001-4199.5'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4263.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4204.0:
					return 'PQ4201-4204'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4206.0:
					return 'PQ4205-4206'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4207.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4225.0:
					return 'PQ4207-4225'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4227.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4245.0:
					return 'PQ4227-4245'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4247.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4263.0:
					return 'PQ4247-4263'
				else:
					return 'PQ4201-4263'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4265.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4556.0:
				return 'PQ4265-4556'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4664.0:
				return 'PQ4561-4664'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4675.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4734.0:
				return 'PQ4675-4734'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4851.0:
				return 'PQ4800-4851'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4860.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4886.0:
				return 'PQ4860-4886'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4926.0:
				return 'PQ4900-4926'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5999.0:
				return 'PQ5901-5999'
			else:
				return 'PQ4001-5999'
		elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8929.0:
			if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6168.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6056.0:
					if (loc=='PQ6056') or (len(loc)>6 and loc[:6]=='PQ6056' and not loc[6].isdigit()):
						return 'PQ6056'
					else:
						return 'PQ6001-6056'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6058.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6060.0:
					return 'PQ6058-6060'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6061.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6073.0:
					return 'PQ(6061)-6073'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6075.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6098.0:
					return 'PQ6075-6098'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6098.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6129.0:
					return 'PQ6098.7-6129'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6153.0:
					return 'PQ6131-6153'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6167.0:
					return 'PQ(6155)-(6167)'
				elif (loc=='PQ6168') or (len(loc)>6 and loc[:6]=='PQ6168' and not loc[6].isdigit()):
					return 'PQ6168'
				else:
					return 'PQ6001-6168'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6269.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6174.9:
					return 'PQ6170-6174.9'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6174.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6215.0:
					return 'PQ6174.95-6215'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6217.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6241.0:
					return 'PQ6217-(6241)'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6247.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6264.0:
					return 'PQ6247-6264'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6265.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6269.0:
					return 'PQ(6265)-6269'
				else:
					return 'PQ6170-6269'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6271.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6498.0:
				return 'PQ6271-6498'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6576.0:
				return 'PQ6500-6576'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6647.0:
				return 'PQ6600-6647'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6676.0:
				return 'PQ6650-6676'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6726.0:
				return 'PQ6700-6726'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8929.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7081.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8560.0:
					return 'PQ7081-8560'
				else:
					return 'PQ7000-8929'
			else:
				return 'PQ6001-8929'
		elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
			if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9129.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9034.0:
					return 'PQ9000-9034'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9055.0:
					return 'PQ9035-9055'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9061.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9081.0:
					return 'PQ9061-9081'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9083.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9095.0:
					return 'PQ9083-9095'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9097.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9119.0:
					return 'PQ9097-9119'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9128.0:
					return 'PQ(9121)-(9128)'
				elif (loc=='PQ9129') or (len(loc)>6 and loc[:6]=='PQ9129' and not loc[6].isdigit()):
					return 'PQ9129'
				else:
					return 'PQ9000-9129'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9188.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9144.0:
					if (loc=='PQ9137') or (len(loc)>6 and loc[:6]=='PQ9137' and not loc[6].isdigit()):
						return 'PQ9137'
					else:
						return 'PQ9131-9144'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9149.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9163.0:
					return 'PQ9149-9163'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9164.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9170.0:
					return 'PQ9164-9170'
				elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9172.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9188.0:
					return 'PQ9172-9188'
				else:
					return 'PQ9131-9188'
			elif (loc=='PQ9189') or (len(loc)>6 and loc[:6]=='PQ9189' and not loc[6].isdigit()):
				return 'PQ9189'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9255.0:
				return 'PQ9191-9255'
			elif (loc=='PQ9261') or (len(loc)>6 and loc[:6]=='PQ9261' and not loc[6].isdigit()):
				return 'PQ9261'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9262.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9288.0:
				return 'PQ9262-9288'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9326.0:
				return 'PQ9300-9326'
			elif len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				if len(loc)>2 and loc[:2]=='PQ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9698.436:
					return 'PQ9500-9698.436'
				else:
					return 'PQ9400-9999'
			else:
				return 'PQ9000-9999'
		elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9680.0:
			if len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=56.0:
				return 'PR1-56'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=57.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.0:
				return 'PR57-78'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=116.0:
				return 'PR111-116'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=138.5:
				return 'PR125-(138.5)'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=488.0:
				if len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=236.0:
					return 'PR171-236'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=369.0:
					return 'PR251-369'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=488.0:
					if len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=429.0:
						return 'PR421-(429)'
					elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=431.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=439.0:
						return 'PR431-(439)'
					elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
						return 'PR441-(449)'
					elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=469.0:
						return 'PR451-(469)'
					elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=479.0:
						return 'PR471-(479)'
					elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=488.0:
						return 'PR481-488'
					else:
						return 'PR401-488'
				else:
					return 'PR161-488'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=614.0:
				if len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=614.0:
					return 'PR521-614'
				else:
					return 'PR500-614'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=744.0:
				if len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=641.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=744.0:
					return 'PR641-744'
				else:
					return 'PR621-744'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
				if len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=767.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=818.0:
					return 'PR767-818'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=821.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=890.0:
					return 'PR821-890'
				else:
					return 'PR750-890'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=907.2:
				return 'PR901-907.2'
			elif (loc=='PR908') or (len(loc)>5 and loc[:5]=='PR908' and not loc[5].isdigit()):
				return 'PR908'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=911.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=918.0:
				return 'PR911-918'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=921.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=928.0:
				return 'PR921-928'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=931.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=938.0:
				return 'PR931-938'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=981.0:
				return 'PR(951)-981'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1098.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1369.0:
				if (loc=='PR1110') or (len(loc)>6 and loc[:6]=='PR1110' and not loc[6].isdigit()):
					return 'PR1110'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1119.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1151.0:
					return 'PR1119-1151'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1228.0:
					return 'PR1170-1228'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1273.0:
					return 'PR1241-1273'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1309.0:
					return 'PR1281-1309'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1329.0:
					return 'PR1321-1329'
				elif (loc=='PR1330') or (len(loc)>6 and loc[:6]=='PR1330' and not loc[6].isdigit()):
					return 'PR1330'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1349.0:
					return 'PR1341-1349'
				elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1369.0:
					return 'PR1361-1369'
				else:
					return 'PR1098-1369'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1799.0:
				return 'PR1490-1799'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1803.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2165.0:
				if len(loc)>=2 and loc[:2]=='PR':
					return 'PR'
				else:
					return 'PR1803-2165'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2199.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3195.0:
				return 'PR2199-3195'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3291.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3785.0:
				return 'PR3291-3785'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5990.0:
				return 'PR3991-5990'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6049.0:
				return 'PR6000-6049'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6076.0:
				return 'PR6050-6076'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6126.0:
				return 'PR6100-6126'
			elif len(loc)>2 and loc[:2]=='PR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8309.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9680.0:
				return 'PR8309-9680'
			else:
				return 'PR1-9680'
		elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3576.0:
			if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=126.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=138.0:
				return 'PS126-138'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=147.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=152.0:
				return 'PS147-152'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=163.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.0:
				return 'PS163-173'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=231.0:
				if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
					return 'PS185-195'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=217.0:
					return 'PS201-217'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=228.0:
					return 'PS221-228'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=229.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=231.0:
					return 'PS229-231'
				else:
					return 'PS185-231'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=286.0:
				if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=255.0:
					return 'PS241-255'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=261.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=267.0:
					return 'PS261-267'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=271.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=285.0:
					return 'PS271-285'
				else:
					return 'PS241-286'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=326.0:
				return 'PS301-326'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=353.0:
				return 'PS330-353'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
				if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
					return 'PS370-380'
				else:
					return 'PS360-380'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=408.2:
				return 'PS400-408.2'
			elif (loc=='PS409') or (len(loc)>5 and loc[:5]=='PS409' and not loc[5].isdigit()):
				return 'PS409'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=419.0:
				return 'PS410-419'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=429.0:
				return 'PS420-429'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=439.0:
				return 'PS430-439'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=478.0:
				return 'PS(451)-478'
			elif (loc=='PS490') or (len(loc)>5 and loc[:5]=='PS490' and not loc[5].isdigit()):
				return 'PS490'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.0:
				if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=530.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=536.3:
					return 'PS530-536.3'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=537.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=574.0:
					if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=538.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=549.0:
						return 'PS538-549'
					elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=559.0:
						return 'PS551-559'
					elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=572.0:
						return 'PS561-572'
					else:
						return 'PS537-574'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=580.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=619.0:
					if (loc=='PS593') or (len(loc)>5 and loc[:5]=='PS593' and not loc[5].isdigit()):
						return 'PS593'
					elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=617.0:
						return 'PS601-617'
					else:
						return 'PS580-619'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=623.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=635.0:
					return 'PS623-(635)'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=642.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=659.5:
					if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=659.2:
						return 'PS651-659.2'
					else:
						return 'PS642-659.5'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=668.2:
					if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=666.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=668.2:
						return 'PS666-668.2'
					else:
						return 'PS660-668.2'
				elif (loc=='PS669') or (len(loc)>5 and loc[:5]=='PS669' and not loc[5].isdigit()):
					return 'PS669'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=678.2:
					return 'PS670-678.2'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.0:
					return 'PS680-689'
				else:
					return 'PS501-689'
			elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3576.0:
				if len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=893.0:
					return 'PS700-893'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3390.0:
					return 'PS991-(3390)'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3549.0:
					return 'PS3500-3549'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3576.0:
					return 'PS3550-3576'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3626.0:
					return 'PS3600-3626'
				elif len(loc)>2 and loc[:2]=='PS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8599.0:
					return 'PS(8001-8599)'
				else:
					return 'PS700-3576'
			else:
				return 'PS1-3576'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4897.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=80.0:
				return 'PT1-80'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=83.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=873.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=230.0:
					return 'PT175-230'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=236.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=405.0:
					return 'PT236-405'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=597.0:
					return 'PT500-597'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=605.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=709.0:
					return 'PT605-709'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=871.0:
					return 'PT711-871'
				else:
					return 'PT83-(873)'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=881.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=923.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=937.0:
					return 'PT923-937'
				else:
					return 'PT(881)-(951)'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1479.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1141.0:
					return 'PT1100-1141'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1241.0:
					return 'PT1151-1241'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1299.0:
					return 'PT1251-1299'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1360.0:
					return 'PT1301-1360'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1374.0:
					return 'PT1371-(1374)'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1375.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1479.0:
					return 'PT1375-1479'
				else:
					return 'PT1100-1479'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2688.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1695.0:
					return 'PT1501-1695'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1797.0:
					return 'PT1701-1797'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2592.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1891.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2239.0:
						return 'PT1891-2239'
					else:
						return 'PT1799-2592'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2653.0:
					return 'PT2600-2653'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2660.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2688.0:
					return 'PT2660-2688'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2728.0:
					return 'PT2700-2728'
				else:
					return 'PT1501-2688'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3971.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3746.0:
					return 'PT3701-3746'
				else:
					return 'PT3701-3971'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4897.0:
				return 'PT4801-4897'
			else:
				return 'PT1-4897'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5980.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5348.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5112.0:
					return 'PT5001-5112'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5121.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5185.0:
					return 'PT5121-5185'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5243.0:
					return 'PT5201-5243'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5295.0:
					return 'PT5250-5295'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5348.0:
					return 'PT5300-5348'
				else:
					return 'PT5001-5348'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5395.0:
				return 'PT(5351)-5395'
			elif (loc=='PT5398') or (len(loc)>6 and loc[:6]=='PT5398' and not loc[6].isdigit()):
				return 'PT5398'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5547.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5409.0:
					return 'PT5400-5409'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5414.0:
					return 'PT5410-5414'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5460.0:
					return 'PT5420-5460'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5488.0:
					return 'PT5470-5488'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5515.0:
					return 'PT5490-5515'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5517.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5547.0:
					return 'PT5517-5547'
				else:
					return 'PT5400-5547'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5555.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5881.36:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5555.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5595.0:
					return 'PT5555-5595'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5739.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5637.0:
						return 'PT5620-5637'
					elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5732.0:
						return 'PT5700-5732'
					else:
						return 'PT5600-5739'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5880.0:
					return 'PT5800-5880'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5881.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5881.36:
					return 'PT5881-5881.36'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5882.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5882.36:
					return 'PT5882-5882.36'
				else:
					return 'PT5555-5881.36'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5980.0:
				return 'PT5901-5980'
			else:
				return 'PT5001-5980'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6467.36:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6199.0:
				return 'PT6000-6199'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6230.0:
				return 'PT(6200)-(6230)'
			elif (loc=='PT6250') or (len(loc)>6 and loc[:6]=='PT6250' and not loc[6].isdigit()):
				return 'PT6250'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6397.0:
				return 'PT6300-6397'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6467.36:
				return 'PT6400-6467.36'
			else:
				return 'PT6000-6467.36'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6593.36:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6530.0:
				return 'PT6500-6530'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6545.0:
				return 'PT(6540)-6545'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6575.0:
				return 'PT6550-6575'
			elif (loc=='PT6580') or (len(loc)>6 and loc[:6]=='PT6580' and not loc[6].isdigit()):
				return 'PT6580'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6593.36:
				return 'PT6590-6593.36'
			else:
				return 'PT6500-6593.36'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7099.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7087.0:
				return 'PT7001-7087'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7088.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7089.0:
				return 'PT(7088)-(7089)'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7090.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7099.0:
				return 'PT7090-7099'
			else:
				return 'PT7001-7099'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7338.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7211.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7176.0:
					return 'PT7170-7176'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7211.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7181.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7193.0:
						return 'PT7181-7193'
					elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7211.0:
						return 'PT7195-7211'
					else:
						return 'PT7177-7211'
				else:
					return 'PT7101-7211'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7262.5:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7230.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7252.0:
					return 'PT7230-7252'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7255.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7262.5:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7261.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7262.5:
						return 'PT7261-7262.5'
					else:
						return 'PT7255-7262.5'
				else:
					return 'PT7220-7262.5'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7263.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7296.0:
				return 'PT7263-7296'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7298.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7309.0:
				return 'PT7298-7309'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7312.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7318.0:
				return 'PT7312-7318'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7326.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7338.0:
				return 'PT7326-7338'
			else:
				return 'PT7101-7338'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7550.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7418.0:
				return 'PT7351-7418'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7438.0:
				return 'PT(7420)-(7438)'
			elif (loc=='PT7442') or (len(loc)>6 and loc[:6]=='PT7442' and not loc[6].isdigit()):
				return 'PT7442'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7495.0:
				return 'PT7450-7495'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7511.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7501.0:
					return 'PT7500-7501'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7511.0:
					return 'PT7510-7511'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7512.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7513.0:
					return 'PT7512-7513'
				else:
					return 'PT7500-7511'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7550.0:
				return 'PT7520-7550'
			else:
				return 'PT7351-7550'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7599.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7592.0:
				return 'PT7581-7592'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7593.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7596.5:
				return 'PT7593-7596.5'
			elif (loc=='PT7597') or (len(loc)>6 and loc[:6]=='PT7597' and not loc[6].isdigit()):
				return 'PT7597'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7598.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7599.0:
				return 'PT7598-7599'
			else:
				return 'PT7581-7599'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8260.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7869.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7721.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7762.0:
					return 'PT7721-7762'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7794.0:
					return 'PT7770-7794'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7832.0:
					return 'PT7800-7832'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7835.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7869.0:
					return 'PT7835-7869'
				else:
					return 'PT7601-7869'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7930.0:
				return 'PT(7900)-7930'
			elif (loc=='PT7935') or (len(loc)>6 and loc[:6]=='PT7935' and not loc[6].isdigit()):
				return 'PT7935'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7945.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8046.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7975.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7994.0:
					return 'PT7975-7994'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7999.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8020.0:
					return 'PT7999-8020'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8046.0:
					return 'PT8021-8046'
				else:
					return 'PT7945-8046'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8177.36:
				if (loc=='PT8050') or (len(loc)>6 and loc[:6]=='PT8050' and not loc[6].isdigit()):
					return 'PT8050'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8060.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8098.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8070.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8094.5:
						return 'PT8070-8094.5'
					else:
						return 'PT8060-8098'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8167.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8102.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8120.0:
						return 'PT8102-8120'
					elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8145.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8157.0:
						return 'PT8145-8157'
					else:
						return 'PT8100-8167'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8174.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8175.0:
					return 'PT8174-8175'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8176.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8176.36:
					return 'PT8176-8176.36'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8177.36:
					return 'PT8177-8177.36'
				else:
					return 'PT8050-8177.36'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8260.0:
				return 'PT8205-8260'
			else:
				return 'PT7601-8260'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9155.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8574.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8456.0:
					return 'PT(8420)-8456'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8489.0:
					return 'PT8460-8489'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8534.0:
					return 'PT8500-8534'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8574.0:
					return 'PT8540-8574'
				else:
					return 'PT8301-8574'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8637.0:
				return 'PT(8600)-(8637)'
			elif (loc=='PT8640') or (len(loc)>6 and loc[:6]=='PT8640' and not loc[6].isdigit()):
				return 'PT8640'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8733.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8675.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8695.0:
					return 'PT8675-8695'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8699.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8718.0:
					return 'PT8699-8718'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8719.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8723.0:
					return 'PT8719-8723'
				else:
					return 'PT8650-8733'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8952.36:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8775.0:
					return 'PT8750-8775'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8942.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8900.0:
						return 'PT8851-8900'
					else:
						return 'PT8800-8942'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8949.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8950.0:
					return 'PT8949-8950'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8951.36:
					return 'PT8951-8951.36'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8952.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8952.36:
					return 'PT8952-8952.36'
				else:
					return 'PT8750-8952.36'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9094.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9019.0:
					return 'PT9000-9019'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9055.0:
					return 'PT9025-9055'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9064.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9094.0:
					return 'PT9064-9094'
				else:
					return 'PT9000-9094'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9155.0:
				return 'PT9100-9155'
			else:
				return 'PT8301-9155'
		elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
			if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9499.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9370.0:
					return 'PT9320-9370'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9375.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9404.0:
					return 'PT9375-9404'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9415.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9449.0:
					return 'PT9415-9449'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9499.0:
					return 'PT9460-9499'
				else:
					return 'PT9201-9499'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9509.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9542.0:
				return 'PT(9509)-(9542)'
			elif (loc=='PT9544') or (len(loc)>6 and loc[:6]=='PT9544' and not loc[6].isdigit()):
				return 'PT9544'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9547.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9639.0:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9565.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9570.0:
					return 'PT9565-9570'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9580.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9599.0:
					return 'PT9580-9599'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9605.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9625.0:
					return 'PT9605-9625'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9626.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9639.0:
					return 'PT9626-9639'
				else:
					return 'PT9547-9639'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9877.36:
				if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9651.0:
					return 'PT9650-9651'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9674.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9715.0:
					return 'PT9674-9715'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9850.0:
					if len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9759.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9771.0:
						return 'PT9759-9771'
					elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9817.0:
						return 'PT9800-9817'
					elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9838.0:
						return 'PT9820-9838'
					else:
						return 'PT9725-9850'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9870.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9875.0:
					return 'PT9870-9875'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9876.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9876.36:
					return 'PT9876-9876.36'
				elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9877.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9877.36:
					return 'PT9877-9877.36'
				else:
					return 'PT9650-9877.36'
			elif len(loc)>2 and loc[:2]=='PT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9999.0:
				return 'PT9950-9999'
			else:
				return 'PT9201-9999'
		elif len(loc)>2 and loc[:2]=='PZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
			if len(loc)>2 and loc[:2]=='PZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4.0:
				return 'PZ(1)-(4)'
			elif len(loc)>2 and loc[:2]=='PZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
				return 'PZ5-90'
			else:
				return 'PZ(1)-90'
		else:
			return 'P'
	elif loc[0]=='Q':
		if len(loc)>1 and loc[:1]=='Q' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
			if len(loc)>1 and loc[:1]=='Q' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=295.0:
				return 'Q1-295'
			elif len(loc)>1 and loc[:1]=='Q' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
				if len(loc)>1 and loc[:1]=='Q' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
					return 'Q350-390'
				else:
					return 'Q300-390'
			else:
				return 'Q1-390'
		elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.0:
			if len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=43.0:
				return 'QA1-43'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=47.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
				return 'QA47-59'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=90.0:
				if len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.95:
					return 'QA75-76.95'
				elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.95:
					if len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=76.75 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.765:
						return 'QA76.75-76.765'
					else:
						return 'QA75.5-76.95'
				else:
					return 'QA71-90'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=145.0:
				return 'QA101-(145)'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=272.5:
				return 'QA150-272.5'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=273.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=280.0:
				return 'QA273-280'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=299.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=433.0:
				return 'QA299.6-433'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
				return 'QA440-699'
			elif len(loc)>2 and loc[:2]=='QA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.0:
				return 'QA801-939'
			else:
				return 'QA1-939'
		elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
			if len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=139.0:
				return 'QB1-139'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=140.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=237.0:
				return 'QB140-237'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=275.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=343.0:
				return 'QB275-343'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=349.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=421.0:
				return 'QB349-421'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=455.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=456.0:
				return 'QB455-456'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=466.0:
				return 'QB460-466'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=468.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=480.0:
				return 'QB468-480'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=495.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=903.0:
				if len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
					return 'QB500.5-785'
				elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=903.0:
					return 'QB799-903'
				else:
					return 'QB495-903'
			elif len(loc)>2 and loc[:2]=='QB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
				return 'QB980-991'
			else:
				return 'QB1-991'
		elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=75.0:
				return 'QC1-75'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=81.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=114.0:
				return 'QC81-114'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=168.85:
				return 'QC120-168.85'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=197.0:
				return 'QC170-197'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=246.0:
				return 'QC221-246'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=338.5:
				if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=310.15 and float(re.findall(r'\d+\.?\d*',loc)[0])<=319.0:
					return 'QC310.15-319'
				else:
					return 'QC251-338.5'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=467.0:
				if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=467.0:
					return 'QC450-467'
				else:
					return 'QC350-467'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=474.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=496.9:
				return 'QC474-496.9'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=766.0:
				if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=721.0:
					if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=669.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=675.8:
						return 'QC669-675.8'
					elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=676.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=678.6:
						return 'QC676-678.6'
					elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=715.4:
						return 'QC701-715.4'
					elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=717.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=718.8:
						return 'QC717.6-718.8'
					else:
						return 'QC501-(721)'
				elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=766.0:
					return 'QC750-766'
				else:
					return 'QC501-766'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=798.0:
				if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=793.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=793.5:
					return 'QC793-793.5'
				elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=794.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=798.0:
					return 'QC794.95-798'
				else:
					return 'QC770-798'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=809.0:
				return 'QC801-809'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=811.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=849.0:
				return 'QC811-849'
			elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=974.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=976.0:
					return 'QC974.5-976'
				elif len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
					if len(loc)>2 and loc[:2]=='QC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=994.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
						return 'QC994.95-999'
					else:
						return 'QC980-999'
				else:
					return 'QC851-999'
			else:
				return 'QC1-999'
		elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=65.0:
				return 'QD1-65'
			elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=142.0:
				return 'QD71-142'
			elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=146.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=197.0:
				return 'QD146-197'
			elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=441.0:
				if len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=415.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=436.0:
					return 'QD415-436'
				else:
					return 'QD241-441'
			elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=801.0:
				if len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=625.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=655.0:
					return 'QD625-655'
				elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=731.0:
					return 'QD701-731'
				else:
					return 'QD450-801'
			elif len(loc)>2 and loc[:2]=='QD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				return 'QD901-999'
			else:
				return 'QD1-999'
		elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=996.5:
			if len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=350.62:
				return 'QE1-350.62'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=399.2:
				return 'QE351-399.2'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'QE420-499'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.5:
				if len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=545.0:
					return 'QE521-545'
				elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=613.5:
					return 'QE601-613.5'
				else:
					return 'QE500-639.5'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
				return 'QE640-699'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=760.0:
				return 'QE701-760'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=760.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=899.2:
				return 'QE760.8-899.2'
			elif len(loc)>2 and loc[:2]=='QE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=996.5:
				return 'QE901-996.5'
			else:
				return 'QE1-996.5'
		elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=278.5:
			if len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.5:
				return 'QH1-(199.5)'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=278.5:
				return 'QH201-278.5'
			else:
				return 'QH1-278.5'
		elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.5:
			if len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=359.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=425.0:
				return 'QH359-425'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=426.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=470.0:
				return 'QH426-470'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=471.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
				return 'QH471-489'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=531.0:
				return 'QH501-531'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=549.5:
				return 'QH540-549.5'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=573.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=671.0:
				return 'QH573-671'
			elif len(loc)>2 and loc[:2]=='QH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=705.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.5:
				return 'QH705-705.5'
			else:
				return 'QH301-705.5'
		elif len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
			if len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=474.5:
				return 'QK1-474.5'
			elif len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=474.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.0:
				if len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=494.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=494.5:
					return 'QK494-494.5'
				elif (loc=='QK495') or (len(loc)>5 and loc[:5]=='QK495' and not loc[5].isdigit()):
					return 'QK495'
				else:
					return 'QK474.8-495'
			elif len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=504.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=638.0:
				return 'QK504-(638)'
			elif len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=707.0:
				return 'QK640-(707)'
			elif len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=710.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=899.0:
				return 'QK710-899'
			elif len(loc)>2 and loc[:2]=='QK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
				return 'QK900-989'
			else:
				return 'QK1-989'
		elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
			if len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=355.0:
				return 'QL1-355'
			elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.82:
				if len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.82:
					return 'QL461-599.82'
				else:
					return 'QL360-599.82'
			elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=605.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=739.8:
				if len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=614.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.8:
					return 'QL614-639.8'
				elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=669.3:
					return 'QL640-669.3'
				elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=671.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
					return 'QL671-699'
				elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=739.8:
					return 'QL700-739.8'
				else:
					return 'QL605-739.8'
			elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=795.0:
				if len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=795.0:
					return 'QL791-795'
				else:
					return 'QL750-795'
			elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.5:
				return 'QL799-799.5'
			elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=950.9:
				return 'QL801-950.9'
			elif len(loc)>2 and loc[:2]=='QL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
				return 'QL951-991'
			elif len(loc)>2 and loc[:2]=='QM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
				return 'QM1-695'
			elif len(loc)>2 and loc[:2]=='QM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=511.0:
				return 'QM1-511'
			elif len(loc)>2 and loc[:2]=='QM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=531.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=549.0:
				return 'QM531-549'
			elif len(loc)>2 and loc[:2]=='QM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=577.8:
				return 'QM550-577.8'
			elif len(loc)>2 and loc[:2]=='QM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
				return 'QM601-695'
			else:
				return 'QL1-991'
		elif len(loc)>2 and loc[:2]=='QP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=981.0:
			if len(loc)>2 and loc[:2]=='QP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=345.0:
				return 'QP1-345'
			elif len(loc)>2 and loc[:2]=='QP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.0:
				return 'QP351-495'
			elif len(loc)>2 and loc[:2]=='QP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=801.0:
				return 'QP501-801'
			elif len(loc)>2 and loc[:2]=='QP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=981.0:
				return 'QP(901)-(981)'
			else:
				return 'QP1-(981)'
		elif len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=502.0:
			if len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=74.5:
				return 'QR1-74.5'
			elif len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.5:
				return 'QR75-99.5'
			elif len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.8:
				return 'QR99.6-99.8'
			elif len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.0:
				return 'QR100-130'
			elif (loc=='QR171') or (len(loc)>5 and loc[:5]=='QR171' and not loc[5].isdigit()):
				return 'QR171'
			elif len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=189.5:
				return 'QR180-189.5'
			elif len(loc)>2 and loc[:2]=='QR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=355.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=502.0:
				return 'QR355-502'
			else:
				return 'QR1-502'
		else:
			return 'Q'
	elif loc[0]=='R':
		if len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=920.0:
			if len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.5:
				return 'R5-130.5'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=687.0:
				return 'R131-687'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=697.0:
				return 'R690-697'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=702.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=703.0:
				return 'R702-703'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=713.97:
				return 'R711-713.97'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=722.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=722.32:
				return 'R722-722.32'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=723.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=726.0:
				return 'R723-726'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=726.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=726.8:
				return 'R726.5-726.8'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=727.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=727.5:
				return 'R727-727.5'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=728.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=733.0:
				return 'R728-733'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=735.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=854.0:
				return 'R735-854'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=855.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=855.5:
				return 'R855-855.5'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=856.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=857.0:
				return 'R856-857'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=858.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=859.7:
				return 'R858-859.7'
			elif (loc=='R864') or (len(loc)>4 and loc[:4]=='R864' and not loc[4].isdigit()):
				return 'R864'
			elif len(loc)>1 and loc[:1]=='R' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=895.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=920.0:
				return 'R895-920'
			else:
				return 'R5-920'
		elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1270.0:
			if len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=418.5:
				if (loc=='RA396') or (len(loc)>5 and loc[:5]=='RA396' and not loc[5].isdigit()):
					return 'RA396'
				elif (loc=='RA398') or (len(loc)>5 and loc[:5]=='RA398' and not loc[5].isdigit()):
					return 'RA398'
				elif (loc=='RA399') or (len(loc)>5 and loc[:5]=='RA399' and not loc[5].isdigit()):
					return 'RA399'
				elif (loc=='RA405') or (len(loc)>5 and loc[:5]=='RA405' and not loc[5].isdigit()):
					return 'RA405'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=407.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=409.5:
					return 'RA407-409.5'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=410.9:
					return 'RA410-410.9'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=415.0:
					return 'RA411-415'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=418.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=418.5:
					return 'RA418-418.5'
				else:
					return 'RA1-418.5'
			elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=790.95:
				if len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=428.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=428.5:
					return 'RA428-428.5'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.87:
					return 'RA440-440.87'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=565.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=600.0:
					return 'RA565-600'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=602.0:
					return 'RA601-602'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=604.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=618.0:
					return 'RA604-618'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=619.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=637.0:
					return 'RA619-637'
				elif (loc=='RA638') or (len(loc)>5 and loc[:5]=='RA638' and not loc[5].isdigit()):
					return 'RA638'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=639.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=642.0:
					return 'RA639-642'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=643.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.0:
					return 'RA643-645'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=645.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.37:
					return 'RA645.3-645.37'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=645.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.9:
					return 'RA645.5-645.9'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=646.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=648.3:
					return 'RA646-648.3'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=648.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=767.0:
					return 'RA648.5-767'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=771.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=771.7:
					return 'RA771-771.7'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=773.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=788.0:
					return 'RA773-788'
				elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=790.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=790.95:
					return 'RA790-790.95'
				else:
					return 'RA421-790.95'
			elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=791.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=954.0:
				return 'RA791-954'
			elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=960.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1000.5:
				return 'RA960-1000.5'
			elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1171.0:
				return 'RA1001-1171'
			elif len(loc)>2 and loc[:2]=='RA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1270.0:
				return 'RA1190-1270'
			else:
				return 'RA1-1270'
		elif len(loc)>2 and loc[:2]=='RB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=214.0:
			if len(loc)>2 and loc[:2]=='RB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=17.0:
				return 'RB1-17'
			elif len(loc)>2 and loc[:2]=='RB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=24.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=33.0:
				return 'RB24-33'
			elif len(loc)>2 and loc[:2]=='RB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=37.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=56.5:
				return 'RB37-56.5'
			elif (loc=='RB57') or (len(loc)>4 and loc[:4]=='RB57' and not loc[4].isdigit()):
				return 'RB57'
			elif len(loc)>2 and loc[:2]=='RB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=127.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=150.0:
				return 'RB127-150'
			elif len(loc)>2 and loc[:2]=='RB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=214.0:
				return 'RB151-214'
			else:
				return 'RB1-214'
		elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=31.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1245.0:
			if len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=52.0:
				return 'RC49-52'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=78.7:
				return 'RC71-78.7'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=81.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=82.0:
				return 'RC81-82'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=86.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=88.9:
				return 'RC86-88.9'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=103.0:
				return 'RC91-103'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=216.0:
				return 'RC109-216'
			elif (loc=='RC251') or (len(loc)>5 and loc[:5]=='RC251' and not loc[5].isdigit()):
				return 'RC251'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=254.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=282.0:
				return 'RC254-282'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=306.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=320.5:
				return 'RC306-320.5'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=571.0:
				if len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=346.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=429.0:
					return 'RC346-429'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=435.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=571.0:
					if len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=475.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
						return 'RC475-489'
					elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
						return 'RC490-499'
					elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=510.0:
						return 'RC500-510'
					elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=512.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=569.5:
						return 'RC512-569.5'
					elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=569.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=571.0:
						return 'RC569.7-571'
					else:
						return 'RC435-571'
				else:
					return 'RC321-571'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=951.0:
				if len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=581.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=607.0:
					return 'RC581-607'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=620.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=627.0:
					return 'RC620-627'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=627.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=632.0:
					return 'RC627.5-632'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=633.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=647.5:
					return 'RC633-647.5'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=648.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=665.0:
					return 'RC648-665'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=666.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=701.0:
					return 'RC666-701'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=705.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=779.0:
					return 'RC705-779'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=869.0:
					return 'RC799-869'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=870.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=923.0:
					return 'RC870-923'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=924.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=924.5:
					return 'RC924-924.5'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=925.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=935.0:
					return 'RC925-935'
				else:
					return 'RC581-951'
			elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=952.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1245.0:
				if len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=952.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=954.6:
					return 'RC952-954.6'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=955.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=962.0:
					return 'RC955-962'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=963.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=969.0:
					return 'RC963-969'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=970.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=986.0:
					return 'RC970-986'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1020.0:
					return 'RC1000-1020'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1030.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1160.0:
					return 'RC1030-1160'
				elif len(loc)>2 and loc[:2]=='RC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1245.0:
					return 'RC1200-1245'
				else:
					return 'RC952-1245'
			else:
				return 'RC31-1245'
		elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
			if len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=31.7:
				return 'RD1-31.7'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=32.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=33.9:
				return 'RD32-33.9'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=52.0:
				return 'RD49-52'
			elif (loc=='RD57') or (len(loc)>4 and loc[:4]=='RD57' and not loc[4].isdigit()):
				return 'RD57'
			elif (loc=='RD58') or (len(loc)>4 and loc[:4]=='RD58' and not loc[4].isdigit()):
				return 'RD58'
			elif (loc=='RD59') or (len(loc)>4 and loc[:4]=='RD59' and not loc[4].isdigit()):
				return 'RD59'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=63.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=76.0:
				return 'RD63-76'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=78.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.3:
				return 'RD78.3-87.3'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=91.5:
				return 'RD91-91.5'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=92.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=97.8:
				return 'RD92-97.8'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=98.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=98.4:
				return 'RD98-98.4'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=99.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.35:
				return 'RD99-99.35'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=104.0:
				return 'RD101-104'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=118.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.5:
				return 'RD118-120.5'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=120.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=129.8:
				return 'RD120.6-129.8'
			elif (loc=='RD130') or (len(loc)>5 and loc[:5]=='RD130' and not loc[5].isdigit()):
				return 'RD130'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=137.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=145.0:
				return 'RD137-145'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=498.0:
				return 'RD151-498'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.5:
				return 'RD520-599.5'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=678.0:
				return 'RD651-678'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=680.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=688.0:
				return 'RD680-688'
			elif len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
				if len(loc)>2 and loc[:2]=='RD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=792.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=811.0:
					return 'RD792-811'
				else:
					return 'RD701-811'
			else:
				return 'RD1-811'
		elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=994.0:
			if len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=75.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=79.0:
				return 'RE75-79'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=80.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
				return 'RE80-87'
			elif (loc=='RE88') or (len(loc)>4 and loc[:4]=='RE88' and not loc[4].isdigit()):
				return 'RE88'
			elif (loc=='RE89') or (len(loc)>4 and loc[:4]=='RE89' and not loc[4].isdigit()):
				return 'RE89'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=91.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=912.0:
				return 'RE91-912'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=918.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=921.0:
				return 'RE918-921'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=925.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=939.0:
				return 'RE925-939'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=939.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=981.0:
				return 'RE939.2-981'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=986.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=988.0:
				return 'RE986-988'
			elif len(loc)>2 and loc[:2]=='RE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=991.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=992.0:
				return 'RE991-992'
			else:
				return 'RE1-994'
		elif len(loc)>2 and loc[:2]=='RF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=547.0:
			if len(loc)>2 and loc[:2]=='RF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=320.0:
				return 'RF110-320'
			elif len(loc)>2 and loc[:2]=='RF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=437.0:
				return 'RF341-437'
			elif len(loc)>2 and loc[:2]=='RF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=547.0:
				return 'RF460-547'
			else:
				return 'RF1-547'
		elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
			if len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=104.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=104.7:
				return 'RG104-104.7'
			elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=133.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=137.6:
				return 'RG133-137.6'
			elif (loc=='RG138') or (len(loc)>5 and loc[:5]=='RG138' and not loc[5].isdigit()):
				return 'RG138'
			elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=159.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=208.0:
				return 'RG159-208'
			elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=483.0:
				return 'RG211-483'
			elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=484.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=485.0:
				return 'RG484-485'
			elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=491.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'RG491-499'
			elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
				if len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=591.0:
					return 'RG551-591'
				elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=650.0:
					if (loc=='RG648') or (len(loc)>5 and loc[:5]=='RG648' and not loc[5].isdigit()):
						return 'RG648'
					else:
						return 'RG600-650'
				elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=651.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=721.0:
					return 'RG651-721'
				elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=725.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=791.0:
					return 'RG725-791'
				elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=871.0:
					return 'RG801-871'
				elif len(loc)>2 and loc[:2]=='RG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=991.0:
					return 'RG940-991'
				else:
					return 'RG500-991'
			else:
				return 'RG1-991'
		elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=570.0:
			if len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=47.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=47.4:
				return 'RJ47.3-47.4'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=51.0:
				return 'RJ50-51'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=52.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=53.0:
				return 'RJ52-53'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=59.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.0:
				return 'RJ59-60'
			elif (loc=='RJ91') or (len(loc)>4 and loc[:4]=='RJ91' and not loc[4].isdigit()):
				return 'RJ91'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=103.0:
				return 'RJ101-103'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=145.0:
				return 'RJ125-145'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=206.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=235.0:
				return 'RJ206-235'
			elif (loc=='RJ240') or (len(loc)>5 and loc[:5]=='RJ240' and not loc[5].isdigit()):
				return 'RJ240'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=242.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=243.0:
				return 'RJ242-243'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=245.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=247.0:
				return 'RJ245-247'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=250.3:
				return 'RJ250-250.3'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=251.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
				return 'RJ251-325'
			elif len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=550.0:
				if len(loc)>2 and loc[:2]=='RJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=499.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=507.0:
					return 'RJ499-507'
				else:
					return 'RJ370-550'
			else:
				return 'RJ1-570'
		elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=715.0:
			if len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.3:
				return 'RK58-59.3'
			elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.8:
				return 'RK60.7-60.8'
			elif (loc=='RK280') or (len(loc)>5 and loc[:5]=='RK280' and not loc[5].isdigit()):
				return 'RK280'
			elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=493.0:
				return 'RK301-493'
			elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=519.0:
				return 'RK501-519'
			elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=528.0:
				return 'RK520-528'
			elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=529.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=535.0:
				return 'RK529-535'
			elif len(loc)>2 and loc[:2]=='RK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=641.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=667.0:
				return 'RK641-667'
			else:
				return 'RK1-715'
		elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=803.0:
			if len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=87.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=94.0:
				return 'RL87-94'
			elif (loc=='RL95') or (len(loc)>4 and loc[:4]=='RL95' and not loc[4].isdigit()):
				return 'RL95'
			elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=110.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.0:
				return 'RL110-120'
			elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=130.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=169.0:
				return 'RL130-169'
			elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=331.0:
				return 'RL201-331'
			elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=391.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=489.0:
				return 'RL391-489'
			elif (loc=='RL675') or (len(loc)>5 and loc[:5]=='RL675' and not loc[5].isdigit()):
				return 'RL675'
			elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=701.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=751.0:
				return 'RL701-751'
			elif len(loc)>2 and loc[:2]=='RL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=760.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.0:
				return 'RL760-785'
			elif (loc=='RL790') or (len(loc)>5 and loc[:5]=='RL790' and not loc[5].isdigit()):
				return 'RL790'
			elif (loc=='RL793') or (len(loc)>5 and loc[:5]=='RL793' and not loc[5].isdigit()):
				return 'RL793'
			else:
				return 'RL1-803'
		elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=950.0:
			if (loc=='RM138') or (len(loc)>5 and loc[:5]=='RM138' and not loc[5].isdigit()):
				return 'RM138'
			elif (loc=='RM139') or (len(loc)>5 and loc[:5]=='RM139' and not loc[5].isdigit()):
				return 'RM139'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=146.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=146.7:
				return 'RM146-146.7'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=147.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
				return 'RM147-180'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=182.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
				return 'RM182-190'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=214.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=258.0:
				return 'RM214-258'
			elif (loc=='RM259') or (len(loc)>5 and loc[:5]=='RM259' and not loc[5].isdigit()):
				return 'RM259'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=263.0:
				return 'RM260-263'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=265.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=267.0:
				return 'RM265-267'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=282.0:
				return 'RM270-282'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=283.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=298.0:
				return 'RM283-298'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=666.0:
				return 'RM300-666'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=671.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=671.5:
				return 'RM671-671.5'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=695.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=893.0:
				return 'RM695-893'
			elif len(loc)>2 and loc[:2]=='RM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=930.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=931.0:
				return 'RM930-931'
			elif (loc=='RM950') or (len(loc)>5 and loc[:5]=='RM950' and not loc[5].isdigit()):
				return 'RM950'
			else:
				return 'RM1-950'
		elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=441.0:
			if len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=131.9:
				return 'RS125-131.9'
			elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=139.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=141.9:
				return 'RS139-141.9'
			elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=151.9:
				return 'RS151.2-151.9'
			elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=153.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=441.0:
				if len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=167.0:
					return 'RS160-167'
				elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=189.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=190.0:
					return 'RS189-190'
				elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=192.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=199.0:
					return 'RS192-199'
				elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=201.0:
					return 'RS200-201'
				elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=252.0:
					return 'RS250-252'
				elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=355.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=356.0:
					return 'RS355-356'
				elif len(loc)>2 and loc[:2]=='RS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=431.0:
					return 'RS400-431'
				elif (loc=='RS441') or (len(loc)>5 and loc[:5]=='RS441' and not loc[5].isdigit()):
					return 'RS441'
				else:
					return 'RS153-441'
			else:
				return 'RS1-441'
		elif len(loc)>2 and loc[:2]=='RT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.0:
			if len(loc)>2 and loc[:2]=='RT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=89.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=120.0:
				return 'RT89-120'
			else:
				return 'RT1-120'
		elif len(loc)>2 and loc[:2]=='RV' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=431.0:
			return 'RV1-431'
		elif len(loc)>2 and loc[:2]=='RX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=681.0:
			if len(loc)>2 and loc[:2]=='RX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=211.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=581.0:
				return 'RX211-581'
			elif len(loc)>2 and loc[:2]=='RX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=675.0:
				return 'RX601-675'
			else:
				return 'RX1-681'
		elif len(loc)>2 and loc[:2]=='RZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='RZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=275.0:
				return 'RZ201-275'
			elif len(loc)>2 and loc[:2]=='RZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=397.5:
				return 'RZ301-397.5'
			elif (loc=='RZ399') or (len(loc)>5 and loc[:5]=='RZ399' and not loc[5].isdigit()):
				return 'RZ399'
			elif len(loc)>2 and loc[:2]=='RZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=408.0:
				return 'RZ400-408'
			elif len(loc)>2 and loc[:2]=='RZ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=409.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				return 'RZ409.7-999'
			else:
				return 'RZ201-999'
		else:
			return 'R'
	elif loc[0]=='S':
		if len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=972.0:
			if len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=400.5:
				return 'S21-400.5'
			elif (loc=='S403') or (len(loc)>4 and loc[:4]=='S403' and not loc[4].isdigit()):
				return 'S403'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=419.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=482.0:
				return 'S419-482'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=530.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=559.0:
				if len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=539.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=542.3:
					return 'S539.5-542.3'
				elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=544.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=545.53:
					return 'S544-545.53'
				elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=548.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=548.6:
					return 'S548-548.6'
				elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=559.0:
					return 'S550-559'
				else:
					return 'S530-559'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=560.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=571.5:
				return 'S560-571.5'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=583.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=587.73:
				return 'S583-587.73'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=588.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=589.6:
				return 'S588.4-589.6'
			elif (loc=='S589.7') or (len(loc)>6 and loc[:6]=='S589.7' and not loc[6].isdigit()):
				return 'S589.7'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=589.75 and float(re.findall(r'\d+\.?\d*',loc)[0])<=589.76:
				return 'S589.75-589.76'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=589.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=589.87:
				return 'S589.8-589.87'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=599.9:
				return 'S590-599.9'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=600.7:
				return 'S600-600.7'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=602.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=604.37:
				return 'S602.5-604.37'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=604.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=604.64:
				return 'S604.5-604.64'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=604.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=621.5:
				if (loc=='S605.5') or (len(loc)>6 and loc[:6]=='S605.5' and not loc[6].isdigit()):
					return 'S605.5'
				elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=606.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=621.5:
					return 'S606-621.5'
				else:
					return 'S604.8-621.5'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=622.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=627.0:
				return 'S622-627'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=631.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=667.0:
				return 'S631-667'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=671.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=760.5:
				return 'S671-760.5'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=790.3:
				return 'S770-790.3'
			elif len(loc)>1 and loc[:1]=='S' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=972.0:
				return 'S900-(972)'
			else:
				return 'S1-(972)'
		elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1110.0:
			if (loc=='SB39') or (len(loc)>4 and loc[:4]=='SB39' and not loc[4].isdigit()):
				return 'SB39'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=71.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=87.0:
				return 'SB71-87'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=107.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.0:
				return 'SB107-109'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=109.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=111.0:
				return 'SB109.7-111'
			elif (loc=='SB112') or (len(loc)>5 and loc[:5]=='SB112' and not loc[5].isdigit()):
				return 'SB112'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=113.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=118.46:
				return 'SB113.2-118.46'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=118.48 and float(re.findall(r'\d+\.?\d*',loc)[0])<=118.75:
				return 'SB118.48-118.75'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=119.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'SB119-124'
			elif (loc=='SB125') or (len(loc)>5 and loc[:5]=='SB125' and not loc[5].isdigit()):
				return 'SB125'
			elif (loc=='SB126') or (len(loc)>5 and loc[:5]=='SB126' and not loc[5].isdigit()):
				return 'SB126'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=126.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=126.57:
				return 'SB126.5-126.57'
			elif (loc=='SB127') or (len(loc)>5 and loc[:5]=='SB127' and not loc[5].isdigit()):
				return 'SB127'
			elif (loc=='SB128') or (len(loc)>5 and loc[:5]=='SB128' and not loc[5].isdigit()):
				return 'SB128'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=129.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=130.0:
				return 'SB129-130'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=169.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=172.5:
				return 'SB169-172.5'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=177.0:
				return 'SB175-177'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=183.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=317.0:
				return 'SB183-317'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=317.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=319.864:
				return 'SB317.5-319.864'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=353.5:
				return 'SB320-353.5'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=354.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=402.0:
				if len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=386.0:
					return 'SB381-386'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=387.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=399.0:
					return 'SB387-399'
				elif (loc=='SB401') or (len(loc)>5 and loc[:5]=='SB401' and not loc[5].isdigit()):
					return 'SB401'
				else:
					return 'SB354-402'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=403.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.87:
				if len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=406.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=406.83:
					return 'SB406.7-406.83'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=409.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=413.0:
					return 'SB409-413'
				elif (loc=='SB414') or (len(loc)>5 and loc[:5]=='SB414' and not loc[5].isdigit()):
					return 'SB414'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=414.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=417.0:
					return 'SB414.6-417'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=418.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=418.4:
					return 'SB418-418.4'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=419.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=419.3:
					return 'SB419-419.3'
				elif (loc=='SB419.5') or (len(loc)>7 and loc[:7]=='SB419.5' and not loc[7].isdigit()):
					return 'SB419.5'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=439.8:
					return 'SB421-439.8'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=441.75:
					return 'SB441-441.75'
				elif (loc=='SB442.5') or (len(loc)>7 and loc[:7]=='SB442.5' and not loc[7].isdigit()):
					return 'SB442.5'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=442.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=443.4:
					return 'SB442.8-443.4'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=446.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=446.6:
					return 'SB446-446.6'
				elif (loc=='SB447') or (len(loc)>5 and loc[:5]=='SB447' and not loc[5].isdigit()):
					return 'SB447'
				elif (loc=='SB447.5') or (len(loc)>7 and loc[:7]=='SB447.5' and not loc[7].isdigit()):
					return 'SB447.5'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=449.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.87:
					return 'SB449-450.87'
				else:
					return 'SB403-450.87'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=467.8:
				return 'SB450.9-467.8'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=469.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=476.4:
				return 'SB469-(476.4)'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=486.0:
				return 'SB481-486'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=599.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.5:
				if (loc=='SB608') or (len(loc)>5 and loc[:5]=='SB608' and not loc[5].isdigit()):
					return 'SB608'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=610.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=615.0:
					return 'SB610-615'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=617.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=618.0:
					return 'SB617-618'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=621.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=795.0:
					return 'SB621-795'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=818.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=945.0:
					return 'SB818-945'
				elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=990.5:
					if len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=970.4:
						return 'SB950.9-970.4'
					elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=973.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=973.5:
						return 'SB973-973.5'
					elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=974.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.0:
						return 'SB974-978'
					elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=979.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=985.0:
						return 'SB979.5-985'
					else:
						return 'SB950-990.5'
				else:
					return 'SB599-990.5'
			elif len(loc)>2 and loc[:2]=='SB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=992.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=998.0:
				return 'SB992-998'
			else:
				return 'SB1-1110'
		elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=669.5:
			if len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.0:
				return 'SD11-115'
			elif (loc=='SD119') or (len(loc)>5 and loc[:5]=='SD119' and not loc[5].isdigit()):
				return 'SD119'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=131.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=247.5:
				return 'SD131-247.5'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=363.3:
				return 'SD250-363.3'
			elif (loc=='SD388') or (len(loc)>5 and loc[:5]=='SD388' and not loc[5].isdigit()):
				return 'SD388'
			elif (loc=='SD388.5') or (len(loc)>7 and loc[:7]=='SD388.5' and not loc[7].isdigit()):
				return 'SD388.5'
			elif (loc=='SD389') or (len(loc)>5 and loc[:5]=='SD389' and not loc[5].isdigit()):
				return 'SD389'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.43:
				return 'SD390-390.43'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.7:
				return 'SD390.5-390.7'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=391.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=410.9:
				return 'SD391-410.9'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=428.0:
				return 'SD411-428'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=559.0:
				return 'SD430-(559)'
			elif len(loc)>2 and loc[:2]=='SD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=561.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=669.5:
				return 'SD561-669.5'
			else:
				return 'SD1-669.5'
		elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1100.0:
			if len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=41.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=55.0:
				return 'SF41-55'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=84.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=84.64:
				return 'SF84-84.64'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=84.82 and float(re.findall(r'\d+\.?\d*',loc)[0])<=85.6:
				return 'SF84.82-85.6'
			elif (loc=='SF87') or (len(loc)>4 and loc[:4]=='SF87' and not loc[4].isdigit()):
				return 'SF87'
			elif (loc=='SF89') or (len(loc)>4 and loc[:4]=='SF89' and not loc[4].isdigit()):
				return 'SF89'
			elif (loc=='SF91') or (len(loc)>4 and loc[:4]=='SF91' and not loc[4].isdigit()):
				return 'SF91'
			elif (loc=='SF92') or (len(loc)>4 and loc[:4]=='SF92' and not loc[4].isdigit()):
				return 'SF92'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=94.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=99.0:
				return 'SF94.5-99'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=103.5:
				return 'SF101-103.5'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=105.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=109.0:
				return 'SF105-109'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=111.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=113.0:
				return 'SF111-113'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=114.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=121.0:
				return 'SF114-121'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=180.0:
				return 'SF170-180'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=191.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=275.0:
				if len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=221.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=250.0:
					return 'SF221-250'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=275.0:
					return 'SF250.5-275'
				else:
					return 'SF191-275'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=277.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=360.4:
				if len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=294.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=297.0:
					return 'SF294.2-297'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=304.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=307.0:
					return 'SF304.5-307'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=308.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=310.5:
					return 'SF308.5-310.5'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=311.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=312.0:
					return 'SF311-312'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=315.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=315.5:
					return 'SF315-315.5'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=359.7:
					return 'SF321-359.7'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=360.4:
					return 'SF360-360.4'
				else:
					return 'SF277-360.4'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=361.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=361.73:
				return 'SF361-361.73'
			elif (loc=='SF362') or (len(loc)>5 and loc[:5]=='SF362' and not loc[5].isdigit()):
				return 'SF362'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=371.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=379.0:
				return 'SF371-379'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=388.0:
				return 'SF380-388'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=391.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=397.83:
				return 'SF391-397.83'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=402.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=405.0:
				return 'SF402-405'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=405.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=407.0:
				return 'SF405.5-407'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=408.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=408.6:
				return 'SF408-408.6'
			elif (loc=='SF409') or (len(loc)>5 and loc[:5]=='SF409' and not loc[5].isdigit()):
				return 'SF409'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=459.0:
				if len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=421.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.2:
					return 'SF421-440.2'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=441.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.0:
					return 'SF441-450'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=451.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=455.0:
					return 'SF451-455'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=456.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=458.83:
					return 'SF456-458.83'
				elif (loc=='SF459') or (len(loc)>5 and loc[:5]=='SF459' and not loc[5].isdigit()):
					return 'SF459'
				else:
					return 'SF411-459'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=461.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=473.0:
				return 'SF461-473'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=507.0:
				return 'SF481-507'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=508.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=510.6:
				return 'SF508-(510.6)'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=511.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=511.5:
				return 'SF511-511.5'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=512.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=513.0:
				return 'SF512-513'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=515.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=515.5:
				return 'SF515-515.5'
			elif (loc=='SF518') or (len(loc)>5 and loc[:5]=='SF518' and not loc[5].isdigit()):
				return 'SF518'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=521.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=539.8:
				return 'SF521-539.8'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=541.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.0:
				return 'SF541-560'
			elif (loc=='SF561') or (len(loc)>5 and loc[:5]=='SF561' and not loc[5].isdigit()):
				return 'SF561'
			elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1100.0:
				if len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=756.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=769.5:
					return 'SF756.5-769.5'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=780.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=780.7:
					return 'SF780.2-780.7'
				elif (loc=='SF780.9') or (len(loc)>7 and loc[:7]=='SF780.9' and not loc[7].isdigit()):
					return 'SF780.9'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=781.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=809.0:
					return 'SF781-809'
				elif (loc=='SF810') or (len(loc)>5 and loc[:5]=='SF810' and not loc[5].isdigit()):
					return 'SF810'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=810.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=810.7:
					return 'SF810.5-810.7'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=811.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=909.0:
					return 'SF811-909'
				elif (loc=='SF910') or (len(loc)>5 and loc[:5]=='SF910' and not loc[5].isdigit()):
					return 'SF910'
				elif (loc=='SF910.5') or (len(loc)>7 and loc[:7]=='SF910.5' and not loc[7].isdigit()):
					return 'SF910.5'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=911.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=914.4:
					if len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=914.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=914.4:
						return 'SF914.3-914.4'
					else:
						return 'SF911-914.4'
				elif (loc=='SF914.5') or (len(loc)>7 and loc[:7]=='SF914.5' and not loc[7].isdigit()):
					return 'SF914.5'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=915.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=919.5:
					return 'SF915-919.5'
				elif (loc=='SF925') or (len(loc)>5 and loc[:5]=='SF925' and not loc[5].isdigit()):
					return 'SF925'
				elif len(loc)>2 and loc[:2]=='SF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=951.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.5:
					return 'SF951-997.5'
				else:
					return 'SF600-1100'
			else:
				return 'SF1-1100'
		elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=691.0:
			if len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=191.0:
				if len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=33.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=134.6:
					return 'SH33-134.6'
				elif (loc=='SH138') or (len(loc)>5 and loc[:5]=='SH138' and not loc[5].isdigit()):
					return 'SH138'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=151.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=179.0:
					if len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=171.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=179.0:
						return 'SH171-179'
					else:
						return 'SH151-179'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=185.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=191.0:
					return 'SH185-191'
				else:
					return 'SH20.3-191'
			elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=399.0:
				if len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=213.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=216.55:
					return 'SH213-216.55'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=219.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=321.0:
					return 'SH219-321'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=327.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=327.7:
					return 'SH327.5-327.7'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=328.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=329.0:
					return 'SH328-329'
				elif (loc=='SH334') or (len(loc)>5 and loc[:5]=='SH334' and not loc[5].isdigit()):
					return 'SH334'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=334.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=334.7:
					return 'SH334.5-334.7'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=334.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=336.5:
					return 'SH334.9-336.5'
				elif (loc=='SH337') or (len(loc)>5 and loc[:5]=='SH337' and not loc[5].isdigit()):
					return 'SH337'
				elif (loc=='SH337.5') or (len(loc)>7 and loc[:7]=='SH337.5' and not loc[7].isdigit()):
					return 'SH337.5'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=343.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=343.3:
					return 'SH343.2-343.3'
				elif (loc=='SH343.4') or (len(loc)>7 and loc[:7]=='SH343.4' and not loc[7].isdigit()):
					return 'SH343.4'
				elif (loc=='SH343.5') or (len(loc)>7 and loc[:7]=='SH343.5' and not loc[7].isdigit()):
					return 'SH343.5'
				elif (loc=='SH343.8') or (len(loc)>7 and loc[:7]=='SH343.8' and not loc[7].isdigit()):
					return 'SH343.8'
				elif (loc=='SH343.9') or (len(loc)>7 and loc[:7]=='SH343.9' and not loc[7].isdigit()):
					return 'SH343.9'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=344.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=344.8:
					return 'SH344-344.8'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=346.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=351.0:
					return 'SH346-351'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=363.0:
					return 'SH360-363'
				elif (loc=='SH364') or (len(loc)>5 and loc[:5]=='SH364' and not loc[5].isdigit()):
					return 'SH364'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=365.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.92:
					return 'SH365-380.92'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=385.0:
					return 'SH381-385'
				elif (loc=='SH387') or (len(loc)>5 and loc[:5]=='SH387' and not loc[5].isdigit()):
					return 'SH387'
				elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=388.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=391.5:
					return 'SH388.7-391.5'
				elif (loc=='SH393') or (len(loc)>5 and loc[:5]=='SH393' and not loc[5].isdigit()):
					return 'SH393'
				elif (loc=='SH396') or (len(loc)>5 and loc[:5]=='SH396' and not loc[5].isdigit()):
					return 'SH396'
				else:
					return 'SH201-399'
			elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=400.8:
				return 'SH400-400.8'
			elif len(loc)>2 and loc[:2]=='SH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=691.0:
				return 'SH401-691'
			else:
				return 'SH1-691'
		elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=664.0:
			if len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=37.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=39.5:
				return 'SK37-39.5'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=40.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=268.0:
				return 'SK40-268'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=281.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=293.0:
				if len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=284.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=287.0:
					return 'SK284-287'
				elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=291.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=292.0:
					return 'SK291-292'
				elif (loc=='SK293') or (len(loc)>5 and loc[:5]=='SK293' and not loc[5].isdigit()):
					return 'SK293'
				else:
					return 'SK281-293'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=295.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=305.0:
				return 'SK295-305'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=311.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=335.0:
				return 'SK311-335'
			elif (loc=='SK336') or (len(loc)>5 and loc[:5]=='SK336' and not loc[5].isdigit()):
				return 'SK336'
			elif (loc=='SK337') or (len(loc)>5 and loc[:5]=='SK337' and not loc[5].isdigit()):
				return 'SK337'
			elif (loc=='SK341') or (len(loc)>5 and loc[:5]=='SK341' and not loc[5].isdigit()):
				return 'SK341'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=579.0:
				return 'SK351-579'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=593.0:
				return 'SK590-593'
			elif len(loc)>2 and loc[:2]=='SK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=664.0:
				return 'SK650-664'
			else:
				return 'SK1-664'
		else:
			return 'S'
	elif loc[0]=='T':
		if len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
			if len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=11.9:
				return 'T10.5-11.9'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=11.95 and float(re.findall(r'\d+\.?\d*',loc)[0])<=12.5:
				if len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=55.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=55.3:
					return 'T55-55.3'
				else:
					return 'T11.95-12.5'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=55.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.8:
				if len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=57.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=57.97:
					if len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=57.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=57.97:
						return 'T57.6-57.97'
					else:
						return 'T57-57.97'
				elif (loc=='T58.4') or (len(loc)>5 and loc[:5]=='T58.4' and not loc[5].isdigit()):
					return 'T58.4'
				elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.64:
					return 'T58.5-58.64'
				elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.6 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.62:
					return 'T58.6-58.62'
				elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=58.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=58.8:
					return 'T58.7-58.8'
				elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=59.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.2:
					return 'T59-59.2'
				elif (loc=='T59.5') or (len(loc)>5 and loc[:5]=='T59.5' and not loc[5].isdigit()):
					return 'T59.5'
				elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=59.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.77:
					return 'T59.7-59.77'
				elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=60.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=60.8:
					return 'T60-60.8'
				else:
					return 'T55.4-60.8'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=61.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=173.0:
				return 'T61-173'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=173.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=174.5:
				return 'T173.2-174.5'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=178.0:
				return 'T175-178'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=342.0:
				return 'T201-342'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=351.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=385.0:
				return 'T351-385'
			elif len(loc)>1 and loc[:1]=='T' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=391.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
				return 'T391-995'
			else:
				return 'T1-995'
		elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2040.0:
			if (loc=='TA164') or (len(loc)>5 and loc[:5]=='TA164' and not loc[5].isdigit()):
				return 'TA164'
			elif (loc=='TA165') or (len(loc)>5 and loc[:5]=='TA165' and not loc[5].isdigit()):
				return 'TA165'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=166.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=167.0:
				return 'TA166-167'
			elif (loc=='TA168') or (len(loc)>5 and loc[:5]=='TA168' and not loc[5].isdigit()):
				return 'TA168'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=171.0:
				return 'TA170-171'
			elif (loc=='TA174') or (len(loc)>5 and loc[:5]=='TA174' and not loc[5].isdigit()):
				return 'TA174'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=177.4 and float(re.findall(r'\d+\.?\d*',loc)[0])<=185.0:
				return 'TA177.4-185'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=190.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=194.0:
				return 'TA190-194'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=197.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.0:
				return 'TA197-198'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=213.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=215.0:
				return 'TA213-215'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=329.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=348.0:
				return 'TA329-348'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=349.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=359.0:
				return 'TA349-359'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=365.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=367.0:
				return 'TA365-367'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=492.0:
				return 'TA401-492'
			elif (loc=='TA495') or (len(loc)>5 and loc[:5]=='TA495' and not loc[5].isdigit()):
				return 'TA495'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=625.0:
				return 'TA501-625'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=630.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
				return 'TA630-695'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=703.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=712.0:
				return 'TA703-712'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=715.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=787.0:
				return 'TA715-787'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=820.0:
				return 'TA800-820'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1280.0:
				return 'TA1001-1280'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1820.0:
				return 'TA1501-1820'
			elif len(loc)>2 and loc[:2]=='TA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2040.0:
				return 'TA2001-2040'
			else:
				return 'TA1-2040'
		elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.0:
			if len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=181.0:
				return 'TC160-181'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=183.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=201.0:
				return 'TC183-201'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=203.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=380.0:
				return 'TC203-380'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=506.0:
				return 'TC401-506'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=530.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=537.0:
				return 'TC530-537'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=558.0:
				return 'TC540-558'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=791.0:
				return 'TC601-791'
			elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=801.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=978.0:
				return 'TC801-978'
			else:
				return 'TC1-978'
		elif len(loc)>2 and loc[:2]=='TC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1800.0:
			return 'TC1501-1800'
		elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1066.0:
			if len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=159.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=168.0:
				return 'TD159-168'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=169.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=171.8:
				return 'TD169-171.8'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=172.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=193.5:
				return 'TD172-193.5'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=194.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=195.0:
				return 'TD194-195'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
				if len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=419.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=428.0:
					return 'TD419-428'
				elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=429.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=480.7:
					return 'TD429.5-480.7'
				elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=481.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=493.0:
					return 'TD481-493'
				else:
					return 'TD201-500'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=511.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=780.0:
				return 'TD511-780'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=783.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=812.5:
				return 'TD783-812.5'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=813.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=870.0:
				return 'TD813-870'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=878.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=894.0:
				return 'TD878-894'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=895.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=899.0:
				if len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=896.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=899.0:
					return 'TD896-899'
				else:
					return 'TD895-899'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=920.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=934.0:
				return 'TD920-934'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=949.0:
				return 'TD940-949'
			elif len(loc)>2 and loc[:2]=='TD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1066.0:
				return 'TD1020-1066'
			else:
				return 'TD1-1066'
		elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=450.0:
			if len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=175.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=176.5:
				return 'TE175-176.5'
			elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=177.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=178.8:
				return 'TE177-178.8'
			elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=205.0:
				return 'TE200-205'
			elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=206.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=209.5:
				return 'TE206-209.5'
			elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=228.3:
				return 'TE210-228.3'
			elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=278.8:
				return 'TE250-278.8'
			elif (loc=='TE279') or (len(loc)>5 and loc[:5]=='TE279' and not loc[5].isdigit()):
				return 'TE279'
			elif len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=279.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=298.0:
				if len(loc)>2 and loc[:2]=='TE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=295.0:
					return 'TE280-295'
				elif (loc=='TE298') or (len(loc)>5 and loc[:5]=='TE298' and not loc[5].isdigit()):
					return 'TE298'
				else:
					return 'TE279.5-298'
			else:
				return 'TE1-450'
		elif len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1620.0:
			if len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=320.0:
				return 'TF200-320'
			elif len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=499.0:
				return 'TF340-499'
			elif len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=668.0:
				return 'TF501-668'
			elif len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=851.0:
				if len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=851.0:
					return 'TF840-851'
				else:
					return 'TF670-851'
			elif len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=855.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1127.0:
				return 'TF855-1127'
			elif len(loc)>2 and loc[:2]=='TF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1620.0:
				return 'TF1300-1620'
			else:
				return 'TF1-1620'
		elif len(loc)>2 and loc[:2]=='TG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=470.0:
			return 'TG1-470'
		elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9745.0:
			if len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=845.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=895.0:
				return 'TH845-895'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
				return 'TH900-915'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1725.0:
				return 'TH1000-1725'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3000.0:
				return 'TH2025-3000'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3411.0:
				return 'TH3301-3411'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4021.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4977.0:
				return 'TH4021-4977'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5701.0:
				return 'TH5011-5701'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6014.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6081.0:
				return 'TH6014-6081'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=6101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6887.0:
				return 'TH6101-6887'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7005.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7699.0:
				return 'TH7005-7699'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7975.0:
				return 'TH7700-7975'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8581.0:
				return 'TH8001-8581'
			elif len(loc)>2 and loc[:2]=='TH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9025.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9745.0:
				return 'TH9025-9745'
			else:
				return 'TH1-9745'
		elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1570.0:
			if len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=163.13 and float(re.findall(r'\d+\.?\d*',loc)[0])<=163.25:
				return 'TJ163.13-163.25'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=163.26 and float(re.findall(r'\d+\.?\d*',loc)[0])<=163.5:
				return 'TJ163.26-163.5'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=179.0:
				return 'TJ170-179'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=181.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=210.0:
				return 'TJ181-210'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=210.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=211.47:
				return 'TJ210.2-211.47'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=212.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=225.0:
				return 'TJ212-225'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=227.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=240.0:
				return 'TJ227-240'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=241.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=254.7:
				return 'TJ241-254.7'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=255.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
				return 'TJ255-265'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=266.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=267.5:
				return 'TJ266-267.5'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=268.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=740.0:
				if len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=603.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
					return 'TJ603-695'
				else:
					return 'TJ268-740'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=805.0:
				return 'TJ751-805'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=807.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=830.0:
				return 'TJ807-830'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=836.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=927.0:
				return 'TJ836-927'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=940.5:
				return 'TJ940-940.5'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1030.0:
				return 'TJ950-1030'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1040.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1119.0:
				return 'TJ1040-1119'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1345.0:
				return 'TJ1125-1345'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1418.0:
				return 'TJ1350-1418'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1425.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1475.0:
				return 'TJ1425-1475'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1496.0:
				return 'TJ1480-1496'
			elif len(loc)>2 and loc[:2]=='TJ' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1519.0:
				return 'TJ1501-1519'
			else:
				return 'TJ1-1570'
		elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9971.0:
			if len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=399.0:
				return 'TK301-399'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=452.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=454.4:
				return 'TK452-454.4'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1841.0:
				return 'TK1001-1841'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2891.0:
				return 'TK2000-2891'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2896.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2985.0:
				return 'TK2896-2985'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3521.0:
				return 'TK3001-3521'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4102.0:
				return 'TK4001-4102'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4125.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4399.0:
				return 'TK4125-4399'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4601.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4661.0:
				return 'TK4601-4661'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5101.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=6720.0:
				return 'TK5101-6720'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8360.0:
				if len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7885.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7895.0:
					return 'TK7885-7895'
				elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8360.0:
					return 'TK8300-8360'
				else:
					return 'TK7800-8360'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9401.0:
				return 'TK9001-9401'
			elif len(loc)>2 and loc[:2]=='TK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=9900.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=9971.0:
				return 'TK9900-9971'
			else:
				return 'TK1-9971'
		elif len(loc)>2 and loc[:2]=='TL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4050.0:
			if len(loc)>2 and loc[:2]=='TL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=484.0:
				return 'TL1-484'
			elif len(loc)>2 and loc[:2]=='TL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=777.0:
				return 'TL500-777'
			elif len(loc)>2 and loc[:2]=='TL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=780.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=785.8:
				return 'TL780-785.8'
			elif len(loc)>2 and loc[:2]=='TL' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=787.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4050.0:
				return 'TL787-4050'
			else:
				return 'TL1-4050'
		elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.0:
			if len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=263.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=271.0:
				return 'TN263-271'
			elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=275.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
				return 'TN275-325'
			elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=331.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=347.0:
				return 'TN331-347'
			elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=580.0:
				return 'TN400-580'
			elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=799.0:
				return 'TN600-799'
			elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=948.0:
				return 'TN799.5-948'
			elif len(loc)>2 and loc[:2]=='TN' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.0:
				return 'TN950-997'
			else:
				return 'TN1-997'
		elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1185.0:
			if len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=156.0:
				return 'TP155-156'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=248.0:
				return 'TP200-248'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=248.13 and float(re.findall(r'\d+\.?\d*',loc)[0])<=248.65:
				return 'TP248.13-248.65'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=261.0:
				return 'TP250-261'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=267.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=301.0:
				return 'TP267.5-301'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=315.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=360.0:
				return 'TP315-360'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=368.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=456.0:
				return 'TP368-456'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=498.0:
				return 'TP480-498'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=660.0:
				return 'TP500-660'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=670.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.0:
				if len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=690.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=692.5:
					return 'TP690-692.5'
				else:
					return 'TP670-699'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=746.0:
				return 'TP700-746'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=751.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=762.0:
				return 'TP751-762'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=785.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=869.0:
				return 'TP785-869'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=875.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=888.0:
				return 'TP875-888'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=890.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=933.0:
				return 'TP890-933'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=934.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=945.0:
				return 'TP934-945'
			elif len(loc)>2 and loc[:2]=='TP' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1185.0:
				return 'TP1080-1185'
			else:
				return 'TP1-1185'
		elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1050.0:
			if len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.0:
				return 'TR250-265'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=287.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
				return 'TR287-500'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=504.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=508.0:
				return 'TR504-508'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=510.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=545.0:
				return 'TR510-545'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=581.0:
				return 'TR550-581'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.0:
				return 'TR590-620'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=624.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=835.0:
				return 'TR624-835'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=845.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=899.0:
				return 'TR845-899'
			elif len(loc)>2 and loc[:2]=='TR' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=925.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1050.0:
				return 'TR925-1050'
			else:
				return 'TR1-1050'
		elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2301.0:
			if len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=155.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=194.0:
				return 'TS155-194'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=195.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=198.8:
				return 'TS195-198.8'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=200.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=770.0:
				return 'TS200-770'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=780.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=788.0:
				return 'TS780-788'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=937.0:
				if len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=840.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
					return 'TS840-915'
				elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=920.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=937.0:
					return 'TS920-937'
				else:
					return 'TS800-937'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1047.0:
				return 'TS940-1047'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1060.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1070.0:
				return 'TS1060-1070'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1080.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1268.0:
				return 'TS1080-1268'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1865.0:
				return 'TS1300-1865'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1870.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1935.0:
				return 'TS1870-1935'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1982.0:
				return 'TS1950-1982'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2120.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2159.0:
				return 'TS2120-2159'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2220.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2283.0:
				return 'TS2220-2283'
			elif len(loc)>2 and loc[:2]=='TS' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2284.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2288.0:
				return 'TS2284-2288'
			else:
				return 'TS1-2301'
		elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
			if len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=170.7:
				return 'TT161-170.7'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=174.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=176.0:
				return 'TT174-176'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=200.0:
				return 'TT180-200'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=203.0:
				return 'TT201-203'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=205.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=267.0:
				return 'TT205-267'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=382.8:
				return 'TT300-382.8'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=387.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=410.0:
				return 'TT387-410'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
				return 'TT490-695'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=697.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=927.0:
				return 'TT697-927'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=979.0:
				return 'TT950-979'
			elif len(loc)>2 and loc[:2]=='TT' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=980.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=999.0:
				return 'TT980-999'
			else:
				return 'TT1-999'
		elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1110.0:
			if len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=301.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=339.0:
				return 'TX301-339'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=341.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=641.0:
				return 'TX341-641'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=642.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=840.0:
				return 'TX642-840'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=851.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=885.0:
				return 'TX851-885'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=901.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=946.5:
				return 'TX901-946.5'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=953.0:
				return 'TX950-953'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=955.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=985.0:
				return 'TX955-985'
			elif len(loc)>2 and loc[:2]=='TX' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1105.0:
				return 'TX1100-1105'
			elif (loc=='TX1110') or (len(loc)>6 and loc[:6]=='TX1110' and not loc[6].isdigit()):
				return 'TX1110'
			else:
				return 'TX1-1110'
		else:
			return 'T'
	elif loc[0]=='U':
		if len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.0:
			if len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=22.3:
				return 'U21-22.3'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=27.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=43.0:
				return 'U27-43'
			elif (loc=='U45') or (len(loc)>3 and loc[:3]=='U45' and not loc[3].isdigit()):
				return 'U45'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=56.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=59.0:
				return 'U56-59'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=155.0:
				return 'U150-155'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=161.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=163.0:
				return 'U161-163'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=164.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=167.5:
				return 'U164-167.5'
			elif (loc=='U168') or (len(loc)>4 and loc[:4]=='U168' and not loc[4].isdigit()):
				return 'U168'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=255.0:
				return 'U250-255'
			elif (loc=='U260') or (len(loc)>4 and loc[:4]=='U260' and not loc[4].isdigit()):
				return 'U260'
			elif (loc=='U261') or (len(loc)>4 and loc[:4]=='U261' and not loc[4].isdigit()):
				return 'U261'
			elif (loc=='U262') or (len(loc)>4 and loc[:4]=='U262' and not loc[4].isdigit()):
				return 'U262'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=263.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=264.5:
				return 'U263-264.5'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=305.0:
				return 'U300-305'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=310.2:
				return 'U310-310.2'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
				return 'U320-325'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=714.0:
				return 'U400-714'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=773.0:
				return 'U750-773'
			elif len(loc)>1 and loc[:1]=='U' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=799.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=897.0:
				return 'U799-897'
			else:
				return 'U1-900'
		elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.0:
			if len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=885.0:
				return 'UA21-885'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=910.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=915.0:
				return 'UA910-915'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=920.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=925.0:
				return 'UA920-925'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=926.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=929.0:
				return 'UA926-929'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=929.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=929.95:
				return 'UA929.5-929.95'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=940.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=945.0:
				return 'UA940-945'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=950.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=979.0:
				return 'UA950-979'
			elif len(loc)>2 and loc[:2]=='UA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=985.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.0:
				return 'UA985-997'
			else:
				return 'UA10-997'
		elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=900.0:
			if len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
				return 'UB160-165'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=175.0:
				return 'UB170-175'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=180.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=197.0:
				return 'UB180-197'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=271.0:
				return 'UB250-271'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=273.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=274.0:
				return 'UB273-274'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=275.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=277.0:
				return 'UB275-277'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=338.0:
				return 'UB320-338'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=345.0:
				return 'UB340-345'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=356.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=369.5:
				return 'UB356-369.5'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=370.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=375.0:
				return 'UB370-375'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=385.0:
				return 'UB380-385'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=407.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=409.0:
				return 'UB407-409'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=410.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=415.0:
				return 'UB410-415'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=416.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=419.0:
				return 'UB416-419'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=425.0:
				return 'UB420-425'
			elif len(loc)>2 and loc[:2]=='UB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=440.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.5:
				return 'UB440-449.5'
			else:
				return 'UB1-900'
		elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=780.0:
			if len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=258.0:
				return 'UC20-258'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=267.0:
				return 'UC260-267'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=360.0:
				return 'UC270-360'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=440.0:
				return 'UC400-440'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=535.0:
				return 'UC460-535'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=585.0:
				return 'UC540-585'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
				return 'UC600-695'
			elif len(loc)>2 and loc[:2]=='UC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=780.0:
				return 'UC700-780'
			else:
				return 'UC10-780'
		elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.0:
			if len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=157.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'UD157-302'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
				return 'UD320-325'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=335.0:
				return 'UD330-335'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=340.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=345.0:
				return 'UD340-345'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=380.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=425.0:
				return 'UD380-425'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=455.0:
				return 'UD450-455'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=464.0:
				return 'UD460-464'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
				return 'UD470-475'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=485.0:
				return 'UD480-485'
			elif len(loc)>2 and loc[:2]=='UD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=490.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=495.0:
				return 'UD490-495'
			else:
				return 'UD1-495'
		elif len(loc)>2 and loc[:2]=='UE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
			if len(loc)>2 and loc[:2]=='UE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=144.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=145.0:
				return 'UE144-145'
			elif (loc=='UE147') or (len(loc)>5 and loc[:5]=='UE147' and not loc[5].isdigit()):
				return 'UE147'
			elif len(loc)>2 and loc[:2]=='UE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=157.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'UE157-302'
			elif len(loc)>2 and loc[:2]=='UE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=425.0:
				return 'UE420-425'
			elif len(loc)>2 and loc[:2]=='UE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
				return 'UE460-475'
			else:
				return 'UE1-500'
		elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=910.0:
			if len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=157.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'UF157-302'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=405.0:
				return 'UF400-405'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=455.0:
				return 'UF450-455'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=460.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=465.0:
				return 'UF460-465'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
				return 'UF470-475'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=480.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=485.0:
				return 'UF480-485'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=515.0:
				return 'UF500-515'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=537.0:
				return 'UF520-537'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=540.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=545.0:
				return 'UF540-545'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=560.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=780.0:
				return 'UF560-780'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=820.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=830.0:
				return 'UF820-830'
			elif len(loc)>2 and loc[:2]=='UF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=848.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=856.0:
				return 'UF848-856'
			else:
				return 'UF1-910'
		elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.0:
			if len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'UG160-302'
			elif (loc=='UG335') or (len(loc)>5 and loc[:5]=='UG335' and not loc[5].isdigit()):
				return 'UG335'
			elif (loc=='UG340') or (len(loc)>5 and loc[:5]=='UG340' and not loc[5].isdigit()):
				return 'UG340'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
				return 'UG360-390'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=442.0:
				return 'UG400-442'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=443.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=449.0:
				return 'UG443-449'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=470.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=474.0:
				return 'UG470-474'
			elif (loc=='UG490') or (len(loc)>5 and loc[:5]=='UG490' and not loc[5].isdigit()):
				return 'UG490'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=565.0:
				return 'UG500-565'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=570.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=582.0:
				return 'UG570-582'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=590.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=613.5:
				return 'UG590-613.5'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=614.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=614.5:
				return 'UG614-614.5'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=615.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=620.0:
				return 'UG615-620'
			else:
				return 'UG1-620'
		elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=622.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1435.0:
			if len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=633.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=635.0:
				return 'UG633-635'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=637.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=639.0:
				return 'UG637-639'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=640.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=645.0:
				return 'UG640-645'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.0:
				return 'UG700-705'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=730.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=735.0:
				return 'UG730-735'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=760.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=765.0:
				return 'UG760-765'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=770.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1045.0:
				return 'UG770-1045'
			elif (loc=='UG1097') or (len(loc)>6 and loc[:6]=='UG1097' and not loc[6].isdigit()):
				return 'UG1097'
			elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1435.0:
				return 'UG1100-1435'
			else:
				return 'UG622-1435'
		elif len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1530.0:
			if len(loc)>2 and loc[:2]=='UG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1523.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1525.0:
				return 'UG1523-1525'
			else:
				return 'UG1500-1530'
		elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=910.0:
			if len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=25.0:
				return 'UH20-25'
			elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=515.0:
				return 'UH201-515'
			elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=520.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=560.0:
				return 'UH520-(560)'
			elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=629.5:
				return 'UH600-629.5'
			elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=705.0:
				return 'UH700-705'
			elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=769.0:
				return 'UH750-769'
			elif len(loc)>2 and loc[:2]=='UH' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=800.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=910.0:
				return 'UH800-910'
			else:
				return 'UH20-910'
		else:
			return 'U'
	elif loc[0]=='V':
		if len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
			if len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=25.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=55.0:
				return 'V25-55'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=165.0:
				return 'V160-165'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=167.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=178.0:
				return 'V167-178'
			elif (loc=='V200') or (len(loc)>4 and loc[:4]=='V200' and not loc[4].isdigit()):
				return 'V200'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=210.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=214.5:
				return 'V210-214.5'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
				return 'V390-395'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=396.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=396.5:
				return 'V396-396.5'
			elif (loc=='V399') or (len(loc)>4 and loc[:4]=='V399' and not loc[4].isdigit()):
				return 'V399'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.0:
				return 'V400-695'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=720.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=743.0:
				return 'V720-743'
			elif len(loc)>1 and loc[:1]=='V' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=995.0:
				return 'V750-995'
			else:
				return 'V1-995'
		elif len(loc)>2 and loc[:2]=='VA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=750.0:
			if len(loc)>2 and loc[:2]=='VA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=395.0:
				return 'VA49-395'
			elif len(loc)>2 and loc[:2]=='VA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=750.0:
				return 'VA400-750'
			else:
				return 'VA10-750'
		elif len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=15.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=955.0:
			if len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'VB21-124'
			elif len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=170.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=187.0:
				return 'VB170-187'
			elif len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=275.0:
				return 'VB260-275'
			elif len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=307.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=309.0:
				return 'VB307-309'
			elif len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=315.0:
				return 'VB310-315'
			elif len(loc)>2 and loc[:2]=='VB' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=320.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=325.0:
				return 'VB320-325'
			else:
				return 'VB15-(955)'
		elif len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=10.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=580.0:
			if len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=258.0:
				return 'VC20-258'
			elif len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=260.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=268.0:
				return 'VC260-268'
			elif len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=270.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=279.0:
				return 'VC270-279'
			elif len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=280.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=345.0:
				return 'VC280-345'
			elif len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=410.0:
				return 'VC350-410'
			elif len(loc)>2 and loc[:2]=='VC' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=412.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=425.0:
				return 'VC412-425'
			else:
				return 'VC10-580'
		elif len(loc)>2 and loc[:2]=='VD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=430.0:
			if len(loc)>2 and loc[:2]=='VD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'VD21-124'
			elif len(loc)>2 and loc[:2]=='VD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'VD160-302'
			elif len(loc)>2 and loc[:2]=='VD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=335.0:
				return 'VD330-335'
			elif len(loc)>2 and loc[:2]=='VD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
				return 'VD360-390'
			elif len(loc)>2 and loc[:2]=='VD' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=400.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=405.0:
				return 'VD400-405'
			else:
				return 'VD7-430'
		elif len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=7.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=500.0:
			if len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=23.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'VE23-124'
			elif len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'VE160-302'
			elif len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=330.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=335.0:
				return 'VE330-335'
			elif len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=360.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=390.0:
				return 'VE360-390'
			elif len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=420.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=425.0:
				return 'VE420-425'
			elif len(loc)>2 and loc[:2]=='VE' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=430.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=435.0:
				return 'VE430-435'
			else:
				return 'VE7-500'
		elif len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=580.0:
			if len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=21.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'VF21-124'
			elif len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=160.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=302.0:
				return 'VF160-302'
			elif len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=310.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=315.0:
				return 'VF310-315'
			elif len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=346.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=348.0:
				return 'VF346-348'
			elif len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=350.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=375.0:
				return 'VF350-375'
			elif len(loc)>2 and loc[:2]=='VF' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=390.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=510.0:
				return 'VF390-510'
			else:
				return 'VF1-580'
		elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2029.0:
			if len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=20.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=25.0:
				return 'VG20-25'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=50.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=55.0:
				return 'VG50-55'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=70.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=85.0:
				return 'VG70-85'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=90.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=95.0:
				return 'VG90-95'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=100.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=475.0:
				return 'VG100-475'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=505.0:
				return 'VG500-505'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2005.0:
				return 'VG2000-2005'
			elif len(loc)>2 and loc[:2]=='VG' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2020.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2029.0:
				return 'VG2020-2029'
			else:
				return 'VG20-2029'
		elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1661.0:
			if len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=15.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'VK15-124'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=321.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=369.8:
				return 'VK321-369.8'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=381.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=397.0:
				return 'VK381-397'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=401.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=529.0:
				return 'VK401-529'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=549.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=572.0:
				return 'VK549-572'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=573.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=587.0:
				return 'VK573-587'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=588.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=597.0:
				return 'VK588-597'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=600.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=794.0:
				return 'VK600-794'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=798.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.0:
				return 'VK798-997'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1249.0:
				return 'VK1000-1249'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1250.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1299.0:
				return 'VK1250-1299'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1299.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1299.6:
				return 'VK1299.5-1299.6'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1300.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1491.0:
				return 'VK1300-1491'
			elif len(loc)>2 and loc[:2]=='VK' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1500.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1661.0:
				return 'VK1500-1661'
			else:
				return 'VK1-1661'
		elif len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
			if len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=15.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=124.0:
				return 'VM15-124'
			elif len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=165.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=276.0:
				return 'VM165-276'
			elif len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=295.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=296.0:
				return 'VM295-296'
			elif len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=298.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=301.0:
				return 'VM298.5-301'
			elif len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=311.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=466.0:
				return 'VM311-466'
			elif len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=595.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
				if len(loc)>2 and loc[:2]=='VM' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=975.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=989.0:
					return 'VM975-989'
				else:
					return 'VM595-989'
			else:
				return 'VM1-989'
		else:
			return 'V'
	elif loc[0]=='Z':
		if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.5:
			if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8.0:
				return 'Z4-8'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=40.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=104.5:
				if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=41.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=42.5:
					return 'Z41-42.5'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=43.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=45.0:
					return 'Z43-45'
				elif (loc=='Z48') or (len(loc)>3 and loc[:3]=='Z48' and not loc[3].isdigit()):
					return 'Z48'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=49.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=51.5:
					return 'Z49-51.5'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=52.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=52.5:
					return 'Z52-52.5'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=53.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=102.0:
					return 'Z53-102'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=102.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=104.5:
					return 'Z102.5-104.5'
				else:
					return 'Z40-104.5'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=105.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=115.5:
				return 'Z105-115.5'
			else:
				return 'Z4-115.5'
		elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=116.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=659.0:
			if (loc=='Z116.A2') or (len(loc)>7 and loc[:7]=='Z116.A2' and not loc[7].isdigit()):
				return 'Z116.A2'
			elif (loc=='Z116.A3') or (len(loc)>7 and loc[:7]=='Z116.A3' and not loc[7].isdigit()):
				return 'Z116.A3'
			elif loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.5 and (float(re.findall(r'\d+\.?\d*',loc)[0])>116 or (len(loc)>6 and loc[:6]=='Z116.A' and loc[6].isdigit() and float(loc[6:])>=5)):
				if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=124.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=228.0:
					return 'Z124-228'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=231.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=234.0:
					if (loc=='Z234') or (len(loc)>4 and loc[:4]=='Z234' and not loc[4].isdigit()):
						return 'Z234'
					else:
						return 'Z231-234'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=235.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=236.0:
					return 'Z235-236'
				elif (loc=='Z237') or (len(loc)>4 and loc[:4]=='Z237' and not loc[4].isdigit()):
					return 'Z237'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=240.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=241.5:
					return 'Z240-241.5'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=242.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=264.5:
					return 'Z242.9-264.5'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=265.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=265.5:
					return 'Z265-265.5'
				else:
					return 'Z116.A5-265.5'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=266.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=276.0:
				return 'Z266-276'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=278.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=549.0:
				return 'Z278-549'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=551.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=656.0:
				return 'Z551-656'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=657.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=659.0:
				return 'Z657-659'
			else:
				return 'Z116-659'
		elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=662.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1000.5:
			if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=662.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=664.0:
				return 'Z662-664'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=665.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=718.8:
				if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=668.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=669.7:
					return 'Z668-669.7'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=672.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=672.13:
					return 'Z672-672.13'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=674.7 and float(re.findall(r'\d+\.?\d*',loc)[0])<=674.83:
					return 'Z674.7-674.83'
				elif (loc=='Z675') or (len(loc)>4 and loc[:4]=='Z675' and not loc[4].isdigit()):
					return 'Z675'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=678.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=678.88:
					return 'Z678-678.88'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=678.89 and float(re.findall(r'\d+\.?\d*',loc)[0])<=678.892:
					return 'Z678.89-678.892'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=678.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=678.93:
					return 'Z678.9-678.93'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=679.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=680.0:
					return 'Z679-680'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=680.3 and float(re.findall(r'\d+\.?\d*',loc)[0])<=680.6:
					return 'Z680.3-680.6'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=681.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=681.3:
					return 'Z681-681.3'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=681.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=681.7:
					return 'Z681.5-681.7'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=682.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=682.4:
					return 'Z682-682.4'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=683.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=683.5:
					return 'Z683-683.5'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=684.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=685.0:
					return 'Z684-685'
				elif (loc=='Z686') or (len(loc)>4 and loc[:4]=='Z686' and not loc[4].isdigit()):
					return 'Z686'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=687.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=718.85:
					if (loc=='Z688') or (len(loc)>4 and loc[:4]=='Z688' and not loc[4].isdigit()):
						return 'Z688'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=688.5 and float(re.findall(r'\d+\.?\d*',loc)[0])<=688.6:
						return 'Z688.5-688.6'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=689.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=689.8:
						return 'Z689-689.8'
					elif (loc=='Z690') or (len(loc)>4 and loc[:4]=='Z690' and not loc[4].isdigit()):
						return 'Z690'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=691.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=692.0:
						return 'Z691-692'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=693.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.83:
						return 'Z693-695.83'
					elif (loc=='Z695.85') or (len(loc)>7 and loc[:7]=='Z695.85' and not loc[7].isdigit()):
						return 'Z695.85'
					elif (loc=='Z695.87') or (len(loc)>7 and loc[:7]=='Z695.87' and not loc[7].isdigit()):
						return 'Z695.87'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=695.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=695.94:
						return 'Z695.9-695.94'
					elif (loc=='Z695.95') or (len(loc)>7 and loc[:7]=='Z695.95' and not loc[7].isdigit()):
						return 'Z695.95'
					elif (loc=='Z695.98') or (len(loc)>7 and loc[:7]=='Z695.98' and not loc[7].isdigit()):
						return 'Z695.98'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=696.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=697.0:
						return 'Z696-697'
					elif (loc=='Z698') or (len(loc)>4 and loc[:4]=='Z698' and not loc[4].isdigit()):
						return 'Z698'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=699.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=699.5:
						return 'Z699-699.5'
					elif (loc=='Z699.7') or (len(loc)>6 and loc[:6]=='Z699.7' and not loc[6].isdigit()):
						return 'Z699.7'
					elif (loc=='Z700') or (len(loc)>4 and loc[:4]=='Z700' and not loc[4].isdigit()):
						return 'Z700'
					elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=700.9 and float(re.findall(r'\d+\.?\d*',loc)[0])<=701.5:
						return 'Z700.9-701.5'
					elif (loc=='Z702') or (len(loc)>4 and loc[:4]=='Z702' and not loc[4].isdigit()):
						return 'Z702'
					elif (loc=='Z703.5') or (len(loc)>6 and loc[:6]=='Z703.5' and not loc[6].isdigit()):
						return 'Z703.5'
					elif (loc=='Z703.6') or (len(loc)>6 and loc[:6]=='Z703.6' and not loc[6].isdigit()):
						return 'Z703.6'
					else:
						return 'Z687-718.85'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=711.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=711.95:
					return 'Z711-711.95'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=712.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=714.0:
					return 'Z712-714'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=716.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=716.15:
					return 'Z716-716.15'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=716.2 and float(re.findall(r'\d+\.?\d*',loc)[0])<=718.85:
					return 'Z716.2-718.85'
				else:
					return 'Z665-718.8'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=719.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=723.0:
				return 'Z719-723'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=729.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=875.0:
				return 'Z729-875'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=881.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=977.0:
				return 'Z881-977'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=987.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=996.3:
				return 'Z987-996.3'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=997.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=997.2:
				return 'Z997-997.2'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=999.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1000.5:
				return 'Z999-1000.5'
			else:
				return 'Z662-1000.5'
		elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1121.0:
			if (loc=='Z1001') or (len(loc)>5 and loc[:5]=='Z1001' and not loc[5].isdigit()):
				return 'Z1001'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1003.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1003.5:
				return 'Z1003-1003.5'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1003.8 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1004.0:
				return 'Z1003.8-1004'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1011.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1017.0:
				return 'Z1011-1017'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1019.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1033.0:
				return 'Z1019-1033'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1035.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1035.9:
				return 'Z1035-1035.9'
			elif (loc=='Z1036') or (len(loc)>5 and loc[:5]=='Z1036' and not loc[5].isdigit()):
				return 'Z1036'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1037.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1039.0:
				return 'Z1037-1039'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1041.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1107.0:
				return 'Z1041-1107'
			else:
				return 'Z1001-1121'
		elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4980.0:
			if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1946.0:
				if len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1215.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1363.0:
					return 'Z1215-1363'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1365.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1401.0:
					return 'Z1365-1401'
				elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=1411.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=1939.0:
					return 'Z1411-1939'
				else:
					return 'Z1201-1946'
			elif (loc=='Z1975') or (len(loc)>5 and loc[:5]=='Z1975' and not loc[5].isdigit()):
				return 'Z1975'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=2000.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=2959.0:
				return 'Z2000-2959'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3496.0:
				return 'Z3001-3496'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3501.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3975.0:
				return 'Z3501-3975'
			elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4980.0:
				return 'Z4001-4980'
			else:
				return 'Z1201-4980'
		elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5051.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=7999.0:
			return 'Z5051-7999'
		elif len(loc)>1 and loc[:1]=='Z' and loc[1].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=8001.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=8999.0:
			return 'Z8001-8999'
		elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3038.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5190.0:
			if len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3159.0:
				return 'ZA3150-3159'
			elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=3201.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=3250.0:
				return 'ZA3201-3250'
			elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4775.0:
				if len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4050.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4480.0:
					if len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4150.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4380.0:
						return 'ZA4150-4380'
					elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4450.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4460.0:
						return 'ZA4450-4460'
					else:
						return 'ZA4050-4480'
				elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4550.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4575.0:
					return 'ZA4550-4575'
				elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4650.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4675.0:
					return 'ZA4650-4675'
				elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=4750.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=4775.0:
					return 'ZA4750-4775'
				else:
					return 'ZA4050-4775'
			elif len(loc)>2 and loc[:2]=='ZA' and loc[2].isdigit() and float(re.findall(r'\d+\.?\d*',loc)[0])>=5049.0 and float(re.findall(r'\d+\.?\d*',loc)[0])<=5190.0:
				return 'ZA5049-5190'
			else:
				return 'ZA3038-5190'
		else:
			return 'Z'
	else:
		return 'Books'
